import{_ as n,e as s}from"./app.873f0dc8.js";const a={},p=s(`<h1 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h1><h2 id="\u6982\u8981" tabindex="-1"><a class="header-anchor" href="#\u6982\u8981" aria-hidden="true">#</a> \u6982\u8981</h2><p>String()\u6784\u9020\u51FD\u6570\u7528\u4E8E\u521B\u5EFA\u5B57\u7B26\u4E32\u5BF9\u8C61\u548C\u5B57\u7B26\u4E32\u539F\u59CB\u503C</p><h2 id="\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> \u5C5E\u6027\u548C\u65B9\u6CD5</h2><p>\u5B57\u7B26\u4E32\u5BF9\u8C61\u5177\u6709\u4EE5\u4E0B\u5C5E\u6027\u548C\u65B9\u6CD5\uFF08\u4E0D\u5305\u62EC\u7EE7\u627F\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF09</p><h3 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> <strong>\u5C5E\u6027</strong></h3><ul><li>prototype</li></ul><h3 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> <strong>\u65B9\u6CD5</strong></h3><ul><li>froCharCode()</li></ul><h2 id="\u5B9E\u4F8B\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u5C5E\u6027\u548C\u65B9\u6CD5</h2><h3 id="\u5B9E\u4F8B\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u5C5E\u6027" aria-hidden="true">#</a> <strong>\u5B9E\u4F8B\u5C5E\u6027</strong></h3><ul><li>constructor</li><li>length</li></ul><h3 id="\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> <strong>\u5B9E\u4F8B\u65B9\u6CD5</strong></h3><ul><li><p>slice()</p><ul><li><p><code>slice()</code> \u65B9\u6CD5\u63D0\u53D6\u67D0\u4E2A\u5B57\u7B26\u4E32\u7684\u4E00\u90E8\u5206\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u4E14\u4E0D\u4F1A\u6539\u52A8\u539F\u5B57\u7B26\u4E32</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;The quick brown fox jumps over the lazy dog.&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the lazy dog.</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// quick brown fox</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul></li><li><p>substr()</p><ul><li><p><code>substr()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u4ECE\u6307\u5B9A\u4F4D\u7F6E\u5F00\u59CB\u5230\u6307\u5B9A\u5B57\u7B26\u4E32\u7684\u5B57\u7B26</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;abcdefghig&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;(1,2): &#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (1,2): bc</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;(1): &#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>PS: \u672A\u6765\u53EF\u80FD\u4F1A\u88AB\u79FB\u9664\u6389\uFF0C\u5982\u679C\u53EF\u4EE5\u7684\u82B1\uFF0C\u4F7F\u7528 <code>substring()</code> \u4EE3\u66FF\u5B83</p></li></ul></li><li><p>substring()</p><ul><li><p><code>substring()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u5728\u5F00\u59CB\u7D22\u5F15\u5230\u7ED3\u675F\u7D22\u5F15\u4E4B\u95F4\u7684\u4E00\u4E2A\u5B50\u96C6\uFF0C\u6216\u4ECE\u5F00\u59CB\u7D22\u5F15\u77E5\u9053\u5B57\u7B26\u4E32\u7684\u672B\u5C3E\u7684\u4E00\u4E2A\u5B50\u96C6</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token punctuation">(</span>anyString <span class="token operator">=</span> <span class="token string">&#39;Mozilla&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Moz</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anyString<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Moz</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></li><li><p>concat()</p><ul><li><p><code>concat()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5B57\u7B26\u4E32\u4E0E\u539F\u5B57\u7B26\u4E32\u8FDE\u63A5\u5408\u5E76\uFF0C\u5F62\u6210\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\u5E76\u8FD4\u56DE</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> hello <span class="token operator">=</span> <span class="token string">&#39;Hello, &#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;Kevin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; have a nice day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello, Kevin have a nice day</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul></li><li><p>indexOf()</p><ul><li><p><code>indexOf</code> \u65B9\u6CD5\u8FD4\u56DE\u8C03\u7528\u5B83\u7684 <code>String</code> \u5BF9\u8C61\u4E2D\u7B2C\u4E00\u6B21\u51FA\u73B0\u7684\u6307\u5B9A\u503C\u7684\u7D22\u5F15\uFF0C\u4ECE <code>fromIndex</code> \u5904\u8FDB\u884C\u641C\u7D22\u3002\u5982\u679C\u672A\u627E\u5230\u8BE5\u503C\uFF0C\u5219\u8FD4\u56DE -1 \u3002</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> question <span class="token operator">=</span> <span class="token string">&#39;How Are You&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>replace()</p><ul><li><p><code>replace()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u7531\u66FF\u6362\u503C\uFF08replacement\uFF09\u66FF\u6362\u4E00\u4E9B\u6216\u6240\u6709\u5339\u914D\u7684\u6A21\u5F0F\uFF08pattern\uFF09\u540E\u7684\u65B0\u5B57\u7B26\u4E32\u3002\u6A21\u5F0F\u53EF\u4EE5\u4F7F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u8005\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u66FF\u6362\u503C\u53EF\u4EE5\u4F7F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u8005\u4E00\u4E2A\u6BCF\u6B21\u5339\u914D\u90FD\u8981\u8C03\u7528\u7684\u56DE\u8C03\u51FD\u6570\u3002</p></li><li><p>\u539F\u5B57\u7B26\u4E32\u4E0D\u4F1A\u6539\u53D8</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;OK, I am fine&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">I</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;Johan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  &quot;OK, Johan am fine&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>toString()</p><ul><li><p><code>toString()</code> \u65B9\u6CD5\u8FD4\u56DE\u6307\u5B9A\u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u5F62\u5F0F</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>toString<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello World</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul></li><li><p>valueOf()</p><ul><li><p><code>valueOf()</code> \u65B9\u6CD5\u8FD4\u56DE <code>String</code> \u5BF9\u8C61\u7684\u539F\u59CB\u503C</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> stringObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringObj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// String { &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringObj<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>charAt()</p><ul><li><p><code>charAt()</code> \u65B9\u6CD5\u4ECE\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u8FD4\u56DE\u6307\u5B9A\u7684\u5B57\u7B26</p></li><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> anyString <span class="token operator">=</span> <span class="token string">&#39;Brave new world&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token string">&quot;The character at index 0   is &#39;&quot;</span> <span class="token operator">+</span> anyString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//The character at index 0 is &#39;B&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul></li><li><p>charCodeAt()</p></li><li><p>lastIndexOf()</p></li><li><p>localeCompare()</p></li><li><p>match()</p></li><li><p>quote()</p></li><li><p>search()</p></li><li><p>toLocaleLowerCase()</p></li><li><p>toLocaleUpperCase()</p></li><li><p>toLowerCase()</p></li><li><p>toUpperCase()</p></li></ul>`,14);function t(e,o){return p}var l=n(a,[["render",t],["__file","\u5B57\u7B26\u4E32.html.vue"]]);export{l as default};
