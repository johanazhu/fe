import{_ as l,r as c,o as u,c as r,a as s,d as a,w as t,F as i,b as n,e}from"./app.873f0dc8.js";const k={},b=s("h1",{id:"\u4E00\u6B65\u4E00\u6B65\u6765-\u624B\u5199-koa2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u4E00\u6B65\u4E00\u6B65\u6765-\u624B\u5199-koa2","aria-hidden":"true"},"#"),n(" \u4E00\u6B65\u4E00\u6B65\u6765\uFF1A\u624B\u5199 Koa2")],-1),d=n("\u4E4B\u524D\u8BB2\u8FC7"),m=n("\u4EC0\u4E48\u662F Koa2"),y=n("\uFF0C\u4EE5\u53CA"),w=n("\u6E90\u7801\u89E3\u8BFB"),h=e(`<p>\u8FD9\u7BC7\u6587\u7AE0\u8BB2\u89E3\u5982\u4F55\u624B\u5199\u4E00\u4E2A Koa2</p><h2 id="step-1-\u5C01\u88C5-http-\u670D\u52A1\u548C\u521B\u5EFA-koa-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#step-1-\u5C01\u88C5-http-\u670D\u52A1\u548C\u521B\u5EFA-koa-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> Step 1\uFF1A\u5C01\u88C5 HTTP \u670D\u52A1\u548C\u521B\u5EFA Koa \u6784\u9020\u51FD\u6570</h2><p>\u4E4B\u524D\u9605\u8BFB Koa2 \u7684\u6E90\u7801\u5F97\u77E5\uFF0C Koa \u7684\u670D\u52A1\u5E94\u7528\u662F\u57FA\u4E8E Node \u539F\u751F\u7684 HTTP \u6A21\u5757\uFF0C\u5BF9\u5176\u8FDB\u884C\u5C01\u88C5\u5F62\u6210\u7684\uFF0C\u6211\u4EEC\u5148\u7528\u539F\u751F Node \u5B9E\u73B0 HTTP \u670D\u52A1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u76D1\u542C3000\u7AEF\u53E3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u518D\u770B\u770B\u7528 Koa2 \u5B9E\u73B0 HTTP \u670D\u52A1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;Koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3000\u8BF7\u6C42\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5B9E\u73B0 Koa \u7684\u7B2C\u4E00\u6B65\uFF0C\u5C31\u662F\u5BF9 \u539F\u751F HTTP \u670D\u52A1\u8FDB\u884C\u5C01\u88C5\uFF0C\u6211\u4EEC\u6309\u7167 Koa \u6E90\u7801\u7684\u7ED3\u6784\uFF0C\u65B0\u5EFA <code>lib/application.js</code> \u6587\u4EF6\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>callbackFunc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">listen</span><span class="token punctuation">(</span><span class="token parameter">port</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>callbackFunc <span class="token operator">=</span> fn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callbackFunc</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Application<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u6211\u4EEC\u5F15\u5165\u624B\u5199\u7684 Koa\uFF0C\u5E76\u5199\u4E2A demo</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./lib/application&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3000\u8BF7\u6C42\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u542F\u52A8\u670D\u52A1\u540E\uFF0C\u5728\u6D4F\u89C8\u5668\u4E2D\u8F93\u5165 <code>http://localhost:3000</code>\uFF0C\u5185\u5BB9\u663E\u793A\u201DHello\uFF0CWorld\u201C</p><p>\u63A5\u7740\u6211\u4EEC\u6709\u4E24\u4E2A\u65B9\u5411\uFF0C\u4E00\u662F\u7B80\u5316 <code>res.writeHead(200)\u3001res.end(&#39;Hello world&#39;)</code> \uFF1B\u4E8C\u662F\u505A\u585E\u5165\u591A\u4E2A\u4E2D\u95F4\u4EF6\u3002\u8981\u60F3\u505A\u7B2C\u4E00\u4E2A\u70B9\u9700\u8981\u5148\u5199 context\uFF0Cresponse\uFF0Crequest \u6587\u4EF6\u3002\u505A\u7B2C\u4E8C\u70B9\u5176\u5B9E\u505A\u5230\u540E\u9762\u4E5F\u9700\u8981\u4F9D\u8D56 context\uFF0C\u6240\u4EE5\u6211\u4EEC\u5148\u505A\u7B80\u5316\u539F\u751F response\u3001request\uFF0C\u4EE5\u53CA\u5C06\u5B83\u96C6\u6210\u5230 context\uFF08ctx\uFF09\u5BF9\u8C61\u4E0A</p><h2 id="step-2-\u6784\u5EFA-request\u3001response\u3001context-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#step-2-\u6784\u5EFA-request\u3001response\u3001context-\u5BF9\u8C61" aria-hidden="true">#</a> Step 2\uFF1A\u6784\u5EFA request\u3001response\u3001context \u5BF9\u8C61</h2><p>request\u3001response\u3001context \u5BF9\u8C61\u5206\u522B\u5BF9\u5E94 request.js\u3001response.js\u3001context.js\uFF0Crequest.js \u5904\u7406\u8BF7\u6C42\u4F53\uFF0Cresponse.js \u5904\u7406\u54CD\u5E94\u4F53\uFF0Ccontext \u96C6\u6210\u4E86 request \u548C response</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// request</span>
<span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// response</span>
module<span class="token punctuation">.</span>exporrs <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_body<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">set</span> <span class="token function">body</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_body <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>res<span class="token punctuation">.</span>statusCode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">set</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token parameter">statusCode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> statusCode <span class="token operator">!==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;statusCode must be a number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> statusCode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,16),f=n("\u8FD9\u91CC\u6211\u4EEC\u5728 request \u4E2D\u53EA\u505A\u4E86 query \u5904\u7406\uFF0C\u5728 response \u4E2D\u53EA\u505A\u4E86 body\u3001status \u7684\u5904\u7406\u3002\u65E0\u8BBA\u662F request \u8FD8\u662F response\uFF0C\u6211\u4EEC\u90FD\u4F7F\u7528\u4E86 ES6 \u7684 get\u3001set\uFF0C\u5177\u4F53\u53EF\u4EE5\u53BB"),x=n("\u8FD9\u7BC7\u6587\u7AE0"),g=n("\u770B\u770B\uFF0C\u7B80\u5355\u6765\u8BF4\uFF0Cget/set \u5C31\u662F\u80FD\u5BF9\u4E00\u4E2A key \u8FDB\u884C\u53D6\u503C\u548C\u8D4B\u503C"),v=e(`<p>\u73B0\u5728\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u4E86 request\u3001response\uFF0C\u83B7\u53D6\u4E86 request\u3001response \u5BF9\u8C61\u548C\u5B83\u4EEC\u7684\u5C01\u88C5\u65B9\u6CD5\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u5199 context\u3002\u6211\u4EEC\u5728\u6E90\u7801\u5206\u6790\u65F6\u66FE\u7ECF\u8BF4\u8FC7\uFF0Ccontext \u7EE7\u627F\u4E86 request \u548C response \u5BF9\u8C61\u7684\u53C2\u6570\uFF0C\u65E2\u6709\u8BF7\u6C42\u4F53\u4E2D\u7684\u65B9\u6CD5\uFF0C\u53C8\u6709\u54CD\u5E94\u4F53\u4E2D\u7684\u65B9\u6CD5\uFF0C\u4F8B\u5982\u65E2\u80FD ctx.query \u67E5\u8BE2\u8BF7\u6C42\u4F53\u4E2D url \u4E0A\u7684\u53C2\u6570\uFF0C\u53C8\u80FD\u901A\u8FC7 ctx.body \u8FD4\u56DE\u6570\u636E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">set</span> <span class="token function">body</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">get</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span>status<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">set</span> <span class="token function">status</span><span class="token punctuation">(</span><span class="token parameter">statusCode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">=</span> statusCode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5728\u6E90\u7801\u4E2D\u4F7F\u7528\u4E86 delegate\uFF0C\u628A context \u4E2D\u7684 context.request\u3001context.response \u4E0A\u7684\u65B9\u6CD5\u4EE3\u7406\u5230\u4E86 context \u4E0A\uFF0C\u5373 context.request.query === context.query; context.response.body === context.body\u3002\u800C context.request\uFF0Ccontext.response \u5219\u662F\u5728 application \u4E2D\u6302\u8F7D</p><p>\u603B\u7ED3\u4E00\u4E0B\uFF1Arequest.js \u8D1F\u8D23\u7B80\u5316\u8BF7\u6C42\u4F53\u7684\u4EE3\u7801\uFF0Cresponse.js \u8D1F\u8D23\u7B80\u5316\u54CD\u5E94\u4F53\u7684\u4EE3\u7801\uFF0Ccontext.js \u628A\u8BF7\u6C42\u4F53\u548C\u54CD\u5E94\u4F53\u96C6\u6210\u5728\u4E00\u4E2A\u5BF9\u8C61\u4E0A\uFF0C\u5E76\u4E14\u90FD\u5728 application \u4E0A\u751F\u6210\uFF0C\u4FEE\u6539 application.js \u6587\u4EF6\uFF0C\u6DFB\u52A0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;context&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;response&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>callbackFunc
      	<span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context
    	<span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">=</span> request
    	<span class="token keyword">this</span><span class="token punctuation">.</span>response <span class="token operator">=</span> response
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
    <span class="token function">createConext</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ctx <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>request <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>response <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>req <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>req <span class="token operator">=</span> req
        ctx<span class="token punctuation">.</span>res <span class="token operator">=</span> ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>res <span class="token operator">=</span> res
        <span class="token keyword">return</span> ctx
    <span class="token punctuation">}</span>
	<span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u56E0\u4E3A context\u3001request\u3001response \u5728\u5176\u4ED6\u65B9\u6CD5\u4E2D\u8981\u7528\u5230\uFF0C\u6240\u4EE5\u6211\u4EEC\u5728\u6784\u9020\u5668\u4E2D\u5C31\u628A\u4ED6\u4EEC\u5206\u522B\u8D4B\u503C\u4E3A this.context\u3001this.request\u3001this.response \u3002\u6211\u4EEC\u5B9E\u73B0\u4E86\u4E0A\u4E0B\u6587 ctx \uFF0C\u73B0\u5728\u6211\u4EEC\u56DE\u5230\u4E4B\u524D\u7684\u95EE\u9898\uFF0C\u7B80\u5199 <code>res.writeHead(200)\u3001res.end(&#39;Hello world&#39;)</code></p><p>\u6211\u4EEC\u8981\u60F3\u628A <code>res.writeHead(200)\u3001res.end(&#39;Hello world&#39;)</code> \u7B80\u5316\u4E3A <code>ctx.body = &#39;Hello world&#39;</code>\uFF0C\u6539\u600E\u4E48\u505A\u5462\uFF1F</p><p><code>res.writeHead(200)\u3001res.end(&#39;Hello world&#39;)</code> \u662F\u539F\u751F\u7684\uFF0C <code>ctx.body = &#39;Hello world&#39;</code> \u662F Koa \u7684\u4F7F\u7528\u65B9\u6CD5\uFF0C\u6211\u4EEC\u8981\u5BF9 <code>ctx.body = &#39;Hello world&#39;</code> \u505A\u89E3\u6790\u5E76\u8F6C\u6362\u4E3A <code>res.writeHead(200)\u3001res.end(&#39;Hello world&#39;)</code> \u3002\u597D\u5728 ctx \u5DF2\u7ECF\u901A\u8FC7 createContext \u83B7\u53D6\uFF0C\u90A3\u4E48\u518D\u521B\u5EFA\u4E00\u4E2A\u65B9\u6CD5\u6765\u5C01\u88C5 res.end\uFF0C\u7528 ctx.body \u6765\u8868\u793A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">responseBody</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> context <span class="token operator">=</span> ctx<span class="token punctuation">.</span>body
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> context <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> context <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6700\u540E\u6211\u4EEC\u4FEE\u6539 callback \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//   callback() {</span>
<span class="token comment">//     return (req, res) =&gt; this.callbackFunc(req, res)</span>
<span class="token comment">//   }</span>
<span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u628A\u539F\u751F req,res \u5C01\u88C5\u4E3A ctx</span>
      <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
      <span class="token comment">// \u6267\u884C use \u4E2D\u7684\u51FD\u6570, ctx.body \u8D4B\u503C</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callbackFunc</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
      <span class="token comment">// \u5C01\u88C5 res.end\uFF0C\u7528 ctx.body \u8868\u793A</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">responseBody</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>PS\uFF1A\u5177\u4F53\u4EE3\u7801\uFF1A\u8BF7\u770B\u4ED3\u5E93\u4E2D\u7684 Step 2</p></blockquote><h2 id="step-3-\u4E2D\u95F4\u4EF6\u673A\u5236\u548C\u6D0B\u8471\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#step-3-\u4E2D\u95F4\u4EF6\u673A\u5236\u548C\u6D0B\u8471\u6A21\u578B" aria-hidden="true">#</a> Step 3\uFF1A\u4E2D\u95F4\u4EF6\u673A\u5236\u548C\u6D0B\u8471\u6A21\u578B</h2><p>\u6211\u4EEC\u77E5\u9053\uFF0C Koa2 \u4E2D\u6700\u91CD\u8981\u7684\u529F\u80FD\u662F\u4E2D\u95F4\u4EF6\uFF0C\u5B83\u7684\u8868\u73B0\u5F62\u5F0F\u662F\u53EF\u4EE5\u7528\u591A\u4E2A use\uFF0C\u6BCF\u4E00\u4E2A use \u65B9\u6CD5\u4E2D\u7684\u51FD\u6570\u5C31\u662F\u4E00\u4E2A\u4E2D\u95F4\u4EF6\uFF0C\u901A\u8FC7\u7B2C\u4E8C\u4E2A\u53C2\u6570 next \u6765\u8868\u793A\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u95F4\uFF0C\u4F8B\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7ED3\u679C 123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u6240\u4EE5\uFF0C\u6211\u4EEC\u7684\u4E2D\u95F4\u4EF6\u662F\u4E2A\u6570\u7EC4\uFF0C\u5176\u6B21\uFF0C\u901A\u8FC7 next \uFF0C\u6267\u884C\u548C\u6682\u505C\u6267\u884C\u3002\u4E00 next \uFF0C\u5C31\u6682\u505C\u672C\u4E2D\u95F4\u4EF6\u7684\u6267\u884C\uFF0C\u53BB\u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u3002</p><p>Koa \u7684\u6D0B\u8471\u6A21\u578B\u5728 Koa1 \u4E2D\u662F\u7528 generator + co.js \u5B9E\u73B0\u7684\uFF0C Koa2 \u5219\u4F7F\u7528\u4E86 async/await + Promise \u53BB\u5B9E\u73B0\u3002\u8FD9\u6B21\u6211\u4EEC\u4E5F\u662F\u7528 async/await + Promise \u6765\u5B9E\u73B0</p><p>\u5728\u6E90\u7801\u5206\u6790\u65F6\uFF0C\u6211\u4EEC\u5C31\u8BF4\u4E86 Koa2 \u7684\u4E2D\u95F4\u4EF6\u5408\u6210\u662F\u72EC\u7ACB\u6210\u4E00\u4E2A\u5E93\uFF0C\u5373 koa-compose\uFF0C\u5B83\u7684\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,19),_=n("\u5177\u4F53\u89E3\u8BFB\u53EF\u4EE5\u53BB"),q=n("\u6E90\u7801\u5206\u6790"),j=n("\u4E0A\u67E5\u770B\uFF0C\u8FD9\u91CC\u6211\u4EEC\u4E0D\u505A\u63A2\u7A76"),K=e(`<p>\u8FD9\u91CC\u8D34\u4E24\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u5176\u5B9E\u90FD\u662F\u9012\u5F52\u5B83</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">componse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">createNext</span><span class="token punctuation">(</span><span class="token parameter">middleware<span class="token punctuation">,</span> oldNext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">await</span> <span class="token function">middleware</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> oldNext<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>middlewares<span class="token punctuation">.</span>length
      <span class="token keyword">let</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> currentMiddleware <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>middlewares<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        next <span class="token operator">=</span> <span class="token function">createNext</span><span class="token punctuation">(</span>currentMiddleware<span class="token punctuation">,</span> next<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8FD8\u6709\u4E00\u79CD\u5C31\u662F\u6E90\u7801\uFF0C\u5173\u4E8E compose \u51FD\u6570\uFF0C\u7B14\u8005\u8FD8\u4E0D\u80FD\u5F88\u597D\u7684\u5199\u51FA\u4E2A\u6240\u4EE5\u7136\uFF0C\u8BFB\u8005\u4EEC\u8BF7\u81EA\u884C\u7406\u89E3</p><h2 id="step-4-\u9519\u8BEF\u6355\u83B7\u4E0E\u76D1\u542C\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#step-4-\u9519\u8BEF\u6355\u83B7\u4E0E\u76D1\u542C\u673A\u5236" aria-hidden="true">#</a> Step 4\uFF1A\u9519\u8BEF\u6355\u83B7\u4E0E\u76D1\u542C\u673A\u5236</h2><p>\u4E2D\u95F4\u4EF6\u4E2D\u7684\u9519\u8BEF\u4EE3\u7801\u5982\u4F55\u6355\u83B7\uFF0C\u56E0\u4E3A\u4E2D\u95F4\u4EF6\u8FD4\u56DE\u7684\u662F Promise \u5B9E\u4F8B\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u9700\u8981 catch \u9519\u8BEF\u5904\u7406\u5C31\u597D\uFF0C\u6DFB\u52A0 onerror \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">onerror</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;ENOENT&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">404</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">500</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> msg <span class="token operator">=</span> ctx<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;Internal error&#39;</span>
    ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token function-variable function">respond</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">responseBody</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
      <span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onerror</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
      <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">componse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token operator">+</span> <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>respond<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onerror<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u6211\u4EEC\u73B0\u5728\u53EA\u662F\u5BF9\u4E2D\u95F4\u4EF6\u90E8\u5206\u505A\u4E86\u9519\u8BEF\u6355\u83B7\uFF0C\u4F46\u662F\u5982\u679C\u5176\u4ED6\u5730\u65B9\u5199\u9519\u4E86\u4EE3\u7801\uFF0C\u600E\u4E48\u77E5\u9053\u4EE5\u53CA\u901A\u77E5\u7ED9\u5F00\u53D1\u8005\uFF0CNode \u63D0\u4F9B\u4E86\u4E00\u4E2A\u539F\u751F\u6A21\u5757\u2014\u2014events\uFF0C\u6211\u4EEC\u7684 Application \u7C7B\u7EE7\u627F\u5B83\u5C31\u80FD\u83B7\u53D6\u5230\u76D1\u542C\u529F\u80FD\uFF0C\u8FD9\u6837\uFF0C\u5F53\u670D\u52A1\u5668\u4E0A\u6709\u9519\u8BEF\u53D1\u751F\u65F6\u5C31\u80FD\u5168\u90E8\u6355\u83B7</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6211\u4EEC\u5148\u8BFB\u4E86 Koa2 \u7684\u6E90\u7801\uFF0C\u77E5\u9053\u540E\u5176\u6570\u636E\u7ED3\u6784\u53CA\u4F7F\u7528\u65B9\u5F0F\u540E\uFF0C\u518D\u6E10\u8FDB\u5F0F\u624B\u5199\u4E86\u4E00\u4E2A\uFF0C\u8FD9\u91CC\u7279\u522B\u611F\u8C22\u7B2C\u4E00\u540D\u5C0F\u874C\u86AA\u7684 KOA2 \u6846\u67B6\u539F\u7406\u89E3\u6790\u548C\u5B9E\u73B0\uFF0C\u4ED6\u7684\u8FD9\u7BC7\u6587\u7AE0\u662F\u6211\u5199 Koa2 \u6587\u7AE0\u7684\u4F9D\u636E\u3002\u8BF4\u56DE Koa2\uFF0C\u5B83\u7684\u529F\u80FD\u7279\u522B\u7B80\u5355\uFF0C\u5C31\u662F\u5BF9\u539F\u751F req\uFF0Cres \u505A\u4E86\u5904\u7406\uFF0C\u8BA9\u5F00\u53D1\u8005\u80FD\u66F4\u5BB9\u6613\u7684\u5199\u4EE3\u7801\uFF1B\u9664\u6B64\u4E4B\u5916\uFF0C\u5F15\u5165\u4E2D\u95F4\u4EF6\u6982\u5FF5\uFF0C\u8FD9\u5C31\u50CF\u63D2\u4EF6\uFF0C\u5F15\u5165\u5373\u53EF\u4F7F\u7528\uFF0C\u4E0D\u9700\u8981\u65F6\u80FD\u51CF\u5C11\u4EE3\u7801\uFF0C\u8F7B\u91CF\u5927\u6982\u5C31\u662F Koa2 \u7684\u5173\u952E\u5B57\u5427</p>`,9),H=n("GitHub \u5730\u5740\uFF1A"),E={href:"https://github.com/johanazhu/jo-koa2",target:"_blank",rel:"noopener noreferrer"},C=n("https://github.com/johanazhu/jo-koa2"),N=s("h2",{id:"\u53C2\u8003\u8D44\u6599",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u53C2\u8003\u8D44\u6599","aria-hidden":"true"},"#"),n(" \u53C2\u8003\u8D44\u6599")],-1),P={href:"https://segmentfault.com/a/1190000018488597",target:"_blank",rel:"noopener noreferrer"},A=n("KOA2 \u6846\u67B6\u539F\u7406\u89E3\u6790\u548C\u5B9E\u73B0");function S(T,B){const p=c("RouterLink"),o=c("ExternalLinkIcon");return u(),r(i,null,[b,s("p",null,[d,a(p,{to:"/Koa2/Koa2%E5%9F%BA%E7%A1%80.html"},{default:t(()=>[m]),_:1}),y,a(p,{to:"/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html"},{default:t(()=>[w]),_:1})]),h,s("p",null,[f,a(p,{to:"/ES6/"},{default:t(()=>[x]),_:1}),g]),v,s("p",null,[_,a(p,{to:"/Koa2/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html"},{default:t(()=>[q]),_:1}),j]),K,s("p",null,[H,s("a",E,[C,a(o)])]),N,s("ul",null,[s("li",null,[s("a",P,[A,a(o)])])])],64)}var O=l(k,[["render",S],["__file","\u624B\u5199Koa2.html.vue"]]);export{O as default};
