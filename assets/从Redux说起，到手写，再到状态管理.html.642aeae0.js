import{_ as e,r as o,o as c,c as l,a as n,d as p,F as u,e as t,b as s}from"./app.873f0dc8.js";const r={},i=t('<h1 id="\u4ECE-redux-\u8BF4\u8D77-\u5230\u624B\u5199-\u518D\u5230\u72B6\u6001\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u4ECE-redux-\u8BF4\u8D77-\u5230\u624B\u5199-\u518D\u5230\u72B6\u6001\u7BA1\u7406" aria-hidden="true">#</a> \u4ECE Redux \u8BF4\u8D77\uFF0C\u5230\u624B\u5199\uFF0C\u518D\u5230\u72B6\u6001\u7BA1\u7406</h1><blockquote><p>\u5B66\u4E60\u4E00\u4E2A\u4E1C\u897F\u4E4B\u524D\uFF0C\u9996\u5148\u5728\u5927\u8111\u4E2D\u79EF\u7D2F\u5145\u5206\u7684\u201C\u7591\u60D1\u611F\u201D\u3002\u5373\u5F04\u6E05\u9762\u4E34\u7684\u95EE\u9898\u5230\u5E95\u662F\u4EC0\u4E48\uFF0C\u518D\u6D4F\u89C8\u65B9\u6CD5\u672C\u8EAB\u4E4B\u524D\uFF0C\u6700\u597D\u5148\u4F7F\u52B2\u95EE\u95EE\u90FD\u60F3\u5230\u4EC0\u4E48\u65B9\u6CD5\u3002\u4E00\u4E2A\u516C\u8BA4\u7684\u4E8B\u5B9E\u662F\uFF0C\u4F60\u5BF9\u95EE\u9898\u7684\u7591\u60D1\u8D8A\u5927\uFF0C\u5728\u4E4B\u524D\u505A\u7684\u81EA\u5DF1\u7684\u601D\u8003\u8D8A\u591A\uFF0C\u5F53\u770B\u5230\u89E3\u7B54\u4E4B\u540E\u5370\u8C61\u5C31\u8D8A\u6DF1\u523B</p></blockquote><h2 id="\u5148\u8BF4\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u5148\u8BF4\u7ED3\u8BBA" aria-hidden="true">#</a> \u5148\u8BF4\u7ED3\u8BBA</h2><ol><li>Redux \u662F\u72B6\u6001\u7BA1\u7406\u5E93\uFF0C\u4E5F\u662F\u4E00\u79CD\u67B6\u6784</li><li>Redux \u4E0E React \u65E0\u5173\uFF0C\u4F46\u5B83\u662F\u4E3A\u4E86\u89E3\u51B3 React \u7EC4\u4EF6\u4E2D\u72B6\u6001\u65E0\u6CD5\u5171\u4EAB\u800C\u51FA\u7684\u4E00\u79CD\u89E3\u51B3\u65B9\u6848</li><li>\u5355\u7EAF\u7684 Redux \u53EA\u662F\u4E00\u4E2A\u72B6\u6001\u673A\uFF0C store \u4E2D\u5B58\u653E\u4E86\u6240\u6709\u7684\u72B6\u6001 state\uFF0C\u8981\u60F3\u6539\u53D8\u91CC\u9762\u7684\u72B6\u6001 state\uFF0C\u53EA\u80FD dispatch \u4E00\u4E2A\u52A8\u4F5C</li><li>\u53D1\u51FA\u53BB\u7684 action \u9700\u8981\u7528 reducer \u6765\u5904\u7406\uFF0C\u4F20\u5165 state \u548C action\uFF0C\u8FD4\u56DE\u65B0\u7684 state</li><li>subscribe \u65B9\u6CD5\u53EF\u4EE5\u6CE8\u518C\u56DE\u8C03\u65B9\u6CD5\uFF0C\u5F53 dispatch action \u7684\u65F6\u5019\u4F1A\u6267\u884C\u91CC\u9762\u7684\u56DE\u8C03</li><li>Redux \u5176\u5B9E\u662F\u4E00\u4E2A\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F</li><li>Redux \u652F\u6301 enhancer\uFF0Cenhancer \u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u88C5\u9970\u5668\u6A21\u5F0F\uFF0C\u4F20\u5165\u5F53\u524D\u7684 createStore\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u589E\u5F3A\u7684 createStore</li><li>Redux \u4F7F\u7528 applyMiddleware \u51FD\u6570\u652F\u6301\u4E2D\u95F4\u4EF6\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A enhancer</li><li>Redux \u7684\u4E2D\u95F4\u4EF6\u4E5F\u662F\u4E00\u4E2A\u88C5\u9970\u5668\u6A21\u5F0F\uFF0C\u4F20\u5165\u5F53\u524D\u7684 dispatch\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u589E\u5F3A\u4E86\u7684 dispatch</li><li>\u5355\u7EAF\u7684 Redux \u662F\u6CA1\u6709 View \u5C42\u7684</li></ol><h2 id="\u4E3A\u4EC0\u4E48\u51FA\u73B0-redux" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u51FA\u73B0-redux" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u51FA\u73B0 Redux\uFF1F</h2><p>\u6211\u4EEC\u9ED8\u8BA4\u4F7F\u7528 React \u6280\u672F\u6808\uFF0C\u5F53\u9875\u9762\u5C11\u4E14\u7B80\u5355\u65F6\uFF0C\u5B8C\u5168\u6CA1\u5FC5\u8981\u4F7F\u7528 Redux\u3002Redux \u7684\u51FA\u73B0\uFF0C\u662F\u4E3A\u4E86\u5E94\u5BF9\u590D\u6742\u7EC4\u4EF6\u7684\u60C5\u51B5\u3002\u5373\u5F53\u7EC4\u4EF6\u590D\u6742\u5230\u4E09\u5C42\u751A\u81F3\u56DB\u5C42\u65F6\uFF08\u5982\u4E0B\u56FE\uFF09\uFF0C\u7EC4\u4EF6 4 \u60F3\u6539\u53D8\u7EC4\u4EF6 1 \u7684\u72B6\u6001</p><p><img src="https://i.loli.net/2021/12/01/HruEAivF4DsxNcq.png" alt="react \u7EC4\u4EF6\u6811"></p><p>\u6309\u7167 React \u7684\u505A\u6CD5\uFF0C\u72B6\u6001\u63D0\u5347\uFF0C\u5C06\u72B6\u6001\u63D0\u5347\u81F3\u540C\u4E00\u7236\u7EC4\u4EF6\uFF08\u5728\u56FE\u4E2D\u4E3A\u7956\u7236\u7EC4\u4EF6\uFF09\u3002\u4F46\u5C42\u7EA7\u4E00\u591A\uFF0C\u6839\u7EC4\u4EF6\u8981\u7BA1\u7406\u7684 state \u5C31\u5F88\u591A\u4E86\uFF0C\u4E0D\u65B9\u4FBF\u7BA1\u7406\u3002</p><p>\u6240\u4EE5\u5F53\u521D\u6709\u4E86 context\uFF08React 0.14 \u786E\u5B9A\u5F15\u5165\uFF09\uFF0C\u901A\u8FC7 context \u80FD\u5B9E\u73B0\u201D\u8FDC\u623F\u7EC4\u4EF6\u201C\u7684\u6570\u636E\u5171\u4EAB\u3002\u4F46\u5B83\u4E5F\u6709\u7F3A\u70B9\uFF0C\u4F7F\u7528 context \u610F\u5473\u7740\u6240\u6709\u7684\u7EC4\u4EF6\u90FD\u53EF\u4EE5\u4FEE\u6539 context \u91CC\u9762\u7684\u72B6\u6001\uFF0C\u5C31\u50CF\u8C01\u90FD\u53EF\u4EE5\u4FEE\u6539\u5171\u4EAB\u72B6\u6001\u4E00\u6837\uFF0C\u5BFC\u81F4\u7A0B\u5E8F\u8FD0\u884C\u7684\u4E0D\u53EF\u9884\u6D4B\uFF0C\u8FD9\u4E0D\u662F\u6211\u4EEC\u60F3\u8981\u7684</p>',9),k=s("facebook \u63D0\u51FA\u4E86 "),b={href:"https://facebook.github.io/flux/",target:"_blank",rel:"noopener noreferrer"},d=s("Flux"),m=s(" \u89E3\u51B3\u65B9\u6848\uFF0C\u5B83\u5F15\u5165\u4E86"),g=n("a",{href:"#%E8%A1%A5%E5%85%85%EF%BC%9A%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81"},"\u5355\u5411\u6570\u636E\u6D41",-1),y=s("\u7684\u6982\u5FF5\uFF08\u6CA1\u9519\uFF0CReact \u6CA1\u6709\u5355\u5411\u6570\u636E\u6D41\u7684\u6982\u5FF5\uFF0CRedux \u662F\u96C6\u6210\u4E86 Flux \u7684\u5355\u5411\u6570\u636E\u6D41\u7406\u5FF5\uFF09\uFF0C\u67B6\u6784\u5982\u4E0B\u56FE\u6240\u793A\uFF1A"),h=n("p",null,[n("img",{src:"https://i.loli.net/2021/12/01/YzWmMoJCILsVZaE.png",alt:"Flux \u6D41\u7A0B\u56FE"})],-1),w=n("p",null,"\u8FD9\u91CC\u4E0D\u8868 Flux\u3002\u7B80\u5355\u7406\u89E3\uFF0C\u5728 Flux \u67B6\u6784\u4E2D\uFF0CView \u8981\u901A\u8FC7 Action \uFF08\u52A8\u4F5C\uFF09\u901A\u77E5 Dispatcher\uFF08\u6D3E\u53D1\u5668\uFF09\uFF0CDispatcher \u6765\u4FEE\u6539 Store\uFF0CStore \u518D\u4FEE\u6539 View",-1),f=n("p",null,"Flux \u7684\u95EE\u9898\u6216\u8005\u8BF4\u7F3A\u70B9\u5728\u54EA\uFF1F",-1),v=n("p",null,"store \u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\u5173\u7CFB\u3001\u96BE\u4EE5\u8FDB\u884C\u670D\u52A1\u5668\u7AEF\u6E32\u67D3\u3001 stores \u6DF7\u6742\u4E86\u903B\u8F91\u548C\u72B6\u6001",-1),x=n("p",null,"\u7B14\u8005\u5728\u5B66\u4E60\u7684 React \u6280\u672F\u6808\u65F6\u662F 2018 \u5E74\uFF0C\u90A3\u662F\u5DF2\u7136\u6D41\u884C React + Redux \u7684\u89E3\u51B3\u65B9\u6848\uFF0CFlux \u5DF2\u7ECF\u88AB\u6DD8\u6C70\u4E86\uFF0C\u4E86\u89E3 Flux \u662F\u4E3A\u4E86\u5F15\u51FA Redux",-1),j=n("h2",{id:"redux-\u7684\u51FA\u73B0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#redux-\u7684\u51FA\u73B0","aria-hidden":"true"},"#"),s(" Redux \u7684\u51FA\u73B0")],-1),S=n("p",null,"Redux \u4E3B\u8981\u89E3\u51B3\u72B6\u6001\u5171\u4EAB\u95EE\u9898",-1),R=n("p",null,"\u5B98\u7F51\uFF1ARedux \u662F JavaScript \u72B6\u6001\u5BB9\u5668\uFF0C\u5B83\u63D0\u4F9B\u53EF\u9884\u6D4B\u7684\u72B6\u6001\u7BA1\u7406",-1),_=s("\u5B83\u7684\u4F5C\u8005\u662F "),E={href:"https://overreacted.io/",target:"_blank",rel:"noopener noreferrer"},M=s("Dan Abramov"),C=t(`<p>\u5176\u67B6\u6784\u4E3A\uFF1A</p><p><img src="https://i.loli.net/2021/12/02/eFszAQYxwLNMKUt.png" alt="Redux \u6D41\u7A0B\u56FE"></p><p>\u53EF\u4EE5\u770B\u5F97\u51FA\uFF0CRedux \u53EA\u662F\u4E00\u4E2A\u72B6\u6001\u673A\uFF0C\u6CA1\u6709 View \u5C42\u3002\u5176\u8FC7\u7A0B\u53EF\u4EE5\u8FD9\u6837\u63CF\u8FF0\uFF1A</p><ul><li>\u81EA\u5DF1\u5199\u4E00\u4E2A reducer\uFF08\u7EAF\u51FD\u6570\uFF0C\u8868\u793A\u505A\u4EC0\u4E48\u52A8\u4F5C\u4F1A\u8FD4\u56DE\u4EC0\u4E48\u6570\u636E\uFF09</li><li>\u81EA\u5DF1\u5199\u4E00\u4E2A initState\uFF08store \u521D\u59CB\u503C\uFF0C\u53EF\u5199\u53EF\u4E0D\u5199\uFF09</li><li>\u901A\u8FC7 createStore \u751F\u6210 store\uFF0C\u6B64\u53D8\u91CF\u5305\u542B\u4E86\u4E09\u4E2A\u91CD\u8981\u7684\u5C5E\u6027 <ul><li>store.getState\uFF1A\u5F97\u5230\u552F\u4E00\u503C\uFF08\u4F7F\u7528\u4E86\u95ED\u5305\u8001\u54E5\uFF09</li><li>store.dispatch\uFF1A\u52A8\u4F5C\u884C\u4E3A\uFF08\u6539\u53D8 store \u4E2D\u6570\u636E\u7684\u552F\u4E00\u6307\u5B9A\u5C5E\u6027\uFF09</li><li>store.subscribe\uFF1A\u8BA2\u9605\uFF08\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF09</li></ul></li><li>\u901A\u8FC7 store.dispatch \u6D3E\u53D1\u4E00\u4E2A action</li><li>reducer \u5904\u7406 action \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 store</li><li>\u5982\u679C\u4F60\u8BA2\u9605\u8FC7\uFF0C\u5F53\u6570\u636E\u6539\u53D8\u65F6\uFF0C\u4F60\u4F1A\u6536\u5230\u901A\u77E5</li></ul><p>\u6309\u7167\u884C\u4E3A\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u53EF\u624B\u5199\u4E00\u4E2A Redux\uFF0C\u4E0B\u6587\u5728\u8868\uFF0C\u5148\u8BF4\u7279\u70B9</p><h3 id="\u4E09\u5927\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5927\u539F\u5219" aria-hidden="true">#</a> \u4E09\u5927\u539F\u5219</h3><ul><li>\u5355\u4E00\u6570\u636E\u6E90 <ul><li>\u6574\u4E2A\u5E94\u7528\u7684 \u5168\u5C40 state \u88AB\u50A8\u5B58\u5728\u4E00\u68F5 object tree \u4E2D\uFF0C\u5E76\u4E14\u8FD9\u4E2A object tree \u53EA\u5B58\u5728\u4E8E\u552F\u4E00\u4E00\u4E2A store \u4E2D</li></ul></li><li>State \u662F\u53EA\u8BFB\u7684 <ul><li>\u552F\u4E00\u6539\u53D8 state \u7684\u65B9\u6CD5\u5C31\u662F\u89E6\u53D1 action\uFF0Caction \u662F\u4E00\u4E2A\u7528\u4E8E\u63CF\u8FF0\u5DF2\u53D1\u751F\u65F6\u95F4\u7684\u666E\u901A\u5BF9\u8C61</li></ul></li><li>\u4F7F\u7528\u7EAF\u51FD\u6570\u6765\u6267\u884C\u4FEE\u6539 <ul><li>\u4E3A\u4E86\u63CF\u8FF0 action \u5982\u4F55\u6539\u53D8 state tree\uFF0C\u4F60\u9700\u8981\u7F16\u5199\u7EAF\u7684 reducers</li></ul></li></ul><p>\u4E09\u5927\u539F\u5219\u662F\u4E3A\u4E86\u66F4\u597D\u5730\u5F00\u53D1\uFF0C\u6309\u7167<a href="#%E8%A1%A5%E5%85%85%EF%BC%9A%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81">\u5355\u5411\u6570\u636E\u6D41</a>\u7684\u7406\u5FF5\uFF0C\u884C\u4E3A\u53D8\u5F97\u53EF\u56DE\u6EAF</p><p>\u8BA9\u6211\u4EEC\u52A8\u624B\u5199\u4E00\u4E2A Redux \u5427</p><h2 id="\u624B\u5199-redux" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-redux" aria-hidden="true">#</a> \u624B\u5199 redux</h2><p>\u6309\u7167\u884C\u4E3A\u8FC7\u7A0B\u548C\u539F\u5219\uFF0C\u6211\u4EEC\u8981\u907F\u514D\u6570\u636E\u7684\u968F\u610F\u4FEE\u6539\u3001\u884C\u4E3A\u7684\u53EF\u56DE\u6EAF\u7B49\u95EE\u9898</p><h3 id="\u57FA\u7840\u7248-23-\u884C\u4EE3\u7801\u8BA9\u4F60\u4F7F\u7528-redux" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7248-23-\u884C\u4EE3\u7801\u8BA9\u4F60\u4F7F\u7528-redux" aria-hidden="true">#</a> \u57FA\u7840\u7248\uFF1A23 \u884C\u4EE3\u7801\u8BA9\u4F60\u4F7F\u7528 redux</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createStore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> state <span class="token operator">=</span> initState<span class="token punctuation">;</span>
    <span class="token keyword">let</span> listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">subscribe</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">dispatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">getState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        getState<span class="token punctuation">,</span>
        dispatch<span class="token punctuation">,</span>
        subscribe<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u641E\u4E2A\u6D4B\u8BD5\u7528\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../redux/index.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><blockquote><p>PS\uFF1A\u4FFA\u662F\u5728 node \u4E2D\u4F7F\u7528 ES6 \u6A21\u5757\uFF0C\u9700\u8981\u5347\u7EA7 Node \u7248\u672C\u81F3 13.2.0</p></blockquote><h3 id="\u7B2C\u4E8C\u7248-\u96BE\u70B9\u7A81\u7834-\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u7248-\u96BE\u70B9\u7A81\u7834-\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> \u7B2C\u4E8C\u7248\uFF1A\u96BE\u70B9\u7A81\u7834\uFF1A\u4E2D\u95F4\u4EF6</h3><p>\u666E\u901A\u7684 Redux \u53EA\u80FD\u505A\u6700\u57FA\u7840\u5730\u6839\u636E\u52A8\u4F5C\u8FD4\u56DE\u6570\u636E\uFF0Cdispatch \u53EA\u662F\u4E00\u4E2A\u53D6\u6570\u636E\u7684\u547D\u4EE4\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// store \u4E2D\u7684 count + 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F46\u5728\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u6709\u65F6\u5019\u8981\u67E5\u770B\u65E5\u5FD7\u3001\u5F02\u6B65\u8C03\u7528\u3001\u8BB0\u5F55\u65E5\u5E38\u7B49</p><p>\u600E\u4E48\u529E\uFF0C\u505A\u6210\u63D2\u4EF6</p><p>\u5728 Redux \u4E2D\uFF0C\u7C7B\u4F3C\u7684\u6982\u5FF5\u53EB\u4E2D\u95F4\u4EF6</p><p><img src="https://i.loli.net/2021/12/03/xqXD5ynSbl6MWVu.png" alt="\u4E2D\u95F4\u4EF6"></p><p>Redux \u7684 createStore \u5171\u6709\u4E09\u4E2A\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">[</span>reducer<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>initial state<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>enhancer<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u7B2C\u4E09\u4E2A\u53C2\u6570\u4E3A enhancer\uFF0C\u610F\u4E3A\u589E\u5F3A\u5668\u3002\u5B83\u7684\u4F5C\u7528\u5C31\u662F\u4EE3\u66FF\u666E\u901A\u7684 createStore\uFF0C\u8F6C\u53D8\u6210\u4E3A\u9644\u52A0\u4E0A\u4E2D\u95F4\u4EF6\u7684 createStore\u3002\u6253\u51E0\u4E2A\u6BD4\u65B9\uFF1A</p><ul><li>\u6258\u5C3C\xB7\u65AF\u5854\u514B\u672C\u6765\u662F\u4E00\u4E2A\u666E\u901A\u6709\u94B1\u4EBA\uFF0C\u52A0\u4E0A\u589E\u5F3A\u5668\uFF08\u76D4\u7532\uFF09\u540E\uFF0C\u6210\u4E86\u94A2\u94C1\u4FA0</li><li>\u4E2D\u592E\u4E0B\u53D1\u4E00\u7B14\u6551\u707E\u6B3E\uFF0C\u52A0\u4E0A\u589E\u5F3A\u5668\uFF08\u5927\u5C0F\u5B98\u5458\u7684\u6253\u70B9\uFF09\u540E\uFF0C\u5230\u707E\u6C11\u624B\u4E0A\u7684\u94B1\u53EA\u6709\u4E00\u4E22\u4E22</li><li>\u8DEF\u98DE\u7528\u6B66\u88C5\u8272\u6253\u4EBA\uFF0C\u6B66\u88C5\u8272\u5C31\u662F\u4E00\u4E2A\u4E2D\u95F4\u4EF6</li></ul><p>enhancer \u8981\u505A\u7684\u5C31\u662F\uFF1A<strong>\u4E1C\u897F\u8FD8\u662F\u90A3\u4E2A\u4E1C\u897F\uFF0C\u53EA\u662F\u7ECF\u8FC7\u4E86\u4E00\u4E9B\u5DE5\u5E8F\uFF0C\u52A0\u5F3A\u4E86\u5B83</strong>\u3002\u8FD9\u4E9B\u5DE5\u5E8F\u7531 applyMiddleware \u51FD\u6570\u5B8C\u6210\u3002\u6309\u7167\u884C\u4E1A\u672F\u8BED\uFF0C\u5B83\u662F\u4E00\u4E2A<strong>\u88C5\u9970\u5668\u6A21\u5F0F</strong>\u3002\u5B83\u7684\u5199\u6CD5\u5927\u81F4\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">applyMiddleware</span><span class="token punctuation">(</span><span class="token operator">...</span>middlewares<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7ED3\u5408 createStore\uFF0C\u5C31\u662F</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reudcer<span class="token punctuation">,</span> initState<span class="token punctuation">,</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span><span class="token operator">...</span>middlewares<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5148\u5BF9 createStore \u8FDB\u884C\u6539\u9020\uFF0C\u5224\u65AD\u5F53\u6709 enhancer \u65F6\uFF0C\u6211\u4EEC\u9700\u4F20\u503C\u7ED9\u4E2D\u95F4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createStore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState<span class="token punctuation">,</span> enhancer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>enhancer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> newCreateStore <span class="token operator">=</span> <span class="token function">enhancer</span><span class="token punctuation">(</span>createStore<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">newCreateStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

	<span class="token keyword">let</span> state <span class="token operator">=</span> initState<span class="token punctuation">;</span>
    <span class="token keyword">let</span> listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u679C\u6709 enhancer \u7684\u8BDD\uFF0C\u5148\u4F20\u5165 createStore \u51FD\u6570\uFF0C\u751F\u6210\u7684 newCreateStore \u548C\u539F\u6765\u7684 createStore \u4E00\u6837\uFF0C\u4F1A\u6839\u636E reducer, initState \u751F\u6210 store\u3002\u53EF\u7B80\u5316\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>enhancer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">enhancer</span><span class="token punctuation">(</span>createStore<span class="token punctuation">)</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>PS\uFF1A\u4E3A\u4EC0\u4E48\u8981\u5199\u6210\u8FD9\u6837\uFF0C\u56E0\u4E3A redux \u662F\u6309\u7167\u51FD\u6570\u5F0F\u5199\u6CD5\u6765\u5199\u7684</p><p>\u4E3A\u4EC0\u4E48 createStore \u53EF\u4EE5\u88AB\u4F20\u503C\uFF0C\u56E0\u4E3A\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\uFF08\u8001\u94C1\u95ED\u5305\u4E86\uFF09</p></blockquote><p>\u8FD9\u6837\u6211\u4EEC\u7684 applyMiddleware \u81EA\u7136\u5C31\u660E\u786E\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">applyMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>middlewares</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">oldCreateStore</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">oldCreateStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span>
            <span class="token operator">...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\u7684 store \u8868\u793A\u7684\u662F\u666E\u901A\u7248\u4E2D\u7684 store\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u8981\u589E\u5F3A store \u4E2D\u7684\u5C5E\u6027</p><p>\u6211\u613F\u79F0\u4E4B\u4E3A\uFF1A\u4E94\u884C\u4EE3\u7801\u8BA9\u5973\u4EBA\u4E3A\u6211\u82B1\u4E86 18 \u4E07</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">applyMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>middlewares</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">oldCreateStore</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">oldCreateStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u4EE5\u4E0B\u4E3A\u65B0\u589E</span>
            <span class="token keyword">const</span> chain <span class="token operator">=</span> middlewares<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">middleware</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u83B7\u5F97\u8001 dispatch</span>
            <span class="token keyword">let</span> dispatch <span class="token operator">=</span> store<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span>
            chain<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7ED9\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u4F20\u5165\u539F\u6D3E\u53D1\u5668\uFF0C\u8D4B\u503C\u4E2D\u95F4\u4EF6\u6539\u9020\u540E\u7684dispatch</span>
                dispatch <span class="token operator">=</span> <span class="token function">middleware</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8D4B\u503C\u7ED9 store \u4E0A\u7684 dispatch</span>
            store<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> dispatch<span class="token punctuation">;</span>
            <span class="token keyword">return</span> store<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u73B0\u5728\u5199\u51E0\u4E2A\u4E2D\u95F4\u4EF6\u6765\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BB0\u5F55\u65E5\u5FD7</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">loggerMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this.state&#39;</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;action&#39;</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;next state&#39;</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BB0\u5F55\u5F02\u5E38</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">exceptionMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u62A5\u544A&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65F6\u95F4\u6233</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">timeMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5F15\u5165\u9879\u76EE\u4E2D\uFF0C\u5E76\u8FD0\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../redux/index.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
    loggerMiddleware<span class="token punctuation">,</span>
    exceptionMiddleware<span class="token punctuation">,</span>
    timeMiddleware<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./middleware.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
    reducer<span class="token punctuation">,</span>
    initState<span class="token punctuation">,</span>
    <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>loggerMiddleware<span class="token punctuation">,</span> exceptionMiddleware<span class="token punctuation">,</span> timeMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>\u8FD0\u884C\u53D1\u73B0\u5DF2\u7ECF\u5B9E\u73B0\u4E86 redux \u6700\u91CD\u8981\u7684\u529F\u80FD\u2014\u2014\u4E2D\u95F4\u4EF6</p><p><img src="https://i.loli.net/2021/12/03/F6l5Gfdow9OUSTn.png" alt="\u6D4B\u8BD5\u4EE3\u7801"></p><p>\u6765\u5206\u6790\u4E0B\u4E2D\u95F4\u4EF6\u7684\u51FD\u6570\u5F0F\u7F16\u7A0B\uFF0C\u4EE5 loggerMiddleware \u4E3A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">loggerMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this.state&#39;</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;action&#39;</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;next state&#39;</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728 applyMiddleware \u6E90\u7801\u4E2D\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> chain <span class="token operator">=</span> middlewares<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">middleware</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u76F8\u5F53\u4E8E\u7ED9\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u4F20\u503C\u666E\u901A\u7248\u7684 store</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> dispatch <span class="token operator">=</span> store<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span>
chain<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>dispatch <span class="token operator">=</span> <span class="token function">middleware</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u76F8\u5F53\u4E8E\u7ED9\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u5728\u4F20\u5165 store.dispatch\uFF0C\u4E5F\u5C31\u662F next\uFF0C<strong>\u539F dispatch = next</strong>\u3002\u8FD9\u4E2A\u65F6\u5019\u7684\u4E2D\u95F4\u4EF6\u5DF2\u7ECF\u672C\u6210\u54C1\u4E86\uFF0C\u4EE3\u7801\u4E2D\u7684 <code>(action) =&gt; {...}</code> \u5C31\u662F\u51FD\u6570 <code>const dispatch = (action) =&gt; {}</code>\u3002\u5F53\u4F60\u6267\u884C <code>dispatch({ type: XXX })</code> \u65F6\u6267\u884C\u4E2D\u95F4\u4EF6\u8FD9\u6BB5<code>(action) =&gt; {...}</code></p><blockquote><p>PS\uFF1A\u67EF\u91CC\u5316\u4E00\u5F00\u59CB\u6BD4\u8F83\u96BE\u7406\u89E3\uFF0C\u7528\u591A\u4E60\u60EF\u5C31\u6162\u6162\u80FD\u61C2</p></blockquote><h3 id="\u7B2C\u4E09\u7248-\u7ED3\u6784\u590D\u6742\u5316\u4E0E\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u7248-\u7ED3\u6784\u590D\u6742\u5316\u4E0E\u62C6\u5206" aria-hidden="true">#</a> \u7B2C\u4E09\u7248\uFF1A\u7ED3\u6784\u590D\u6742\u5316\u4E0E\u62C6\u5206</h3><p>\u4E2D\u95F4\u4EF6\u7406\u89E3\u8D77\u6765\u6216\u8BB8\u6709\u4E9B\u590D\u6742\uFF0C\u5148\u770B\u770B\u5176\u4ED6\u7684\u6982\u5FF5\u6362\u6362\u601D\u8DEF</p><p>\u4E00\u4E2A\u5E94\u7528\u505A\u5927\u540E\uFF0C\u5355\u9760\u4E00\u4E2A JavaScript \u6587\u4EF6\u6765\u7EF4\u62A4\u4EE3\u7801\u663E\u7136\u662F\u4E0D\u79D1\u5B66\u7684\uFF0C\u5728 Redux \u4E2D\uFF0C\u4E3A\u907F\u514D\u8FD9\u7C7B\u60C5\u51B5\uFF0C\u5B83\u63D0\u4F9B\u4E86 <code>combineReducers</code> \u6765\u6574\u4E2A\u591A\u4E2A reducer\uFF0C\u4F7F\u7528\u65B9\u6CD5\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token function">combinReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> counterReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> infoReducer<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728 <code>combinReducers</code> \u4E2D\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4EC0\u4E48\u6837\u7684 state \u5BF9\u5E94\u4EC0\u4E48\u6837\u7684 reducer\u3002\u8FD9\u5C31\u597D\u4E86\uFF0C\u90A3\u4E48 <code>combinReducers</code> \u600E\u4E48\u5B9E\u73B0\u5462\uFF1F\u56E0\u4E3A\u6BD4\u8F83\u7B80\u5355\uFF0C\u4E0D\u505A\u591A\u5206\u6790\uFF0C\u76F4\u63A5\u4E0A\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">combinReducers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>reducers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u62FF\u5230 counter\u3001info</span>
    <span class="token keyword">const</span> reducerKey <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>reducers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// combinReducers \u5408\u5E76\u7684\u662F reducer\uFF0C\u8FD4\u56DE\u7684\u8FD8\u662F\u4E00\u4E2A reducer\uFF0C\u6240\u4EE5\u8FD4\u56DE\u4E00\u6837\u7684\u4F20\u53C2</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> nextState <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5FAA\u73AF reducerKey\uFF0C\u4EC0\u4E48\u6837\u7684 state \u5BF9\u5E94\u4EC0\u4E48\u6837\u7684 reducer</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> reducerKey<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> key <span class="token operator">=</span> reducerKey<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> reducer <span class="token operator">=</span> reducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> previousStateForKey <span class="token operator">=</span> state<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> nextStateForKey <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>previousStateForKey<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
            nextState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> nextStateForKey<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> nextState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u540C\u7EA7\u76EE\u5F55\u4E0B\u65B0\u5EFA\u4E00\u4E2A reducer \u6587\u4EF6\u5939\uFF0C\u5E76\u65B0\u5EFA <code>reducer.js</code>\u3001<code>info.js</code>\u3001<code>index.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// reducer.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// info.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;SET_NAME&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> action<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;SET_DESCRIPTION&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">description</span><span class="token operator">:</span> action<span class="token punctuation">.</span>description<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5408\u5E76\u5BFC\u51FA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> counterReducer <span class="token keyword">from</span> <span class="token string">&#39;./counter.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> infoReducer <span class="token keyword">from</span> <span class="token string">&#39;./info.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> counterReducer<span class="token punctuation">,</span> infoReducer <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6211\u4EEC\u73B0\u5728\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
    createStore<span class="token punctuation">,</span>
    applyMiddleware<span class="token punctuation">,</span>
    combinReducers<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../redux/index.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
    loggerMiddleware<span class="token punctuation">,</span>
    exceptionMiddleware<span class="token punctuation">,</span>
    timeMiddleware<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./middleware.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> counterReducer<span class="token punctuation">,</span> infoReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reducer/index.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;johan&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;\u524D\u7AEF\u4E4B\u864E&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token function">combinReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> counterReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> infoReducer<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
    reducer<span class="token punctuation">,</span>
    initState<span class="token punctuation">,</span>
    <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>loggerMiddleware<span class="token punctuation">,</span> exceptionMiddleware<span class="token punctuation">,</span> timeMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p><code>combinReducers</code> \u4E5F\u5B8C\u6210\u4E86</p><p><img src="https://i.loli.net/2021/12/03/afUen16QiKRy3l4.png" alt="\u6D4B\u8BD5\u4EE3\u7801"></p><p>\u65E2\u7136\u62C6\u5206\u4E86 reducer\uFF0C\u90A3\u4E48 state \u662F\u5426\u4E5F\u80FD\u62C6\u5206\uFF0C\u5E76\u4E14\u5B83\u662F\u5426\u9700\u8981\u4F20\uFF0C\u5728\u6211\u4EEC\u5E73\u65F6\u7684\u5199\u6CD5\u4E2D\uFF0C\u4E00\u822C\u90FD\u4E0D\u4F20 state\u3002\u8FD9\u91CC\u9700\u8981\u4E24\u70B9\u6539\u9020\uFF0C\u4E00\u662F\u6BCF\u4E2A reducer \u4E2D\u5305\u542B\u4E86\u5B83\u7684 state \u548C reducer\uFF1B\u4E8C\u662F\u6539\u9020 createStore\uFF0C\u8BA9 initState \u53D8\u5F97\u53EF\u4F20\u53EF\u4E0D\u4F20\uFF0C\u4EE5\u53CA\u521D\u59CB\u5316\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// counter.js \u4E2D\u5199\u5165\u5BF9\u5E94\u7684 state \u548C reducer</span>
<span class="token keyword">let</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> initState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// info.js</span>
<span class="token keyword">let</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;johan&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;\u524D\u7AEF\u4E4B\u864E&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state <span class="token operator">=</span> initState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;SET_NAME&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> action<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;SET_DESCRIPTION&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">description</span><span class="token operator">:</span> action<span class="token punctuation">.</span>description<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u6539\u9020 createStore</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createStore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState<span class="token punctuation">,</span> enhancer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        enhancer <span class="token operator">=</span> initState<span class="token punctuation">;</span>
        initState <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state
    <span class="token punctuation">}</span>
	<span class="token comment">// \u7528\u4E00\u4E2A\u4E0D\u5339\u914D\u4EFB\u4F55\u52A8\u4F5C\u6765\u521D\u59CB\u5316store</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        getState<span class="token punctuation">,</span>
        dispatch<span class="token punctuation">,</span>
        subscribe
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E3B\u6587\u4EF6\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware<span class="token punctuation">,</span> combinReducers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./redux/index.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
    loggerMiddleware<span class="token punctuation">,</span>
    exceptionMiddleware<span class="token punctuation">,</span>
    timeMiddleware<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./middleware.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> counterReducer<span class="token punctuation">,</span> infoReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reducer/index.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token function">combinReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> counterReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">info</span><span class="token operator">:</span> infoReducer<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
    reducer<span class="token punctuation">,</span>
    <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>loggerMiddleware<span class="token punctuation">,</span> exceptionMiddleware<span class="token punctuation">,</span> timeMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5230\u6B64\u4E3A\u6B62\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u4E00\u4E2A\u4E03\u4E03\u516B\u516B\u7684 redux \u4E86</p><h3 id="\u5B8C\u6574\u4F53\u7684-redux" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4F53\u7684-redux" aria-hidden="true">#</a> \u5B8C\u6574\u4F53\u7684 Redux</h3><h4 id="\u9000\u8BA2" tabindex="-1"><a class="header-anchor" href="#\u9000\u8BA2" aria-hidden="true">#</a> \u9000\u8BA2</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">subscribe</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="\u4E2D\u95F4\u4EF6\u62FF\u5230\u7684-store" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u95F4\u4EF6\u62FF\u5230\u7684-store" aria-hidden="true">#</a> \u4E2D\u95F4\u4EF6\u62FF\u5230\u7684 store</h4><p>\u73B0\u5728\u7684\u4E2D\u95F4\u4EF6\u80FD\u62FF\u5230\u5B8C\u6574\u7684 store\uFF0C\u4ED6\u751A\u81F3\u53EF\u4EE5\u4FEE\u6539\u6211\u4EEC\u7684 subscribe \u65B9\u6CD5\u3002\u6309\u7167<strong>\u6700\u5C0F\u5F00\u653E\u7B56\u7565</strong>\uFF0C\u6211\u4EEC\u53EA\u7528\u7ED9 getState \u5373\u53EF\uFF0C\u4FEE\u6539\u4E0B applyMiddleware \u4E2D\u7ED9\u4E2D\u95F4\u4EF6\u4F20\u7684 store</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const chain = middlewares.map(middleware =&gt; middleware(store))</span>
<span class="token keyword">const</span> simpleStore <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">getState</span><span class="token operator">:</span> store<span class="token punctuation">.</span>getState <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chain <span class="token operator">=</span> middlewares<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">middleware</span><span class="token punctuation">(</span>simpleStore<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="compose" tabindex="-1"><a class="header-anchor" href="#compose" aria-hidden="true">#</a> compose</h4><p>\u5728\u6211\u4EEC\u7684 applyMiddleware \u4E2D\uFF0C\u628A [A, B, C] \u8F6C\u6362\u6210 A(B(C(next)))\uFF0C\u6548\u679C\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">C</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> dispatch <span class="token operator">=</span> store<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span>
chain<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    dispatch <span class="token operator">=</span> <span class="token function">middleware</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Redux \u63D0\u4F9B\u4E86\u4E00\u4E2A compose \uFF0C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">compose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>funcs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> args<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> funcs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> funcs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
            <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                <span class="token function">a</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_2-\u884C\u4EE3\u7801-replacereducer" tabindex="-1"><a class="header-anchor" href="#_2-\u884C\u4EE3\u7801-replacereducer" aria-hidden="true">#</a> 2 \u884C\u4EE3\u7801 replaceReducer</h4><p>\u66FF\u6362\u5F53\u524D\u7684 reudcer \uFF0C\u4F7F\u7528\u573A\u666F\uFF1A</p><ul><li>\u4EE3\u7801\u5206\u5272</li><li>\u52A8\u6001\u52A0\u8F7D</li><li>\u5B9E\u65F6 reloading \u673A\u5236</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">replaceReducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">nextReducer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    reducer <span class="token operator">=</span> nextReducer<span class="token punctuation">;</span>
    <span class="token comment">// \u5237\u65B0\u4E00\u6B21\uFF0C\u5E7F\u64AD reducer \u5DF2\u7ECF\u66FF\u6362\uFF0C\u4E5F\u540C\u6837\u628A\u9ED8\u8BA4\u503C\u6362\u6210\u65B0\u7684 reducer</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="bindactioncreators" tabindex="-1"><a class="header-anchor" href="#bindactioncreators" aria-hidden="true">#</a> bindActionCreators</h4><p>bindActionCreators \u662F\u505A\u4EC0\u4E48\u7684\uFF0C\u4ED6\u901A\u8FC7\u95ED\u5305\uFF0C\u628A dispatch \u548C actionCreator \u9690\u85CF\u8D77\u6765\uFF0C\u8BA9\u5176\u4ED6\u5730\u65B9\u611F\u77E5\u4E0D\u5230 redux \u7684\u5B58\u5728\u3002\u4E00\u822C\u4E0E react-redux \u7684 connect \u7ED3\u5408</p><p>\u8FD9\u91CC\u76F4\u63A5\u8D34\u6E90\u7801\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">bindActionCreator</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">actionCreator<span class="token punctuation">,</span> dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">actionCreator</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">bindActionCreators</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">actionCreators<span class="token punctuation">,</span> dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> actionCreators <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">bindActionCreator</span><span class="token punctuation">(</span>actionCreators<span class="token punctuation">,</span> dispatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> actionCreators <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> actionCreators <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>actionCreators<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> boundActionCreators <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> actionCreator <span class="token operator">=</span> actionCreators<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> actionCreator <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            boundActionCreators<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bindActionCreator</span><span class="token punctuation">(</span>
                actionCreator<span class="token punctuation">,</span>
                dispatch<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> boundActionCreators<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u4EE5\u4E0A\uFF0C\u6211\u4EEC\u5C31\u5DF2\u7ECF\u5B8C\u6210\u4E86 Redux \u4E2D\u6240\u6709\u7684\u4EE3\u7801\u3002\u5927\u4F53\u4E0A\u8FD9\u91CC 100 \u591A\u884C\u7684\u4EE3\u7801\u5C31\u662F Redux \u7684\u5168\u90E8\uFF0C\u771F Redux \u65E0\u975E\u662F\u52A0\u4E86\u4E9B\u6CE8\u91CA\u548C\u53C2\u6570\u6821\u9A8C</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p>\u6211\u4EEC\u628A\u4E0E Redux \u76F8\u5173\u7684\u540D\u8BCD\u5217\u51FA\u6765\uFF0C\u68B3\u7406\u5B83\u662F\u505A\u4EC0\u4E48\u7684</p><ul><li>createStore <ul><li>\u521B\u5EFA store \u5BF9\u8C61\uFF0C\u5305\u542B getState\u3001dispatch\u3001subscribe\u3001replaceReducer</li></ul></li><li>reducer <ul><li>\u7EAF\u51FD\u6570\uFF0C\u63A5\u53D7\u65E7\u7684 state\u3001action\uFF0C\u751F\u6210\u65B0\u7684 state</li></ul></li><li>action <ul><li>\u52A8\u4F5C\uFF0C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5FC5\u987B\u5305\u62EC type \u5B57\u6BB5\uFF0C\u8868\u793A view \u53D1\u51FA\u901A\u77E5\u544A\u8BC9 store \u8981\u6539\u53D8</li></ul></li><li>dispatch <ul><li>\u6D3E\u53D1\uFF0C\u89E6\u53D1 action \uFF0C\u751F\u6210\u65B0\u7684 state\u3002\u662F view \u53D1\u51FA action \u7684\u552F\u4E00\u65B9\u6CD5</li></ul></li><li>subscribe <ul><li>\u8BA2\u9605\uFF0C\u53EA\u6709\u8BA2\u9605\u4E86\uFF0C\u5F53\u6D3E\u53D1\u65F6\uFF0C\u4F1A\u6267\u884C\u8BA2\u9605\u51FD\u6570</li></ul></li><li>combineReducers <ul><li>\u5408\u5E76 reducer \u6210\u4E00\u4E2A reducer</li></ul></li><li>replaceReudcer <ul><li>\u4EE3\u66FF reducer \u7684\u51FD\u6570</li></ul></li><li>middleware <ul><li>\u4E2D\u95F4\u4EF6\uFF0C\u6269\u5C55 dispatch \u51FD\u6570</li></ul></li></ul>`,99),q={href:"https://github.com/brickspert",target:"_blank",rel:"noopener noreferrer"},N=s("\u7816\u5BB6"),A=s("\u66FE\u7ECF\u753B\u8FC7\u4E00\u5F20\u5173\u4E8E Redux \u7684\u6D41\u7A0B\u56FE"),T=t(`<p><img src="https://s2.loli.net/2021/12/06/xD9omCG4OScBFiK.png" alt="\u6D41\u7A0B\u56FE"></p><h2 id="\u6362\u79CD\u601D\u8003\u65B9\u5F0F\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#\u6362\u79CD\u601D\u8003\u65B9\u5F0F\u7406\u89E3" aria-hidden="true">#</a> \u6362\u79CD\u601D\u8003\u65B9\u5F0F\u7406\u89E3</h2><p>\u6211\u4EEC\u8BF4\u8FC7\uFF0C Redux \u53EA\u662F\u4E00\u4E2A\u72B6\u6001\u7BA1\u7406\u5E93\uFF0C\u5B83\u662F\u7531\u6570\u636E\u6765\u9A71\u52A8\uFF0C\u53D1\u8D77 action\uFF0C\u4F1A\u5F15\u53D1 reducer \u7684\u6570\u636E\u66F4\u65B0\uFF0C\u4ECE\u800C\u66F4\u65B0\u5230\u6700\u65B0\u7684 store</p><h3 id="\u4E0E-react-\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#\u4E0E-react-\u7ED3\u5408" aria-hidden="true">#</a> \u4E0E React \u7ED3\u5408</h3><p>\u62FF\u7740\u521A\u505A\u597D\u7684 Redux\uFF0C\u653E\u5230 React \u4E2D\uFF0C\u8BD5\u8BD5\u4EC0\u4E48\u53EB Redux + React \u96C6\u5408\uFF0C\u6CE8\u610F\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5148\u4E0D\u4F7F\u7528 React-Redux\uFF0C\u5355\u62FF\u8FD9\u4E24\u4E2A\u7ED3\u5408</p><p>\u5148\u521B\u5EFA\u9879\u76EE</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx create-react-app demo-5-react
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5F15\u5165\u624B\u5199\u7684 redux \u5E93</p><p>\u5728 <code>App.js</code> \u4E2D\u5F15\u5165 createStore\uFF0C\u5E76\u5199\u597D\u521D\u59CB\u6570\u636E\u548C reducer\uFF0C\u5728 useEffect \u4E2D\u76D1\u542C\u6570\u636E\uFF0C\u76D1\u542C\u597D\u4E4B\u540E\u5F53\u53D1\u8D77\u4E00\u4E2A action \u65F6\uFF0C\u6570\u636E\u5C31\u4F1A\u6539\u53D8\uFF0C\u770B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./redux&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./App.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setCount</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>unsubscribe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">onHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;App&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onHandle<span class="token punctuation">}</span><span class="token operator">&gt;</span>add<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>\u70B9\u51FB button \u540E\uFF0C\u6570\u636E\u8DDF\u7740\u6539\u53D8</p><p><img src="https://s2.loli.net/2021/12/06/E5xaY7dVv9OJUMP.png" alt="\u6548\u679C\u56FE"></p><blockquote><p>PS\uFF1A\u867D\u7136\u6211\u4EEC\u53EF\u4EE5\u7528\u8FD9\u79CD\u65B9\u5F0F\u8BA2\u9605 store \u548C\u6539\u53D8\u6570\u636E\uFF0C\u4F46\u662F\u8BA2\u9605\u7684\u4EE3\u7801\u91CD\u590D\u8FC7\u591A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u9AD8\u9636\u7EC4\u4EF6\u5C06\u4ED6\u63D0\u53D6\u51FA\u53BB\u3002\u8FD9\u4E5F\u662F React-Redux \u6240\u505A\u7684\u4E8B\u60C5</p></blockquote><h3 id="\u4E0E\u539F\u751F-js-html-\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#\u4E0E\u539F\u751F-js-html-\u7ED3\u5408" aria-hidden="true">#</a> \u4E0E\u539F\u751F JS+HTML \u7ED3\u5408</h3><p>\u6211\u4EEC\u8BF4\u8FC7\uFF0CRedux \u662F\u4E2A\u72EC\u7ACB\u4E8E Redux \u7684\u5B58\u5728\uFF0C\u5B83\u4E0D\u4EC5\u53EF\u5728 Redux \u5145\u5F53\u6570\u636E\u7BA1\u7406\u5668\uFF0C\u8FD8\u53EF\u4EE5\u5728\u539F\u751F JS + HTML \u4E2D\u5145\u5F53\u8D77\u804C\u4F4D</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
            <span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./redux/index.js&#39;</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
                        <span class="token keyword">return</span> <span class="token punctuation">{</span>
                            <span class="token operator">...</span>state<span class="token punctuation">,</span>
                            <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
                        <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span>
                        <span class="token keyword">return</span> <span class="token punctuation">{</span>
                            <span class="token operator">...</span>state<span class="token punctuation">,</span>
                            <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
                        <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">let</span> count <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> add <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            add<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6E32\u67D3\u89C6\u56FE</span>
            <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                count<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u76D1\u542C\u6570\u636E</span>
            store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>\u6548\u679C\u5982\u4E0B\uFF1A</p><p><img src="https://s2.loli.net/2021/12/06/zuaQsI9mhj5SAPF.png" alt="\u6548\u679C\u56FE"></p><h2 id="\u72B6\u6001\u751F\u6001" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u751F\u6001" aria-hidden="true">#</a> \u72B6\u6001\u751F\u6001</h2><p>\u6211\u4EEC\u4ECE Flux \u8BF4\u5230 Redux\uFF0C\u518D\u4ECE Redux \u8BF4\u4E86\u5404\u79CD\u4E2D\u95F4\u4EF6\uFF0C\u5176\u4E2D React-saga \u5C31\u662F\u4E3A\u89E3\u51B3\u5F02\u6B65\u884C\u4E3A\u800C\u751F\u7684\u4E2D\u95F4\u4EF6\uFF0C\u5B83\u4E3B\u8981\u91C7\u7528 Generator\uFF08\u751F\u6210\u5668\uFF09\u6982\u5FF5\uFF0C\u6BD4\u8D77 React-thunk \u548C React-promise\uFF0C\u5B83\u6CA1\u6709\u50CF\u5176\u4ED6\u4E24\u8005\u5C06\u5F02\u6B65\u884C\u4E3A\u653E\u5728 action creator \u4E0A\uFF0C\u800C\u662F\u628A\u6240\u6709\u7684\u5F02\u6B65\u64CD\u4F5C\u770B\u6210\u201C\u7EBF\u7A0B\u201D\uFF0C\u901A\u8FC7 action \u89E6\u53D1\u5B83\uFF0C\u5F53\u64CD\u4F5C\u5B8C\u6210\u540E\u518D\u6B21\u53D1\u51FA action \u4F5C\u4E3A\u8F93\u51FA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&#39;ending&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> helloWorld <span class="token operator">=</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

hewlloWorld<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;hello&#39;, done: false }</span>
hewlloWorld<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;world&#39;, done: false }</span>
hewlloWorld<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;ending&#39;, done: true }</span>
hewlloWorld<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7B80\u5355\u6765\u8BF4\uFF1A\u9047\u5230 yield \u8868\u8FBE\u5F0F\uFF0C\u5C31\u6682\u505C\u6267\u884C\u540E\u9762\u7684\u64CD\u4F5C\uFF0C\u5E76\u5C06\u7D27\u8DDF yield \u540E\u9762\u7684\u90A3\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u503C value\uFF0C\u7B49\u7740\u4E0B\u4E00\u4E2A\u8C03\u7528 next \u65B9\u6CD5\uFF0C\u518D\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C</p><h3 id="dva" tabindex="-1"><a class="header-anchor" href="#dva" aria-hidden="true">#</a> Dva</h3><p>Dva \u662F\u4EC0\u4E48\uFF1F</p><blockquote><p>\u5B98\u7F51\uFF1ADva \u9996\u5148\u662F\u4E00\u4E2A\u57FA\u4E8E Redux + Redux-saga \u7684\u6570\u636E\u6D41\u65B9\u6848\u3002\u4E3A\u4E86\u7B80\u5316\u5F00\u53D1\u4F53\u9A8C\uFF0CDva \u8FD8\u989D\u5916\u5185\u7F6E\u4E86 react-router \u548C fetch\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7406\u89E3\u4E3A\u4E00\u4E2A\u8F7B\u91CF\u7EA7\u7684\u5E94\u7528\u6846\u67B6</p></blockquote><p>\u7B80\u5355\u6765\u8BF4\uFF0C\u5B83\u662F\u6574\u5408\u4E86\u73B0\u5728\u6700\u6D41\u884C\u7684\u6570\u636E\u6D41\u65B9\u6848\uFF0C\u5373\u4E00\u4E2A React \u6280\u672F\u6808\uFF1A</p><p>dva = React-Router + Redux + Redux-saga + React-Redux</p><p>\u5B83\u7684\u6570\u636E\u6D41\u56FE\u4E3A\uFF1A</p><p><img src="https://s2.loli.net/2021/12/06/QUOfn9sW2NqEyCA.png" alt="Dva \u6D41\u7A0B\u56FE"></p><p>view dispatch \u4E00\u4E2A\u52A8\u4F5C\uFF0C\u6539\u53D8 state\uFF08\u5373 store\uFF09\uFF0Cstate \u4E0E view \u7ED1\u5B9A\uFF0C\u54CD\u5E94 view</p>`,30),D=s("\u5176\u4ED6\u4E0D\u8868\uFF0C\u53EF\u53BB "),F={href:"https://dvajs.com/",target:"_blank",rel:"noopener noreferrer"},I=s("Dva \u5B98\u7F51"),B=s("\u67E5\u770B\uFF0C\u8FD9\u91CC\u8BB2\u8BB2 Model \uFF0C\u5B83\u5305\u542B\u4E86 5 \u4E2A\u5C5E\u6027"),V=t('<ul><li>namespace <ul><li>model \u7684\u547D\u540D\u7A7A\u95F4\uFF0C\u540C\u65F6\u4E5F\u662F\u4ED6\u5728\u5168\u5C40 state \u4E0A\u7684\u5C5E\u6027\uFF0C\u53EA\u80FD\u7528\u5B57\u7B26\u4E32\uFF0C\u4E0D\u652F\u6301\u901A\u8FC7 <code>.</code> \u7684\u65B9\u5F0F\u521B\u5EFA\u591A\u5C42\u547D\u540D\u7A7A\u95F4</li></ul></li><li>state <ul><li>\u521D\u59CB\u503C</li></ul></li><li>reducers <ul><li>\u7EAF\u51FD\u6570\uFF0C\u4EE5 key/value \u683C\u5F0F\u5B9A\u4E49 reducer\u3002\u7528\u4E8E\u5904\u7406\u540C\u6B65\u64E6\u505A\uFF0C\u552F\u4E00\u53EF\u4EE5\u4FEE\u6539 <code>state</code> \u7684\u5730\u65B9\uFF0C\u7531 <code>action</code> \u89E6\u53D1</li><li>\u683C\u5F0F\u4E3A\uFF1A<code>(state, action) =&gt; newState</code> \u6216 <code>[(state, action) =&gt; newState, enhancer]</code></li></ul></li><li>effects <ul><li>\u5904\u7406\u5F02\u6B65\u64CD\u4F5C\u548C\u4E1A\u52A1\u903B\u8F91\uFF0C\u4EE5 key/value \u683C\u5F0F\u5B9A\u4E49 effect</li><li>\u4E0D\u76F4\u63A5\u4FEE\u6539 state\u3002\u7531 action \u89E6\u53D1</li><li>call\uFF1A\u6267\u884C\u5F02\u6B65\u64CD\u4F5C</li><li>put\uFF1A\u53D1\u51FA\u4E00\u4E2A Action\uFF0C\u7C7B\u4F3C\u4E8E dispatch</li></ul></li><li>subscriptions <ul><li>\u8BA2\u9605</li><li>\u5728 <code>app.start()</code> \u65F6\u88AB\u6267\u884C\uFF0C\u6570\u636E\u6E90\u53EF\u4EE5\u662F\u5F53\u524D\u7684\u65F6\u95F4\u3001\u670D\u52A1\u5668\u7684 websocket \u94FE\u63A5\u3001 keyboard \u8F93\u5165\u3001history \u8DEF\u7531\u53D8\u5316\u3001geolocation \u53D8\u5316\u7B49\u7B49</li></ul></li></ul><h3 id="mobx" tabindex="-1"><a class="header-anchor" href="#mobx" aria-hidden="true">#</a> Mobx</h3><p>View \u901A\u8FC7\u8BA2\u9605\u4E5F\u597D\uFF0C\u76D1\u542C\u4E5F\u597D\uFF0C\u4E0D\u540C\u7684\u6846\u67B6\u6709\u4E0D\u540C\u7684\u6280\u672F\uFF0C\u603B\u4E4B store \u53D8\u5316\uFF0C view \u4E5F\u8DDF\u7740\u53D8\u5316</p><p>Mobx \u4F7F\u7528\u7684\u662F\u54CD\u5E94\u5F0F\u6570\u636E\u6D41\u65B9\u6848\u3002\u540E\u7EED\u4F1A\u5355\u72EC\u5199\u4E00\u7BC7\uFF0C\u6B64\u7BC7\u592A\u957F\uFF0C\u5148\u4E0D\u5199</p><h2 id="\u8865\u5145-\u5355\u5411\u6570\u636E\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8865\u5145-\u5355\u5411\u6570\u636E\u6D41" aria-hidden="true">#</a> \u8865\u5145\uFF1A\u5355\u5411\u6570\u636E\u6D41</h2><p>\u5148\u4ECB\u7ECD React \u4E2D\u6570\u636E\u4F20\u9012\uFF0C\u5373\u901A\u4FE1\u95EE\u9898</p><ul><li>\u5411\u5B50\u7EC4\u4EF6\u53D1\u6D88\u606F</li><li>\u5411\u7236\u7EC4\u4EF6\u53D1\u6D88\u606F</li><li>\u5411\u5176\u4ED6\u7EC4\u4EF6\u53D1\u6D88\u606F</li></ul><p>React \u53EA\u63D0\u4F9B\u4E86\u4E00\u79CD\u901A\u4FE1\u65B9\u5F0F\uFF1A\u4F20\u53C2\u3002</p><p>\u5373\u7236\u4F20\u503C\u7ED9\u5B50\uFF0C\u5B50\u4E0D\u80FD\u4FEE\u6539\u7236\u4F20\u7684\u6570\u636E\uFF0Cprops \u5177\u6709\u4E0D\u53EF\u4FEE\u6539\u6027\u3002\u5B50\u7EC4\u4EF6\u60F3\u628A\u6570\u636E\u4F20\u7ED9\u7236\u7EC4\u4EF6\u600E\u4E48\u529E\uFF1F\u901A\u8FC7 props \u4E2D\u7684\u4E8B\u4EF6\u6765\u4F20\u503C\u901A\u77E5\u7236\u7EC4\u4EF6</p>',9),K=s("\u4ED3\u5E93\u5730\u5740\uFF1A"),O={href:"https://github.com/johanazhu/jo-redux",target:"_blank",rel:"noopener noreferrer"},W=s("https://github.com/johanazhu/jo-redux");function P(L,U){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,n("p",null,[k,n("a",b,[d,p(a)]),m,g,y]),h,w,f,v,x,j,S,n("blockquote",null,[R,n("p",null,[_,n("a",E,[M,p(a)])])]),C,n("p",null,[n("a",q,[N,p(a)]),A]),T,n("p",null,[D,n("a",F,[I,p(a)]),B]),V,n("p",null,[K,n("a",O,[W,p(a)])])],64)}var J=e(r,[["render",P],["__file","\u4ECERedux\u8BF4\u8D77\uFF0C\u5230\u624B\u5199\uFF0C\u518D\u5230\u72B6\u6001\u7BA1\u7406.html.vue"]]);export{J as default};
