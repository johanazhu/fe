import{_ as l,r as e,o as u,c as r,a as n,d as a,w as c,F as i,e as t,b as s}from"./app.873f0dc8.js";const k={},b=t(`<h1 id="\u62F7\u8D1D\u7684\u79D8\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u62F7\u8D1D\u7684\u79D8\u5BC6" aria-hidden="true">#</a> \u62F7\u8D1D\u7684\u79D8\u5BC6</h1><p>\u4E0A\u4E0A\u4E00\u8282\u8BB2\u5230\uFF1A\u57FA\u672C\u7C7B\u578B\u7684\u590D\u5236\uFF0C\u53EA\u8981\u8D4B\u503C\u5C31\u80FD\u514B\u9686\u5230\u6837\u672C\uFF0C\u4F46\u662F\u5F15\u7528\u5BF9\u8C61\u4E0D\u80FD\uFF0C\u7B49\u4E8E\u53F7\u201C=\u201D \u53EA\u662F\u628A\u5BF9\u8C61\u7684\u5730\u5740\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> obj1<span class="token punctuation">;</span> <span class="token comment">// \u5C06obj1\u7684\u5F15\u7528\u5730\u5740\u8D4B\u503C\u7ED9obj2</span>
obj1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;johan&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: &#39;johan&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: &#39;joahn&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1 <span class="token operator">===</span> obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true,\u6307\u5411\u7684\u662F\u540C\u4E00\u4E2A\u5730\u5740</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u90A3\u4E48\u600E\u4E48\u62F7\u8D1D\u5F15\u7528\u7C7B\u578B\u5462\uFF1F\u8FD9\u91CC\u5C31\u6709\u4E24\u79CD\u5206\u7C7B\uFF0C\u4F9D\u636E\u662F\u662F\u5426\u5B8C\u5168\u62F7\u8D1D\u3002</p><ul><li><p>\u6D45\u62F7\u8D1D\u662F\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u5BF9\u539F\u59CB\u5BF9\u8C61\u5C5E\u6027\u503C\u8FDB\u884C\u590D\u5236</p><ul><li>\u5C5E\u6027\u662F\u57FA\u7840\u7C7B\u578B\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u57FA\u672C\u7C7B\u578B\u7684\u503C\uFF0C\u4FEE\u6539\u5185\u5BB9\u4E0D\u5F71\u54CD</li><li>\u5C5E\u6027\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u5185\u5B58\u5730\u5740\uFF0C\u4FEE\u6539\u5185\u5BB9\u4E92\u76F8\u5F71\u54CD</li></ul></li><li><p>\u6DF1\u62F7\u8D1D\uFF1A\u6574\u4E2A\u5BF9\u8C61\u62F7\u8D1D\u5230\u53E6\u4E00\u4E2A\u5185\u5B58\u4E2D\uFF0C\u4FEE\u6539\u5185\u5BB9\u4E92\u4E0D\u5F71\u54CD</p></li></ul><p>\u9996\u5148\u6211\u4EEC\u8981\u770B\u770B\u6700\u7B80\u5355\u7684\u6D45\u62F7\u8D1D\u662F\u600E\u4E48\u6837\uFF0C\u8BA9\u6211\u4EEC\u5BF9\u5176\u6709\u4E2A\u521D\u6B65\u7684\u8BA4\u8BC6\uFF0C\u7136\u540E\u5728\u603B\u7ED3\u4E0B\u5BF9\u8C61\u4E2D\u5230\u5E95\u6709\u591A\u5C11\u79CD\u6D45\u62F7\u8D1D\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;elaine&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: elaine }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u62F7\u8D1D\u539F\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u5C31\u662F\u6700\u7B80\u5355\u7684\u6D45\u62F7\u8D1D</p><table><thead><tr><th></th><th>\u4E0E\u539F\u6570\u636E\u662F\u5426\u6307\u5411\u540C\u4E00\u5BF9\u8C61</th><th>\u539F\u6570\u636E\u4E3A\u57FA\u672C\u7C7B\u578B</th><th>\u539F\u6570\u636E\u4E3A\u5F15\u7528\u7C7B\u578B</th></tr></thead><tbody><tr><td>\u8D4B\u503C</td><td>\u662F</td><td>\u6539\u53D8\u3010\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td><td>\u6539\u53D8\u3010\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td></tr><tr><td>\u6D45\u62F7\u8D1D</td><td>\u5426</td><td>\u6539\u53D8\u3010\u4E0D\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td><td>\u6539\u53D8\u3010\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td></tr><tr><td>\u6DF1\u62F7\u8D1D</td><td>\u5426</td><td>\u6539\u53D8\u3010\u4E0D\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td><td>\u6539\u53D8\u3010\u4E0D\u4F1A\u3011\u4F7F\u539F\u6570\u636E\u4E00\u540C\u6539\u53D8</td></tr></tbody></table><p>\u90A3\u8BA9\u6211\u4EEC\u6765\u770B\u770B\u6709\u591A\u5C11\u79CD\u6D45\u62F7\u8D1D\uFF0C\u518D\u6765\u8BD5\u7740\u5199\u4E00\u4E2A</p><h2 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h2><h3 id="object-\u4E2D\u7684-object-assign" tabindex="-1"><a class="header-anchor" href="#object-\u4E2D\u7684-object-assign" aria-hidden="true">#</a> Object \u4E2D\u7684 Object.assign</h3><p>Object.assign()\u65B9\u6CD5\u53EF\u4EE5\u628A\u4EFB\u610F\u591A\u4E2A\u539F\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\u62F7\u8D1D\u7ED9\u76EE\u6807\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u3002</p><p>\u5B83\u62F7\u8D1D\u7684\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\u7684\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u5BF9\u8C61\u672C\u8EAB\u3002</p><p>\u662F ES6 \u4E2D Object \u5BF9\u8C61\u65B0\u589E\u7684\u65B9\u6CD5</p><p>\u53C2\u6570\uFF1A</p><p>target\uFF1A\u76EE\u6807\u5BF9\u8C61</p><p>sources: \u4EFB\u610F\u591A\u4E2A\u539F\u5BF9\u8C61\u3002</p><p>\u8FD4\u56DE\u503C\uFF1A\u76EE\u6807\u5BF9\u8C61\u4F1A\u88AB\u8FD4\u56DE</p><p>\u6848\u4F8B\u4E00</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj2<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: 10, b: 20, c: 30}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: 10, b: 100, c: 30}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6848\u4F8B\u4E8C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">21</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> initialObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

initialObj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&#39;changed&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;change&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0CObject \u53EA\u80FD\u62F7\u8D1D\u7B2C\u4E00\u5C42\u5BF9\u8C61\uFF0C\u5982\u679C\u518D\u5F80\u6DF1\u4E00\u5C42\u62F7\u8D1D\uFF0C\u5C31\u6709\u95EE\u9898\u4E86</p><h3 id="object-array-\u90FD\u9002\u7528\u7684\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#object-array-\u90FD\u9002\u7528\u7684\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> Object/Array \u90FD\u9002\u7528\u7684\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08...\uFF09</h3><p>\u6269\u5C55\u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u5728\u51FD\u6570\u8C03\u7528/\u6570\u7EC4\u6784\u9020\u65F6\uFF0C\u5C06\u6570\u7EC4\u8868\u8FBE\u5F0F\u6216\u8005 string \u5728\u8BED\u6CD5\u5C42\u9762\u5C55\u5F00\uFF1B\u8FD8\u53EF\u4EE5\u5728\u6784\u9020\u5B57\u9762\u91CF\u5BF9\u8C61\u65F6\uFF0C\u5C06\u5BF9\u8C61\u8868\u8FBE\u5F0F\u6309 key-value \u7684\u65B9\u5F0F\u5C55\u5F00</p><p>\u57CE\u7136\uFF0C\u6211\u4EEC\u90FD\u77E5\u9053\u5C55\u5F00\u8FD0\u7B97\u7B26\u7684\u4F5C\u7528\u5E76\u4E0D\u662F\u4E3A\u4E86\u62F7\u8D1D\u3002\u4F46\u65E0\u53EF\u539A\u975E\uFF0C\u62F7\u8D1D\u4E5F\u662F\u5C55\u5F00\u8FD0\u7B97\u7B26\u7684\u7279\u70B9\u4E4B\u4E00</p><p>\u4E00\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>
arr2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// arr2 [1, 2, 3, 4]</span>
<span class="token comment">// arr1 \u4E0D\u53D7\u5F71\u54CD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u591A\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// b [[3, 4], [5, 6]]</span>
<span class="token comment">// a [[2], [3, 4], [5, 6]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u4E5F\u662F \u6D45\u62F7\u8D1D</p><h3 id="array-\u4E2D\u7684-slice" tabindex="-1"><a class="header-anchor" href="#array-\u4E2D\u7684-slice" aria-hidden="true">#</a> Array \u4E2D\u7684 slice</h3><p><strong>slice()</strong> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u5BF9\u8C61\uFF0C\u8FD9\u4E00\u5BF9\u8C61\u662F\u4E00\u4E2A\u7531 <code>begin</code> \u548C <code>end</code> \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D\uFF08\u5305\u62EC <code>begin</code></p><p>\uFF0C\u4E0D\u5305\u62EC <code>end</code> \uFF09\u3002\u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> leiFamily <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;father&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;mother&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;brother&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;sister0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sister1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sister2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> copyFamily <span class="token operator">=</span> leiFamily<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
copyFamily<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Deku&#39;</span><span class="token punctuation">;</span>
copyFamily<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;brother1&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>leiFamily<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;father&#39;, &#39;mother&#39;, &#39;brother&#39;, [&#39;sister0&#39; , &#39;brother1&#39;, &#39;sister2&#39;]]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyFamily<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;Deku&#39;, &#39;mother&#39;, &#39;brother&#39;, [&#39;sister0&#39; , &#39;brother1&#39;, &#39;sister2&#39;]]</span>
<span class="token comment">// \u590D\u5236\u4E00\u5C42\uFF0C\u7B2C\u4E8C\u5C42\u5F00\u59CB\u5F15\u7528</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="array-\u4E2D\u7684-concat" tabindex="-1"><a class="header-anchor" href="#array-\u4E2D\u7684-concat" aria-hidden="true">#</a> Array \u4E2D\u7684 concat</h3><p>concat() \u65B9\u6CD5\u7528\u4E8E\u5408\u5E76\u4E24\u4E2A\u6216\u591A\u4E2A\u6570\u7EC4\u3002\u6B64\u65B9\u6CD5\u4E0D\u4F1A\u6539\u53D8\u73B0\u6709\u6570\u7EC4\uFF0C\u800C\u662F\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;c0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> array2 <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
array2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">;</span>
array2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;C1&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, [&#39;c0&#39;, &#39;C1&#39;, &#39;c2&#39;]]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;B&#39;, [&#39;c0&#39;, &#39;C1&#39;, &#39;c2&#39;]]</span>
<span class="token comment">// \u590D\u5236\u4E00\u5C42\uFF0C\u7B2C\u4E8C\u5C42\u5F00\u59CB\u5F15\u7528</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>slice \u548C concat \u8FD9\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u4EC5\u9002\u7528\u4E8E\u5BF9\u4E0D\u5305\u542B\u5F15\u7528\u5BF9\u8C61\u7684\u4E00\u7EF4\u6570\u7EC4\u7684\u6DF1\u62F7\u8D1D</p><h2 id="\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u6D45\u590D\u5236" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u6D45\u590D\u5236" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u6D45\u590D\u5236</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shallowClone</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> target <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> target <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArry</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> target<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> source<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,42),d=s("PS: hasOwnProperty\uFF0C\u8868\u793A\u6B64\u5BF9\u8C61\u4E0A\u81EA\u5DF1\u62E5\u6709\u7684\u5C5E\u6027\u3002\u60F3\u8D77\u4F1A\u5728\u540E\u9762\u8BB2"),m=s("\u5BF9\u8C61"),y=s("\u5C5E\u6027\u65F6\u4ECB\u7ECD"),g=t(`<p>\u7B80\u5355\u6765\u8BF4\uFF0C\u6D45\u62F7\u8D1D\u53EA\u590D\u5236\u4E00\u5C42\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><p>\u7EFC\u4E0A\u5206\u6790\uFF0CJavaScript \u7684\u6D45\u62F7\u8D1D\u6709 4 \u79CD\uFF0C\u9488\u5BF9\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D\u6709 slice\u3001concat\u3001\u6269\u5C55\u8FD0\u7B97\u7B26\uFF0C Object.assign() \u662F\u9488\u5BF9\u5BF9\u8C61\u6240\u4F5C\u7684\u6D45\u62F7\u8D1D\uFF0C\u5F53\u7136\uFF0C\u6269\u5C55\u8FD0\u7B97\u7B26\u4E5F\u9002\u7528\u5BF9\u8C61</p><h2 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h2><p>\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u4E86\u6D45\u590D\u5236\u7684\u6982\u5FF5\u548C\u5C55\u793A\u6D45\u590D\u5236\u6240\u6709\u7684\u65B9\u6CD5\u3002\u90A3\u4E48\u6DF1\u62F7\u8D1D\u662F\u4EC0\u4E48\uFF1F\u6709\u591A\u5C11\u65B9\u5F0F\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u5462\uFF1F</p><p>\u7B80\u5355\u6765\u8BF4\uFF0C\u6DF1\u62F7\u8D1D\u5C31\u662F\u9012\u5F52\u590D\u5236\u4E86\u6240\u6709\u5C42\u7EA7\u7684\u5BF9\u8C61\u7684\u5C5E\u6027</p><p>\u4E00\u822C\u7528 JSON.parse(JSON.stringify()) \u6765\u89E3\u51B3\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6BD4\u8F83\u7B80\u5355\uFF0C\u5927\u5BB6\u6709\u5E38\u7528\u3002\u4F46\u662F\u8FD9\u4E2A\u65B9\u6CD5\u4E5F\u6709\u51E0\u4E2A\u5751</p><blockquote><ol><li>\u5B83\u65E0\u6CD5\u5B9E\u73B0\u5BF9\u51FD\u6570\u3001RegExp \u7B49\u7279\u6B8A\u5BF9\u8C61\u7684\u514B\u9686</li><li>\u5B83\u4F1A\u629B\u5F03\u5BF9\u8C61\u7684 constructor\uFF0C\u6240\u6709\u7684\u6784\u9020\u51FD\u6570\u4F1A\u6307\u5411 Object</li><li>\u5BF9\u8C61\u6709\u5FAA\u73AF\u5F15\u7528\uFF0C\u4F1A\u62A5\u9519</li></ol></blockquote><p>\u6211\u4EEC\u6765\u6D4B\u8BD5\u4E00\u4E0B\u8FD9\u51E0\u4E2A\u5751\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Elaine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;elaine&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> say<span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> Elaine<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E0\u6CD5\u590D\u5236\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>a<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined [Function: say]</span>
<span class="token comment">// \u7A00\u758F\u6570\u7EC4\u590D\u5236\u9519\u8BEF</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null undefined</span>
<span class="token comment">// \u65E0\u6CD5\u590D\u5236\u6B63\u5219\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>c<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {} /ab+c/i</span>
<span class="token comment">// \u6784\u9020\u51FD\u6570\u6307\u5411\u9519\u8BEF</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: Object] [Function: person]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u5728\u5BF9\u51FD\u6570\u3001\u6B63\u5219\u5BF9\u8C61\u3002\u7A00\u758F\u6570\u7EC4\u7B49\u5BF9\u8C61\u514B\u9686\u65F6\u4F1A\u53D1\u751F\u610F\u5916\uFF0C\u6784\u9020\u51FD\u6570\u6307\u5411\u4E5F\u4F1A\u53D1\u751F\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
oldObj<span class="token punctuation">.</span>a <span class="token operator">=</span> oldObj<span class="token punctuation">;</span>

<span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>a<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: Converting circular structure to JSON</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5BF9\u8C61\u7684\u5FAA\u73AF\u5F15\u7528\u56DE\u629B\u51FA\u9519\u8BEF</p><h3 id="\u8BA9\u6211\u4EEC\u624B\u5199\u4E00\u4E2A" tabindex="-1"><a class="header-anchor" href="#\u8BA9\u6211\u4EEC\u624B\u5199\u4E00\u4E2A" aria-hidden="true">#</a> \u8BA9\u6211\u4EEC\u624B\u5199\u4E00\u4E2A</h3><p>\u6211\u4EEC\u77E5\u9053\u6DF1\u62F7\u8D1D\u5C31\u662F\u9012\u5F52+\u6D45\u62F7\u8D1D</p><p>\u6240\u4EE5\u6211\u4EEC\u81EA\u7136\u800C\u7136\u7684\u60F3\u5230\uFF0C\u5982\u679C\u662F\u9700\u62F7\u8D1D\u5BF9\u8C61\u4E2D\u6709\u5BF9\u8C61\uFF0C\u5C31\u5BF9\u5B83\u8FDB\u884C\u518D\u4E00\u6B21\u7684\u62F7\u8D1D\uFF0C\u77E5\u9053\u6240\u6709\u7684\u5BF9\u8C61\u4E2D\u6CA1\u6709\u5BF9\u8C61\u3002\u5F88\u7ED5\u662F\u5427\uFF0C\u770B\u4EE3\u7801\u80FD\u4E00\u76EE\u4E86\u7136</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F \u503C\u7C7B\u578B \u6216 null\uFF0C\u5219\u76F4\u63A5return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B9A\u4E49\u7ED3\u679C\u5BF9\u8C61</span>
    <span class="token keyword">let</span> copy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u5BF9\u8C61\u662F\u6570\u7EC4\uFF0C\u5219\u5B9A\u4E49\u7ED3\u679C\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        copy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u904D\u5386\u5BF9\u8C61\u7684key</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679Ckey\u662F\u5BF9\u8C61\u7684\u81EA\u6709\u5C5E\u6027</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u9012\u5F52\u8C03\u7528\u6DF1\u62F7\u8D1D\u65B9\u6CD5</span>
            copy<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            copy<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4FEE\u8A00\u7248\u672C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u4F46\u8FD9\u8FDC\u8FDC\u4E0D\u591F\uFF0C\u6211\u4EEC\u505A\u7684\u5DE5\u5177\u9700\u8981\u9002\u914D\u5927\u591A\u6570\u60C5\u51B5\uFF0C\u6709\u51E0\u79CD\u60C5\u51B5\u89C6\u4E3A\u5FC5\u987B\u8003\u8651\u8303\u56F4\uFF0C\u4F8B\u5982\uFF1A</p><ul><li><p>\u6CA1\u6709\u5BF9\u4F20\u53C2\u8FDB\u884C\u6821\u9A8C\uFF0C\u4F20\u5165 <code>null</code> \u65F6\u5E94\u8BE5\u8FD4\u56DE <code>null</code> \u800C\u4E0D\u662F <code>{}</code></p></li><li><p>\u5BF9\u4E8E\u5BF9\u8C61\u7684\u5224\u65AD\u903B\u8F91\u4E0D\u4E25\u8C28\uFF0C\u56E0\u4E3A <code>typeof null === &#39;object&#39;</code></p></li><li><p>\u6CA1\u6709\u8003\u8651\u6570\u7EC4\uFF0C\u6B63\u5219\uFF0CDate \u7684\u517C\u5BB9</p></li></ul><p>\u5C31\u50CF\u4E4B\u524D\u8C08\u5230\u8FC7\u7684\u5224\u65AD\u7C7B\u578B\u662F\u4E2A\u5F88\u91CD\u8981\u7684\u73AF\u8282\uFF0C\u6211\u4EEC\u8981\u77E5\u9053 null \u5BF9\u5E94\u7684\u662F null\uFF0Cobject \u5BF9\u5E94\u7684\u662F object\uFF0Cstring \u5BF9\u5E94\u7684\u662F string\uFF0C\u6570\u7EC4\u5BF9\u5E94\u662F array\uFF0C\u51FD\u6570 \u5BF9\u5E94\u7684\u662F funtion</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Function]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isDate</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Date]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object RegExp]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5177\u4F53\u67E5\u770B\u7EC6\u8282 <a href="./JavaScript%E7%94%B1%E4%BB%80%E4%B9%88%E7%BB%84%E6%88%90">\u5224\u65AD\u6240\u6709\u7C7B\u578B\u7684\u5DE5\u5177 isType</a></p><p>\u63D0\u793A\uFF1A\u6CE8\u610F toString \u65B9\u6CD5\u5728 Date(),Array \u7B49\u591A\u4E2A\u6784\u9020\u51FD\u6570\u4E0A\u91CD\u7F6E\u8FC7\uFF0C\u6240\u4EE5\u6700\u9760\u8C31\u7684\u8FD8\u662F\u4ECE Object \u4E0A\u7684 toString \u505A\u5206\u6790</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> source<span class="token punctuation">;</span> <span class="token comment">// \u975E\u5BF9\u8C61\u8FD4\u56DE\u81EA\u8EAB</span>

    <span class="token comment">// var target = Array.isArray(source) ? [] : {};</span>
    <span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;regexp&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u6B63\u5219\u8FDB\u884C\u6DF1\u62F7\u8D1D</span>
        target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9Date\u5BF9\u8C61\u8FDB\u884C\u6DF1\u62F7\u8D1D</span>
        target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5904\u7406 Array \u5BF9\u8C61</span>
        target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5904\u7406 Object \u5BF9\u8C61</span>
        <span class="token comment">// target = new obj.constructor();</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="hash-table-\u7834\u89E3\u5FAA\u73AF\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#hash-table-\u7834\u89E3\u5FAA\u73AF\u5F15\u7528" aria-hidden="true">#</a> hash table \u7834\u89E3\u5FAA\u73AF\u5F15\u7528</h3><p>\u6211\u4EEC\u9700\u8981\u6709\u4E00\u4E2A\u8868\u6765\u8BB0\u5F55\u5F53\u524D\u5BF9\u8C61\u548C\u62F7\u8D1D\u5BF9\u8C61\u7684\u5BF9\u5E94\u5173\u7CFB\uFF0C\u5F53\u6211\u4EEC\u9700\u8981\u62F7\u8D1D\u5F53\u524D\u5BF9\u8C61\u65F6\uFF0C\u5148\u53BB\u5B58\u50A8\u7A7A\u95F4\uFF08\u8868\uFF09\u4E2D\u627E\uFF0C\u6709\u6CA1\u6709\u62F7\u8D1D\u8FC7\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u5982\u679C\u6709\u7684\u8BDD\uFF0C\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5982\u679C\u6CA1\u6709\u7684\u8BDD\u7EE7\u7EED\u62F7\u8D1D\u3002</p><p>\u8FD9\u4E2A\u5B58\u50A8\u7A7A\u95F4\uFF0C\u9700\u8981\u53EF\u4EE5\u5B58\u50A8 <code>key-value</code> \u5F62\u5F0F\u7684\u6570\u636E\uFF0C\u4E14 <code>key</code> \u53EF\u4EE5\u4F7F\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\uFF0C\u6211\u4EEC\u4F7F\u7528 <code>Map</code> \u6570\u636E\u7ED3\u6784</p><ul><li>\u68C0\u67E5 <code>map</code> \u4E2D\u6709\u65E0\u514B\u9686\u8FC7\u5BF9\u8C61</li><li>\u6709 - \u76F4\u63A5\u8FD4\u56DE</li><li>\u6CA1\u6709 - \u5C06\u5F53\u524D\u5BF9\u8C61\u4F5C\u4E3A <code>key</code>\uFF0C\u514B\u9686\u5BF9\u8C61\u4F5C\u4E3A <code>value</code> \u8FDB\u884C\u5B58\u50A8</li><li>\u7EE7\u7EED\u62F7\u8D1D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> source<span class="token punctuation">;</span> <span class="token comment">// \u975E\u5BF9\u8C61\u8FD4\u56DE\u81EA\u8EAB</span>

    <span class="token keyword">var</span> target <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4F46\u9012\u5F52\u6D45\u62F7\u8D1D\u4E5F\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u5B83\u5BF9\u5E9E\u5927\u7684\u6570\u636E\u6765\u8BF4\u6027\u80FD\u4E0D\u597D\uFF0C\u56E0\u4E3A\u9700\u8981\u628A\u6574\u4E2A\u5BF9\u8C61\u90FD\u904D\u5386\u4E00\u904D\u3002</p>`,30),f=s("\u90A3\u4E48\u6709\u6CA1\u6709\u4E00\u79CD\u65B9\u6CD5\uFF0C\u53EA\u6709\u5F53\u5C5E\u6027\u4FEE\u6539\u4EE5\u540E\u624D\u5BF9\u8FD9\u90E8\u5206\u6570\u636E\u505A\u6DF1\u62F7\u8D1D\uFF0C\u53C8\u80FD\u89E3\u51B3 JSON.parse(JSON.stringify(a))\u7684\u5C40\u9650\uFF0C\u7B54\u6848\u662F Proxy\uFF0C\u5177\u4F53\u7EC6\u8282\u8BF7\u770B"),h={href:"https://juejin.cn/post/6844904021627502599",target:"_blank",rel:"noopener noreferrer"},j=s("\u8FD9\u7BC7\u6587\u7AE0"),w=s("\uFF0C\u672C\u4EBA\u6682\u65F6\u5BF9 Proxy \u4E0D\u592A\u719F\u6089"),v=t(`<h3 id="\u4ED6\u4EBA\u7684\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u4ED6\u4EBA\u7684\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u4ED6\u4EBA\u7684\u6DF1\u62F7\u8D1D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token function">getType</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> copy<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;array&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;object&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">copyObject</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;function&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">copyFunction</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> origin<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token parameter">origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> copy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> vale<span class="token punctuation">]</span> <span class="token keyword">of</span> origin<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        copy<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">copyObject</span><span class="token punctuation">(</span><span class="token parameter">origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> copy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        copy<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">copyFunction</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> type<span class="token punctuation">,</span> <span class="token function-variable function">copy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span>origin<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fun<span class="token punctuation">.</span>prototype <span class="token operator">=</span> origin<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">return</span> fun<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6DF1\u62F7\u8D1D\u662F\u524D\u7AEF\u9762\u8BD5\u4E2D\u5FC5\u8003\u7684\u4E00\u9879\uFF0C\u5B83\u95EE\u4F60\u600E\u4E48\u624B\u5199\uFF0C\u4F60\u82E5\u662F\u53EA\u5199\u4E86 JSON.parse(JSON.stringify(source))\u80AF\u5B9A\u662F\u4E0D\u5408\u683C\u7684\u3002\u8FD9\u4E2A\u95EE\u9898\u53EF\u4EE5\u884D\u751F\u51FA\u5F88\u591A\u95EE\u9898\uFF0C\u4F8B\u5982\u6570\u636E\u7C7B\u578B\u7684\u5224\u65AD\uFF0Cfor \u5FAA\u73AF\uFF0C\u539F\u578B\u94FE\uFF0C\u9012\u5F52\u4EE5\u53CA hash \u8868\uFF08key-value \u5F62\u5F0F\u5B58\u50A8\u6570\u636E\uFF09\u7B49\u7B49</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,5),O={href:"https://www.cnblogs.com/baiyangyuanzi/p/6518218.html",target:"_blank",rel:"noopener noreferrer"},_=s("\u4F7F\u7528 slice \u548C concat \u5BF9\u6570\u7EC4\u7684\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D"),x={href:"https://juejin.cn/post/6844904021627502599",target:"_blank",rel:"noopener noreferrer"},E=s("\u5934\u6761\u9762\u8BD5\u5B98\uFF1A\u4F60\u77E5\u9053\u5982\u4F55\u5B9E\u73B0\u9AD8\u6027\u80FD\u7248\u672C\u7684\u6DF1\u62F7\u8D1D\u561B\uFF1F"),A=s("\u5982\u4F55\u5199\u51FA\u4E00\u4E2A\u60CA\u8273\u9762\u8BD5\u5B98\u7684\u6DF1\u62F7\u8D1D");function S(B,F){const o=e("RouterLink"),p=e("ExternalLinkIcon");return u(),r(i,null,[b,n("blockquote",null,[n("p",null,[d,a(o,{to:"/JavaScript/%E5%AF%B9%E8%B1%A1.html"},{default:c(()=>[m]),_:1}),y])]),g,n("p",null,[f,n("a",h,[j,a(p)]),w]),v,n("ul",null,[n("li",null,[n("a",O,[_,a(p)])]),n("li",null,[n("a",x,[E,a(p)])]),n("li",null,[a(o,{to:"/JavaScript/www.conardli.top/blog/article/JS%E8%BF%9B%E9%98%B6/%E5%A6%82%E4%BD%95%E5%86%99%E5%87%BA%E4%B8%80%E4%B8%AA%E6%83%8A%E8%89%B3%E9%9D%A2%E8%AF%95%E5%AE%98%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D.html"},{default:c(()=>[A]),_:1})])])],64)}var J=l(k,[["render",S],["__file","\u62F7\u8D1D\u7684\u79D8\u5BC6.html.vue"]]);export{J as default};
