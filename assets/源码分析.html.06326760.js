import{_ as l,r as c,o as u,c as i,a as s,d as a,w as t,F as r,b as n,e}from"./app.873f0dc8.js";const k={},d=s("h1",{id:"\u4ECE\u6D45\u5165\u6DF1\u4E86\u89E3-koa2-\u6E90\u7801",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u4ECE\u6D45\u5165\u6DF1\u4E86\u89E3-koa2-\u6E90\u7801","aria-hidden":"true"},"#"),n(" \u4ECE\u6D45\u5165\u6DF1\u4E86\u89E3 Koa2 \u6E90\u7801")],-1),b=n("\u518D\u524D\u6587\u6211\u4EEC\u4ECB\u7ECD\u8FC7\u4EC0\u4E48\u662F "),m=n("Koa2 \u7684\u57FA\u7840"),h=e('<h2 id="\u7B80\u5355\u56DE\u987E\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u56DE\u987E\u4E0B" aria-hidden="true">#</a> \u7B80\u5355\u56DE\u987E\u4E0B</h2><h3 id="\u4EC0\u4E48\u662F-koa2" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-koa2" aria-hidden="true">#</a> \u4EC0\u4E48\u662F koa2</h3><ol><li>NodeJS \u7684 web \u5F00\u53D1\u6846\u67B6</li><li>Koa \u53EF\u88AB\u89C6\u4E3A nodejs \u7684 HTTP \u6A21\u5757\u7684\u62BD\u8C61</li></ol><h3 id="\u6E90\u7801\u91CD\u70B9" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u91CD\u70B9" aria-hidden="true">#</a> \u6E90\u7801\u91CD\u70B9</h3><p>\u4E2D\u95F4\u4EF6\u673A\u5236</p><p>\u6D0B\u8471\u6A21\u578B</p><p>compose</p><h2 id="\u6E90\u7801\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u7ED3\u6784" aria-hidden="true">#</a> \u6E90\u7801\u7ED3\u6784</h2>',8),f=n("Koa2 \u7684\u6E90\u7801\u5730\u5740\uFF1A"),w={href:"https://github.com/koajs/koa",target:"_blank",rel:"noopener noreferrer"},g=n("https://github.com/koajs/koa"),x=e('<p>\u5176\u4E2D lib \u4E3A\u5176\u6E90\u7801</p><p><img src="https://i.loli.net/2021/08/26/toxOpd5H6XEwaQj.png" alt="koa2\u6E90\u7801"></p><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u53EA\u6709\u56DB\u4E2A\u6587\u4EF6\uFF1A<code>application.js</code>\u3001<code>context.js</code>\u3001<code>request.js</code>\u3001<code>response.js</code></p><h2 id="application" tabindex="-1"><a class="header-anchor" href="#application" aria-hidden="true">#</a> application</h2>',4),y=n("\u4E3A\u5165\u53E3\u6587\u4EF6\uFF0C\u5B83\u7EE7\u627F\u4E86 Emitter \u6A21\u5757\uFF0CEmitter \u6A21\u5757\u662F NodeJS \u539F\u751F\u7684\u6A21\u5757\uFF0C\u6211\u4EEC\u5728"),v=n("\u8FD9\u7BC7\u6587\u7AE0"),_=n("\u4E2D\u66FE\u7ECF\u4ECB\u7ECD\u8FC7\u5B83\uFF0C\u7B80\u5355\u6765\u8BF4\uFF0CEmitter \u6A21\u5757\u80FD\u5B9E\u73B0\u4E8B\u4EF6\u76D1\u542C\u548C\u4E8B\u4EF6\u89E6\u53D1\u80FD\u529B"),j=s("p",null,[s("img",{src:"https://i.loli.net/2021/08/26/JqloRhD7zLaCSdm.png",alt:"application1"})],-1),q=n("\u4F7F\u7528 class \u6765\u5199\u7C7B\u53EF\u4EE5\u770B\u770B\u8FD9\u7BC7\uFF1A"),E=n("class"),P=n("\uFF0C\u8FD9\u91CC\u9ED8\u8BA4\u4F60\u5DF2\u7ECF\u4F1A class \u4E86"),B=e(`<p>\u5220\u6389\u6CE8\u91CA\uFF0C\u4ECE\u6574\u7406\u770B <code>Application</code> \u6784\u9020\u51FD\u6570</p><p><img src="https://i.loli.net/2021/08/26/swAqmIGTVCuZ2M6.png" alt="Application\u6784\u9020\u51FD\u6570"></p><p>Application \u5728\u5176\u539F\u578B\u4E0A\u63D0\u4F9B\u4E86 listen\u3001toJSON\u3001inspect\u3001use\u3001callback\u3001handleRequest\u3001createContext\u3001onerror \u7B49\u516B\u4E2A\u65B9\u6CD5\uFF0C\u5176\u4E2D</p><ul><li>listen\uFF1A\u63D0\u4F9B HTTP \u670D\u52A1</li><li>use\uFF1A\u4E2D\u95F4\u4EF6\u6302\u8F7D</li><li>callback\uFF1A\u83B7\u53D6 http server \u6240\u9700\u8981\u7684 callback \u51FD\u6570</li><li>handleRequest\uFF1A\u5904\u7406\u8BF7\u6C42\u4F53</li><li>createContext\uFF1A\u6784\u9020 ctx\uFF0C\u5408\u5E76 node \u7684 req\u3001res\uFF0C\u6784\u9020 Koa \u7684 \u53C2\u6570\u2014\u2014ctx</li><li>onerror\uFF1A\u9519\u8BEF\u5904\u7406</li></ul><p>\u5176\u4ED6\u7684\u5148\u4E0D\u8981\u5728\u610F\uFF0C\u6211\u4EEC\u518D\u6765\u770B\u770B \u6784\u9020\u5668 <code>constructor</code></p><p><img src="https://i.loli.net/2021/08/26/Emlw8daN3ZTuDvJ.png" alt="Application\u7684\u6784\u9020\u5668"></p><p>\u6655\uFF0C\u8FD9\u90FD\u5565\u548C\u5565\uFF0C\u6211\u4EEC\u542F\u52A8\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u670D\u52A1\uFF0C\u770B\u770B\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;Koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3000\u8BF7\u6C42\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><img src="https://i.loli.net/2021/08/26/kda3JfI9AoCPpVt.png" alt="\u5B9E\u4F8B"></p><p>\u80FD\u770B\u51FA\u6765\uFF0C\u6211\u4EEC\u7684\u5B9E\u4F8B\u548C\u6784\u9020\u5668\u4E00\u4E00\u5BF9\u5E94\uFF0C</p><p>\u6253\u65AD\u70B9\u770B\u539F\u578B</p><p><img src="https://i.loli.net/2021/08/26/WJzLP3FAKqTwy96.png" alt="image-20210826160023261"></p><p>\u54E6\u4E86\uFF0C\u9664\u53BB\u975E\u5173\u952E\u5B57\u6BB5\uFF0C\u6211\u4EEC\u53EA\u5173\u6CE8\u91CD\u70B9</p><p>Koa \u7684\u6784\u9020\u5668\u4E0A\u7684 this.middleware\u3001 this.context\u3001 this.request\u3001this.response</p><p>\u539F\u578B\u4E0A\u6709\uFF1Alisten\u3001use\u3001callback\u3001handleRequest\u3001createContext\u3001onerror</p><blockquote><p>\u6CE8\uFF1A\u4EE5\u4E0B\u4EE3\u7801\u90FD\u662F\u5220\u9664\u5F02\u5E38\u548C\u975E\u5173\u952E\u4EE3\u7801</p></blockquote><h3 id="\u5148\u770B-listen" tabindex="-1"><a class="header-anchor" href="#\u5148\u770B-listen" aria-hidden="true">#</a> \u5148\u770B listen</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
  <span class="token function">listen</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA listen \u5C31\u662F\u7528 http \u6A21\u5757\u5C01\u88C5\u4E86\u4E00\u4E2A http \u670D\u52A1\uFF0C\u91CD\u70B9\u662F\u4F20\u5165\u7684 <code>this.callback()</code>\u3002\u597D\uFF0C\u6211\u4EEC\u73B0\u5728\u5C31\u53BB\u770B callback \u65B9\u6CD5</p><h3 id="callback" tabindex="-1"><a class="header-anchor" href="#callback" aria-hidden="true">#</a> callback</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>middleware<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleRequest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> handleRequest
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B83\u5305\u542B\u4E86\u4E2D\u95F4\u4EF6\u7684\u5408\u5E76\uFF0C\u4E0A\u4E0B\u6587\u7684\u5904\u7406\uFF0C\u4EE5\u53CA res \u7684\u7279\u6B8A\u5904\u7406</p><h4 id="\u4E2D\u95F4\u4EF6\u7684\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u95F4\u4EF6\u7684\u5408\u5E76" aria-hidden="true">#</a> \u4E2D\u95F4\u4EF6\u7684\u5408\u5E76</h4>`,23),K=n("\u4F7F\u7528\u4E86 "),C=s("code",null,"koa-compose",-1),A=n(" \u6765\u5408\u5E76\u4E2D\u95F4\u4EF6\uFF0C\u8FD9\u4E5F\u662F\u6D0B\u8471\u6A21\u578B\u7684\u5173\u952E\uFF0Ckoa-compose \u7684\u6E90\u7801\u5730\u5740\uFF1A"),S={href:"https://github.com/koajs/compose%E3%80%82%E8%BF%99%E4%BB%A3%E7%A0%81%E5%B7%B2%E7%BB%8F%E4%B8%89%E5%B9%B4%E6%B2%A1%E5%8A%A8%E4%BA%86%EF%BC%8C%E7%A8%B3%E7%9A%84%E4%B8%80%E9%80%BC",target:"_blank",rel:"noopener noreferrer"},R=n("https://github.com/koajs/compose\u3002\u8FD9\u4EE3\u7801\u5DF2\u7ECF\u4E09\u5E74\u6CA1\u52A8\u4E86\uFF0C\u7A33\u7684\u4E00\u903C"),T=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4E00\u6643\u773C\u662F\u770B\u4E0D\u660E\u767D\u7684\uFF0C\u6211\u4EEC\u9700\u8981\u5148\u660E\u767D middleware \u662F\u4EC0\u4E48\uFF0C\u5373\u4E2D\u95F4\u4EF6\u6570\u7EC4\uFF0C\u90A3\u5B83\u662F\u600E\u4E48\u6765\u7684\u5462\uFF0C\u6784\u9020\u5668\u4E2D\u6709 this.middleware\uFF0C\u8C01\u4F7F\u7528\u5230\u4E86\u2014\u2014 use \u65B9\u6CD5</p><p>\u6211\u4EEC\u5148\u8DF3\u51FA\u53BB\u5148\u770B use \u65B9\u6CD5</p><h4 id="use" tabindex="-1"><a class="header-anchor" href="#use" aria-hidden="true">#</a> use</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>middleware<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u9664\u53BB\u5F02\u5E38\u5904\u7406\uFF0C\u5173\u952E\u662F\u8FD9\u4E24\u6B65\uFF0C<code>this.middleware</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u7B2C\u4E00\u6B65\u5F80 <code>this.middleware</code> \u4E2D push \u4E2D\u95F4\u4EF6\uFF1B\u7B2C\u4E8C\u6B65\u8FD4\u56DE this \u8BA9\u5176\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\uFF0C\u5F53\u521D\u672C\u4EBA\u88AB\u9762\u8BD5\u5982\u4F55\u505A promise \u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u61F5\u903C\u8138\uFF0C\u6CA1\u60F3\u5230\u5728\u8FD9\u91CC\u770B\u5230\u4E86</p><p>\u56DE\u8FC7\u5934\u6765\u770B koa-compose \u6E90\u7801\uFF0C\u8BBE\u60F3\u4E00\u4E0B\u8FD9\u79CD\u573A\u666F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u6211\u4EEC\u77E5\u9053 \u5B83\u7684\u8FD0\u884C\u662F 123456</p><p>\u5B83\u7684 this.middleware \u7684\u6784\u6210\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>middleware <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4E0D\u8981\u611F\u5230\u5947\u602A\uFF0C\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61\u4E4B\u4E00\uFF0C\u662F\u5BF9\u8C61\u5C31\u53EF\u4EE5\u4F20\u503C</p><p><code>const fn = compose(this.middleware)</code></p><p>\u6211\u4EEC\u5C06\u5176 JavaScript \u5316\uFF0C\u5176\u4ED6\u4E0D\u7528\u6539\uFF0C\u53EA\u9700\u8981\u628A\u6700\u540E\u4E00\u4E2A\u51FD\u6570\u6539\u6210</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">-</span>ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
    <span class="token operator">+</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="https://i.loli.net/2021/08/26/bSfzDjPWnVx6JCU.png" alt="\u6D4B\u8BD5compose"></p><p><img src="https://i.loli.net/2021/08/26/rSN5GpudU2KimLW.png" alt="\u6D4B\u8BD5compose2"></p><h4 id="\u9010\u884C\u89E3\u6790-koa-compose" tabindex="-1"><a class="header-anchor" href="#\u9010\u884C\u89E3\u6790-koa-compose" aria-hidden="true">#</a> \u9010\u884C\u89E3\u6790 koa-compose</h4><p>\u8FD9\u4E00\u6BB5\u5F88\u91CD\u8981\uFF0C\u9762\u8BD5\u7684\u65F6\u5019\u5E38\u8003\uFF0C\u8BA9\u4F60\u624B\u5199\u4E00\u4E2A compose \uFF0C\u6DE6\u5B83</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//1. async (ctx, next) =&gt; { console.log(1); await next(); console.log(6); } \u4E2D\u95F4\u4EF6</span>
<span class="token comment">//2. const fn = compose(this.middleware) \u5408\u5E76\u4E2D\u95F4\u4EF6</span>
<span class="token comment">//3. fn() \u6267\u884C\u4E2D\u95F4\u4EF6</span>

<span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter">middleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u6267\u884C <code>const fn = compose(this.middleware)</code>\uFF0C\u5373\u5982\u4E0B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      index <span class="token operator">=</span> i
      <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6267\u884C <code>fn()</code>\uFF0C\u5373\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> index<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;next() called multiple times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      index <span class="token operator">=</span> i	<span class="token comment">// index = 0</span>
      <span class="token keyword">let</span> fn <span class="token operator">=</span> middleware<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">// fn \u4E3A\u7B2C\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next <span class="token comment">// \u5F53\u5F04\u5230\u6700\u540E\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u65F6\uFF0C\u6700\u540E\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u8D4B\u503C\u4E3A fn</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u6267\u884C \u9012\u5F52\u6267\u884C dispatch(1)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u4E5F\u5C31\u662F\u7B2C\u4E00\u4E2A\u4E2D\u95F4\u4EF6\uFF0C\u8981\u5148\u7B49\u7B2C\u4E8C\u4E2A\u4E2D\u95F4\u4EF6\u6267\u884C\u5B8C\u624D\u8FD4\u56DE\uFF0C\u7B2C\u4E8C\u4E2A\u8981\u7B49\u7B2C\u4E09\u4E2A\u6267\u884C\u5B8C\u624D\u8FD4\u56DE\uFF0C\u76F4\u5230\u4E2D\u95F4\u4EF6\u6267\u884C\u6267\u884C\u5B8C\u6BD5</p>`,25),J=n("\u5173\u4E8E Promise \u7684\u77E5\u8BC6\u6211\u4EEC\u53EF\u4EE5\u53BB\u770B\u770B"),N=n("\u8FD9\u7BC7\u6587\u7AE0"),O=n("\uFF0C\u8FD9\u91CC\u8981\u8BF4\u7684\u662F "),F=s("code",null,"Promise.resolve",-1),L=n(" \u5C31\u662F\u4E2A"),V=s("s",null,"\u6E23\u5973",-1),H=n(" Promise \u5B9E\u4F8B\uFF0C\u4E4B\u6240\u4EE5\u4F7F\u7528 "),I=s("code",null,"Promise.resolve",-1),U=n(" \u662F\u4E3A\u4E86\u89E3\u51B3\u5F02\u6B65"),z=e(`<p>\u629B\u53BB <code>Promise.resolve</code>\uFF0C\u6211\u4EEC\u5148\u770B\u4E00\u4E0B\u9012\u5F52\u7684\u4F7F\u7528\uFF0C\u6267\u884C\u4EE5\u4E0B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1,2,3,4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u56DE\u8FC7\u5934\u6765\u518D\u770B\u4E00\u6B21 compose\uFF0C\u4EE3\u7801\u7C7B\u4F3C\u4E8E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5047\u8BBE this.middleware = [fn1, fn2, fn3]</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> fn <span class="token operator">=</span> next <span class="token comment">// fn3 \u6CA1\u6709 next</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u56E0\u4E3A fn \u4E3A\u7A7A\uFF0C\u6267\u884C\u8FD9\u4E00\u884C</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FD9\u79CD\u9012\u5F52\u7684\u65B9\u5F0F\u7C7B\u4F3C\u6267\u884C\u6808\uFF0C\u5148\u8FDB\u5148\u51FA</p><p><img src="https://i.loli.net/2021/08/27/jHTlILthfZJGdcR.png" alt="\u6267\u884C\u6808"></p><p>\u8FD9\u91CC\u8981\u591A\u601D\u8003\u4E00\u4E0B\uFF0C\u9012\u5F52\u7684\u4F7F\u7528\uFF0C\u5BF9 Promise.resolve \u4E0D\u7528\u592A\u5728\u610F</p><h4 id="\u4E0A\u4E0B\u6587\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4E0B\u6587\u7684\u5904\u7406" aria-hidden="true">#</a> \u4E0A\u4E0B\u6587\u7684\u5904\u7406</h4><p>\u4E0A\u4E0B\u6587\u7684\u5904\u7406\u5373\u8C03\u7528\u4E86 createContext</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">createContext</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span>
    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>request <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>response <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span>app <span class="token operator">=</span> request<span class="token punctuation">.</span>app <span class="token operator">=</span> response<span class="token punctuation">.</span>app <span class="token operator">=</span> <span class="token keyword">this</span>
    context<span class="token punctuation">.</span>req <span class="token operator">=</span> request<span class="token punctuation">.</span>req <span class="token operator">=</span> response<span class="token punctuation">.</span>req <span class="token operator">=</span> req
    context<span class="token punctuation">.</span>res <span class="token operator">=</span> request<span class="token punctuation">.</span>res <span class="token operator">=</span> response<span class="token punctuation">.</span>res <span class="token operator">=</span> res
    request<span class="token punctuation">.</span>ctx <span class="token operator">=</span> response<span class="token punctuation">.</span>ctx <span class="token operator">=</span> context
    request<span class="token punctuation">.</span>response <span class="token operator">=</span> response
    response<span class="token punctuation">.</span>request <span class="token operator">=</span> request
    context<span class="token punctuation">.</span>originalUrl <span class="token operator">=</span> request<span class="token punctuation">.</span>originalUrl <span class="token operator">=</span> req<span class="token punctuation">.</span>url
    context<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> context
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4F20\u5165\u539F\u751F\u7684 request \u548C response\uFF0C\u8FD4\u56DE\u4E00\u4E2A \u4E0A\u4E0B\u6587\u2014\u2014context\uFF0C\u4EE3\u7801\u5F88\u6E05\u6670\uFF0C\u4E0D\u89E3\u91CA</p><h4 id="res-\u7684\u7279\u6B8A\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#res-\u7684\u7279\u6B8A\u5904\u7406" aria-hidden="true">#</a> res \u7684\u7279\u6B8A\u5904\u7406</h4><p>callback \u4E2D\u662F\u5148\u6267\u884C this.createContext\uFF0C\u62FF\u5230\u4E0A\u4E0B\u6587\u540E\uFF0C\u518D\u53BB\u6267\u884C handleRequest\uFF0C\u5148\u770B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> fnMiddleware</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> ctx<span class="token punctuation">.</span>res
    res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">404</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">onerror</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleResponse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">respond</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token function">onFinished</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> onerror<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">fnMiddleware</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>handleResponse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onerror<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E00\u5207\u90FD\u6E05\u6670\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;Koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3000\u8BF7\u6C42\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u6837\u4E00\u6BB5\u4EE3\u7801\uFF0C\u5B9E\u4F8B\u5316\u540E\uFF0C\u83B7\u5F97\u4E86 this.middleware\u3001this.context\u3001this.request\u3001this.response \u56DB\u5927\u5C06\uFF0C\u4F60\u4F7F\u7528 app.use() \u65F6\uFF0C\u5C06\u5176\u4E2D\u7684\u51FD\u6570\u63A8\u5230 this.middleware\u3002\u518D\u4F7F\u7528 app.listen() \u65F6\uFF0C\u76F8\u5F53\u4E8E\u8D77\u4E86\u4E00\u4E2A HTTP \u670D\u52A1\uFF0C\u5B83\u5408\u5E76\u4E86\u4E2D\u95F4\u4EF6\uFF0C\u83B7\u53D6\u4E86\u4E0A\u4E0B\u6587\uFF0C\u5E76\u5BF9 res \u8FDB\u884C\u4E86\u7279\u6B8A\u5904\u7406</p><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">onerror</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">Error</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;non-error thrown: %j&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">404</span> <span class="token operator">==</span> err<span class="token punctuation">.</span>status <span class="token operator">||</span> err<span class="token punctuation">.</span>expose<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>silent<span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token keyword">const</span> msg <span class="token operator">=</span> err<span class="token punctuation">.</span>stack <span class="token operator">||</span> err<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">,</span> <span class="token string">&#39;  &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="context-js" tabindex="-1"><a class="header-anchor" href="#context-js" aria-hidden="true">#</a> context.js</h2><p>\u5F15\u5165\u6211\u773C\u5E18\u7684\u662F\u4E24\u4E2A\u4E1C\u897F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.</span>
<span class="token keyword">const</span> proto <span class="token operator">=</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function">inspect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2.</span>
<span class="token function">delegate</span><span class="token punctuation">(</span>proto<span class="token punctuation">,</span> <span class="token string">&#39;response&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token string">&#39;attachment&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u7B2C\u4E00\u4E2A\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF0Cconst proto = { inspect() {...} ...}\uFF0C\u5E76\u4E14 module.exports \u5BFC\u51FA\u8FD9\u4E2A\u5BF9\u8C61</p><p>\u7B2C\u4E8C\u4E2A\u53EF\u4EE5\u8FD9\u4E48\u770B\uFF0Cdelegate \u5C31\u662F\u4EE3\u7406\uFF0C\u8FD9\u662F\u4E3A\u4E86\u65B9\u4FBF\u5F00\u53D1\u8005\u800C\u8BBE\u8BA1\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u5185\u90E8\u5BF9\u8C61 response \u7684\u5C5E\u6027\uFF0C\u59D4\u6258\u81F3\u66B4\u9732\u5728\u5916\u7684 proto \u4E0A</span>
<span class="token function">delegate</span><span class="token punctuation">(</span>proto<span class="token punctuation">,</span> <span class="token string">&#39;response&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token string">&#39;redirect&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token string">&#39;vary&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">(</span><span class="token string">&#39;headerSent&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">(</span><span class="token string">&#39;writable&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u800C\u4F7F\u7528 <code>delegate(proto, &#39;response&#39;).access(&#39;status&#39;)... </code>\uFF0C\u5C31\u662F\u5728 context.js \u5BFC\u51FA\u7684\u6587\u4EF6\uFF0C\u628A proto.response \u4E0A\u7684\u5404\u4E2A\u53C2\u6570\u90FD\u4EE3\u7406\u5230 proto \u4E0A\uFF0C\u90A3 proto.response \u662F\u4EC0\u4E48\uFF1F\u5C31\u662F context.response\uFF0Ccontext.response \u54EA\u6765\u7684\uFF1F</p><p>\u56DE\u987E\u4E00\u4E0B\uFF0C \u5728 createContext \u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span>
    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>request <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>response <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>context.response \u6709\u4E86\uFF0C\u5C31\u660E\u4E86\u4E86\uFF0C context.response = this.response\uFF0C\u56E0\u4E3A delegate\uFF0C\u6240\u4EE5 context.response \u4E0A\u7684\u53C2\u6570\u4EE3\u7406\u5230\u4E86 context \u4E0A\u4E86\uFF0C\u4E3E\u4E2A\u4F8B\u5B50</p><ul><li>ctx.header \u662F ctx.request.header \u4E0A\u4EE3\u7406\u7684</li><li>ctx.body \u662F ctx.response.body \u4E0A\u4EE3\u7406\u7684</li></ul><h2 id="request-js-\u548C-response-js" tabindex="-1"><a class="header-anchor" href="#request-js-\u548C-response-js" aria-hidden="true">#</a> request.js \u548C response.js</h2>`,31),D=n("\u4E00\u4E2A\u5904\u7406\u8BF7\u6C42\u5BF9\u8C61\uFF0C\u4E00\u4E2A\u5904\u7406\u8FD4\u56DE\u5BF9\u8C61\uFF0C\u57FA\u672C\u4E0A\u662F\u5BF9\u539F\u751F req\u3001res \u7684\u7B80\u5316\u5904\u7406\uFF0C\u5927\u91CF\u4F7F\u7528\u4E86 ES6 \u4E2D\u7684 get \u548C post \u8BED\u6CD5\uFF08\u5177\u4F53\u53EF\u79FB\u6B65\u770B"),G=n("\u8FD9\u7BC7"),M=n("\uFF09"),W=n("\u5927\u6982\u5C31\u662F\u8FD9\u6837\uFF0C\u4E86\u89E3\u4E86\u8FD9\u4E48\u591A\uFF0C\u600E\u4E48\u624B\u5199\u4E00\u4E2A Koa2 \u5462\uFF0C\u8BF7\u770B\u4E0B\u4E00\u7BC7\u2014\u2014"),Z=n("\u624B\u5199 Koa2"),Q=s("h2",{id:"\u53C2\u8003\u8D44\u6599",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u53C2\u8003\u8D44\u6599","aria-hidden":"true"},"#"),n(" \u53C2\u8003\u8D44\u6599")],-1),X={href:"https://segmentfault.com/a/1190000018488597",target:"_blank",rel:"noopener noreferrer"},Y=n("KOA2 \u6846\u67B6\u539F\u7406\u89E3\u6790\u548C\u5B9E\u73B0"),$={href:"https://developers.weixin.qq.com/community/develop/article/doc/0000e4c9290bc069f3380e7645b813",target:"_blank",rel:"noopener noreferrer"},nn=n("\u53EF\u80FD\u662F\u76EE\u524D\u6700\u5168\u7684 koa \u6E90\u7801\u89E3\u6790\u6307\u5357");function sn(an,pn){const p=c("RouterLink"),o=c("ExternalLinkIcon");return u(),i(r,null,[d,s("p",null,[b,a(p,{to:"/Koa2/Koa2%E5%9F%BA%E7%A1%80.html"},{default:t(()=>[m]),_:1})]),h,s("p",null,[f,s("a",w,[g,a(o)])]),x,s("p",null,[y,a(p,{to:"/Node/Emitter.html"},{default:t(()=>[v]),_:1}),_]),j,s("p",null,[q,a(p,{to:"/ES6/class.html"},{default:t(()=>[E]),_:1}),P]),B,s("p",null,[K,C,A,s("a",S,[R,a(o)])]),T,s("p",null,[J,a(p,{to:"/ES6/Promise.html"},{default:t(()=>[N]),_:1}),O,F,L,V,H,I,U]),z,s("p",null,[D,a(p,{to:"/ES6/"},{default:t(()=>[G]),_:1}),M]),s("p",null,[W,a(p,{to:"/Koa2/%E6%89%8B%E5%86%99Koa2.html"},{default:t(()=>[Z]),_:1})]),Q,s("ul",null,[s("li",null,[s("p",null,[s("a",X,[Y,a(o)])])]),s("li",null,[s("p",null,[s("a",$,[nn,a(o)])])])])],64)}var en=l(k,[["render",sn],["__file","\u6E90\u7801\u5206\u6790.html.vue"]]);export{en as default};
