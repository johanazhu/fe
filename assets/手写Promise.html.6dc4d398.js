import{_ as t,r as e,o,c,a as n,d as a,F as l,e as u,b as p}from"./app.873f0dc8.js";const i={},r=u(`<h1 id="\u624B\u5199-promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-promise" aria-hidden="true">#</a> \u624B\u5199 Promise</h1><h3 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h3><blockquote><p>\u83AB\u8981\u4E00\u53E3\u5403\u6210\u5927\u80D6\u5B50\uFF0C\u5728\u8FD9\u4E2A\u7269\u6B32\u6A2A\u6D41\u7684\u793E\u4F1A\uFF0C\u5C11\u53CD\u800C\u662F\u591A</p></blockquote><h3 id="\u57FA\u672C\u5199\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u5199\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u5199\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u6700\u5C0F\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6700\u5C0F\u5B9E\u73B0" aria-hidden="true">#</a> \u6700\u5C0F\u5B9E\u73B0</h3><p>Promise \u4E2D\u6700\u91CD\u8981\u7684\u662F resolve \u548C then</p><h4 id="\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6A21\u62DF\u6210\u529F</span>
    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token comment">// \u6267\u884C\u56DE\u8C03\u51FD\u6570\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u51FD\u6570</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u5B9E\u4F8B\u5316\u65F6\uFF0C\u76F4\u63A5\u6267\u884C\u4F20\u5165\u7684fn\u51FD\u6570\uFF0C\u5E76\u5C06resolve\u51FD\u6570\u4F20\u5165</span>
    <span class="token function">fn</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u56DE\u5934\u770B\u6848\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF1A\u65E0\u8BBA\u662F fn \u8FD8\u662F resolve \u90FD\u662F\u51FD\u6570\uFF0C\u56E0\u4E3A\u5728 JS \u4E2D\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5F53\u4F5C\u503C\u6765\u4F20\u9012\uFF0C\u6240\u4EE5\u8FD9\u6837\u7684\u5199\u6CD5\u4E0D\u5947\u602A</p></blockquote><p>\u6211\u4EEC\u7684\u624B\u5199\u6E90\u7801\u4E2D\u6709 <code>fn(resolve)</code> \uFF0C\u5F53 <code>new Promise(fn)</code> \u65F6\uFF0C\u6211\u4EEC\u5C31\u5DF2\u7ECF\u8C03\u7528\u4E86 <code>fn</code> \uFF0C\u5E76\u628A Promise \u6784\u9020\u51FD\u6570\u4E2D\u7684 resolve \u4F20\u5165\u3002\u8FD9\u91CC\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6267\u884C\u987A\u5E8F\u662F\uFF1A</p><ul><li>new Promise(fn)</li><li>\u6267\u884C fn \u51FD\u6570\uFF0C\u6253\u5370 fn</li><li>500 \u6BEB\u79D2\u540E\uFF0C\u6267\u884C resolve(1)</li><li>this.data \u8D4B\u503C\u4E3A 1\uFF0C\u5E76\u6267\u884C this.callbacks</li></ul><h4 id="then" tabindex="-1"><a class="header-anchor" href="#then" aria-hidden="true">#</a> then</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onResolved</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u56DE\u5230\u6848\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>

promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6E90\u7801\u548C\u6848\u4F8B\u5BF9\u6BD4\u7740\u770B\uFF0C\u53EF\u4EE5\u770B\u51FA</p><ul><li><p>onResolved \u662F then \u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570</p></li><li><p>\u6E90\u7801\u7B2C\u4E00\u884C <code>return new Promise</code> \uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\uFF0C\u4E3A\u4EC0\u4E48\u8981\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5462\uFF0C\u56E0\u4E3A\u89C4\u5B9A\u8BF4 then \u8981\u94FE\u5F0F\u8C03\u7528\uFF0C\u800C\u4E14 then \u4E2D\u7684\u5982\u679C\u6CA1\u6709\u5B9E\u4F8B\uFF0C\u5C31\u7EE7\u627F\u7528\u4E0A\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u89C4\u5219\u5982\u6B64\uFF0C\u6240\u4EE5\u6211\u4EEC\u5FC5\u987B \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B</p></li><li><p><code>return new Promise((resolve) =&gt; {...})</code> \u5176\u5B9E\u5C31\u548C\u4E0A\u6587\u8BF4\u7684 fn \u662F\u4E00\u4E2A\u5473\u9053\uFF0C\u5373\u6267\u884C fn \u51FD\u6570\uFF0C\u8FD9\u4E2A fn \u51FD\u6570\u4E2D\uFF0C\u5411 this.callbacks \u6570\u7EC4 push \u533F\u540D\u51FD\u6570() =&gt; {const res = ...}</p></li><li><p>\u5F53 resolve(2)\u65F6\uFF0C\u6267\u884C this.callbacks \u51FD\u6570\u7EC4\u6210\u7684\u6570\u7EC4\u3002</p></li><li><p>\u5982\u679C promise1.then() \u6267\u884C\u540E\u7684\u503C\u8FD4\u56DE\u7684\u662F promise\uFF0C\u90A3\u4E48\u5C31\u8BA9\u65B0\u7684 Promise \u5B9E\u4F8B\u518D then</p></li><li><p>\u5982\u679C\u662F\u4E2A\u666E\u901A\u503C\uFF0C\u90A3\u5C31\u6267\u884C resolve(res)\uFF0C\u4F9D\u6B21\u6267\u884C callbacks \u91CC\u7684\u51FD\u6570</p></li></ul><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,21),k={href:"https://juejin.cn/post/6945319439772434469",target:"_blank",rel:"noopener noreferrer"},b=p("\u4ECE\u4E00\u9053\u8BA9\u6211\u5931\u7720\u7684 Promise \u9762\u8BD5\u9898\u5F00\u59CB\uFF0C\u6DF1\u5165\u5206\u6790 Promise \u5B9E\u73B0\u7EC6\u8282"),m={href:"https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&mid=2651234151&idx=1&sn=6292156c16e851d8d5f1dbccdfc82a74&chksm=bd4946e38a3ecff561bef99277e0f1ad5ec7f7014437aa100cb01e872eee80985adb04734b11&mpshare=1&scene=1&srcid=&sharer_sharetime=1570493248167&sharer_shareid=778ad5bf3b27e0078eb105d7277263f6#rd",target:"_blank",rel:"noopener noreferrer"},d=p("\u3010\u7B2C 1738 \u671F\u3011100 \u884C\u4EE3\u7801\u5B9E\u73B0 Promises/A+ \u89C4\u8303"),h={href:"https://juejin.cn/post/6844904094079926286",target:"_blank",rel:"noopener noreferrer"},f=p("\u6700\u7B80\u5B9E\u73B0 Promise\uFF0C\u652F\u6301\u5F02\u6B65\u94FE\u5F0F\u8C03\u7528\uFF0820 \u884C\uFF09");function v(g,_){const s=e("ExternalLinkIcon");return o(),c(l,null,[r,n("ul",null,[n("li",null,[n("a",k,[b,a(s)])]),n("li",null,[n("a",m,[d,a(s)])]),n("li",null,[n("a",h,[f,a(s)])])])],64)}var P=t(i,[["render",v],["__file","\u624B\u5199Promise.html.vue"]]);export{P as default};
