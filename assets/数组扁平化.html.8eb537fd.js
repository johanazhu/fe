import{_ as s,r as e,o as t,c as p,a as n,d as c,F as o,e as r,b as l}from"./app.873f0dc8.js";const u={},i=r(`<h1 id="\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> \u6570\u7EC4\u6241\u5E73\u5316</h1><p>\u9700\u6C42\uFF1A\u591A\u7EF4\u6570\u7EC4 \u2014\u2014&gt; \u4E00\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// -&gt; [1, 2, 3, 4, 5, 6]</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-es6-\u4E2D\u7684-flat-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-es6-\u4E2D\u7684-flat-\u65B9\u6CD5" aria-hidden="true">#</a> 1. ES6 \u4E2D\u7684 flat \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-replace-split" tabindex="-1"><a class="header-anchor" href="#_2-replace-split" aria-hidden="true">#</a> 2. replace + split</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\[|\\])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-replace-json-parse" tabindex="-1"><a class="header-anchor" href="#_3-replace-json-parse" aria-hidden="true">#</a> 3. replace + JSON.parse</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\[|\\])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
str <span class="token operator">=</span> <span class="token string">&#39;[&#39;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">;</span>
arr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-\u666E\u901A\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#_4-\u666E\u901A\u9012\u5F52" aria-hidden="true">#</a> 4.\u666E\u901A\u9012\u5F52</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>let result = [];
let fn = function (arr) {
	for (let i = 0; i &lt; arr.length; i++) {
		let item = arr[i];
		if (Array.isArray(item)) {
			fn(item)
		} else {
			result.push(item)
		}
	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_5-reduce-\u51FD\u6570\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#_5-reduce-\u51FD\u6570\u8FED\u4EE3" aria-hidden="true">#</a> 5.reduce \u51FD\u6570\u8FED\u4EE3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">flatten</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">:</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_6-\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 6.\u6269\u5C55\u8FD0\u7B97\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span>isArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,16),k={href:"https://juejin.cn/post/6844903986479251464",target:"_blank",rel:"noopener noreferrer"},d=l("(\u5EFA\u8BAE\u7CBE\u8BFB)\u539F\u751F JS \u7075\u9B42\u4E4B\u95EE(\u4E2D)\uFF0C\u68C0\u9A8C\u81EA\u5DF1\u662F\u5426\u771F\u7684\u719F\u6089 JavaScript\uFF1F");function b(m,h){const a=e("ExternalLinkIcon");return t(),p(o,null,[i,n("p",null,[n("a",k,[d,c(a)])])],64)}var f=s(u,[["render",b],["__file","\u6570\u7EC4\u6241\u5E73\u5316.html.vue"]]);export{f as default};
