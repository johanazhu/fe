import{_ as t,r as e,o,c,a as n,d as a,F as l,e as r,b as p}from"./app.873f0dc8.js";const u={},i=r(`<h1 id="es6-\u5B8C\u5168\u6307\u5357" tabindex="-1"><a class="header-anchor" href="#es6-\u5B8C\u5168\u6307\u5357" aria-hidden="true">#</a> ES6 \u5B8C\u5168\u6307\u5357</h1><p>\u9ED8\u8BA4\u53C2\u6570\u3001\u6A21\u677F\u5B57\u7B26\u4E32\u3001\u89E3\u6784\u8D4B\u503C\u3001\u7BAD\u5934\u51FD\u6570\u3001Class\u3001Modules\u3001Symbol</p><h2 id="\u9ED8\u8BA4\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a> \u9ED8\u8BA4\u53C2\u6570</h2><p>Old\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> age <span class="token operator">=</span> age <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Now\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">var</span> age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6A21\u677F\u5B57\u7B26\u4E32</h2><p>\u9700\u8981\u62FC\u63A5\u5B57\u7B26\u4E32\u7684\u65F6\u5019\u5C3D\u91CF\u6539\u6210\u6A21\u677F\u5B57\u7B26\u4E32\uFF1A</p><p>Old\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> introduction <span class="token operator">=</span> <span class="token string">&#39;my name is&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;, my age is&#39;</span> <span class="token operator">+</span> age<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Now:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> introduction <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">my name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, my age is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> \u89E3\u6784\u8D4B\u503C</h2><p>Old\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span>
    name <span class="token operator">=</span> data<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    age <span class="token operator">=</span> data<span class="token punctuation">.</span>age<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Now\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age <span class="token punctuation">}</span> <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>\u5B57\u7B26\u4E32\u89E3\u6784</strong>\uFF1A<code>const [a, b, c, d, e] = &quot;hello&quot;</code></p><p><strong>\u6570\u503C\u89E3\u6784</strong>\uFF1A<code>const { toString: s } = 123</code></p><p><strong>\u5E03\u5C14\u89E3\u6784</strong>\uFF1A<code>const { toString: b } = true</code></p><p><strong>\u5BF9\u8C61\u89E3\u6784</strong></p><ul><li>\u5F62\u5F0F\uFF1A<code>const { x, y } = { x: 1, y: 2 }</code></li><li>\u9ED8\u8BA4\uFF1A<code>const { x, y = 2 } = { x: 1 }</code></li><li>\u6539\u540D\uFF1A<code>const { x, y: z } = { x: 1, y: 2 }</code></li></ul><p><strong>\u6570\u7EC4\u89E3\u6784</strong></p><ul><li>\u89C4\u5219\uFF1A\u6570\u636E\u7ED3\u6784\u5177\u6709<code>Iterator\u63A5\u53E3</code>\u53EF\u91C7\u7528\u6570\u7EC4\u5F62\u5F0F\u7684\u89E3\u6784\u8D4B\u503C</li><li>\u5F62\u5F0F\uFF1A<code>const [x, y] = [1, 2]</code></li><li>\u9ED8\u8BA4\uFF1A<code>const [x, y = 2] = [1]</code></li></ul><p><strong>\u51FD\u6570\u53C2\u6570\u89E3\u6784</strong></p><ul><li>\u6570\u7EC4\u89E3\u6784\uFF1A<code>function Func([x = 0, y = 1]) {}</code></li><li>\u5BF9\u8C61\u89E3\u6784\uFF1A<code>function Func({ x = 0, y = 1 } = {}) {}</code></li></ul><p>\u5BF9\u8C61\u89E3\u6784\u3001\u6570\u7EC4\u89E3\u6784</p><h2 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h2><p>\u7BAD\u5934\u51FD\u6570\u4E2D\u7684 this\uFF0C\u5C31\u662F\u58F0\u660E\u51FD\u6570\u65F6\u6240\u5904\u4E0A\u4E0B\u6587\u4E2D\u7684 this\uFF0C\u5B83\u4E0D\u4F1A\u88AB\u5176\u4ED6\u65B9\u5F0F\u6240\u6539\u53D8</p><p>Old\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    that<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Now\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="for-of" tabindex="-1"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for of</h2><h3 id="_1-\u904D\u5386\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#_1-\u904D\u5386\u8303\u56F4" aria-hidden="true">#</a> 1. \u904D\u5386\u8303\u56F4</h3><p>for...of \u5FAA\u73AF\u53EF\u4EE5\u4F7F\u7528\u7684\u8303\u56F4\u5305\u62EC\uFF1A</p><ol><li>\u6570\u7EC4</li><li>Set</li><li>Map</li><li>\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF0C\u5982 arguments \u5BF9\u8C61\u3001DOM NodeList \u5BF9\u8C61</li><li>Generator \u5BF9\u8C61</li><li>\u5B57\u7B26\u4E32</li></ol><h3 id="_2-\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#_2-\u4F18\u52BF" aria-hidden="true">#</a> 2. \u4F18\u52BF</h3><p>ES2015 \u5F15\u5165\u4E86 for..of \u5FAA\u73AF\uFF0C\u5B83\u7ED3\u5408\u4E86 forEach \u7684\u7B80\u6D01\u6027\u548C\u4E2D\u65AD\u5FAA\u73AF\u7684\u80FD\u529B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F8B\u5B50 6-1</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> v <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// a b c</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0 &quot;a&quot;</span>
<span class="token comment">// 1 &quot;b&quot;</span>
<span class="token comment">// 2 &quot;c&quot;</span>
\u590D\u5236\u4EE3\u7801<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3-\u904D\u5386-map" tabindex="-1"><a class="header-anchor" href="#_3-\u904D\u5386-map" aria-hidden="true">#</a> 3. \u904D\u5386 Map</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F8B\u5B50 6-2</span>

<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u904D\u5386 key \u503C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u904D\u5386 value \u503C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u904D\u5386 key \u548C value \u503C(\u4E00)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u904D\u5386 key \u548C value \u503C(\u4E8C)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u6269\u5C55\u8FD0\u7B97\u7B26</h2><p>\u5BF9\u8C61\u3001\u6570\u7EC4\u90FD\u6709</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>others <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">e</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u542B\u4E49\uFF1A\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08spread\uFF09\u662F\u4E09\u4E2A\u70B9\u3002\u5B83\u597D\u6BD4 rest \u53C2\u6570\u7684\u9006\u8FD0\u7B97\uFF0C\u5C06\u4E00\u4E2A\u6570\u7EC4\u8F6C\u4E3A\u7528\u9017\u53F7\u5206\u9694\u7684\u53C2\u6570\u5E8F\u5217</p><p>\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08<code>...</code>\uFF09\u4E5F\u53EF\u4EE5\u5C06\u67D0\u4E9B\u6570\u636E\u7ED3\u6784\u8F6C\u4E3A\u6570\u7EC4</p><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u80CC\u540E\u8C03\u7528\u7684\u662F\u904D\u5386\u5668\u63A5\u53E3\uFF08<code>Symbol.iterator</code>\uFF09\uFF0C\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u5C31\u65E0\u6CD5\u8F6C\u6362\u3002</p><h3 id="\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528" aria-hidden="true">#</a> \u4F5C\u7528</h3><h4 id="\u590D\u5236\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236\u6570\u7EC4" aria-hidden="true">#</a> \u590D\u5236\u6570\u7EC4</h4><p>\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u80FD\u5B9E\u73B0\u6D45\u62F7\u8D1D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u5199\u6CD5\u4E00</span>
<span class="token keyword">const</span> a2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>a1<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u5199\u6CD5\u4E8C</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token operator">...</span>a2<span class="token punctuation">]</span> <span class="token operator">=</span> a1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u5408\u5E76\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u6570\u7EC4" aria-hidden="true">#</a> \u5408\u5E76\u6570\u7EC4</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// ES5 \u7684\u5408\u5E76\u6570\u7EC4</span>
arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> arr3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; ]</span>

<span class="token comment">// ES6 \u7684\u5408\u5E76\u6570\u7EC4</span>
<span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token operator">...</span>arr3<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="\u4E0E\u89E3\u6784\u8D4B\u503C\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#\u4E0E\u89E3\u6784\u8D4B\u503C\u7ED3\u5408" aria-hidden="true">#</a> \u4E0E\u89E3\u6784\u8D4B\u503C\u7ED3\u5408</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5</span>
a <span class="token operator">=</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rest <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// ES6</span>
<span class="token punctuation">[</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">]</span> <span class="token operator">=</span> list
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h4><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u8FD8\u53EF\u4EE5\u5C06\u5B57\u7B26\u4E32\u8F6C\u4E3A\u771F\u6B63\u7684\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// [ &quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u5B9E\u73B0\u4E86-iterator-\u63A5\u53E3\u7684\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E86-iterator-\u63A5\u53E3\u7684\u5BF9\u8C61" aria-hidden="true">#</a> \u5B9E\u73B0\u4E86 Iterator \u63A5\u53E3\u7684\u5BF9\u8C61</h4><h2 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h2><p>\u4F5C\u7528\uFF1A<strong>\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684\u552F\u4E00\u6807\u8BC6\u7B26</strong>\uFF0C\u9632\u6B62\u5BF9\u8C61\u5C5E\u6027\u51B2\u7A81\u53D1\u751F</p><ul><li>\u5C5E\u4E8E \u57FA\u672C\u6570\u636E\u7C7B\u578B</li><li>\u53EF\u4EE5\u4F5C\u4E3A object \u7684 key</li><li>\u5B58\u5728\u4E8E\u5168\u5C40\u4F5C\u7528\u57DF\uFF0C\u53EF\u901A\u8FC7 Symbol.for(key)</li><li>JavaScript \u5185\u90E8\u4F7F\u7528\u4E86\u5F88\u591A symbol\uFF0C\u4F5C\u4E3A\u7279\u6B8A\u7684\u952E\uFF0C\u5B9E\u73B0\u4E00\u4E9B\u5185\u90E8\u529F\u80FD\uFF1B\u4F8B\u5982 Symbol.iterator \u7528\u4E8E\u6807\u8BC6\u5BF9\u8C61\u7684\u8FED\u4EE3\u5668</li></ul><p>\u4ECE ES6 \u8D77\uFF0CJavaScript \u7684\u57FA\u7840\u6570\u636E\u7C7B\u578B\u53D8\u6210\u4E86 6 \u4E2A\uFF1Astring\u3001number\u3001boolean\u3001null\u3001undefined\u3001symbol</p><h2 id="\u6570\u7EC4\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6269\u5C55" aria-hidden="true">#</a> \u6570\u7EC4\u6269\u5C55</h2><ul><li><strong>\u6269\u5C55\u8FD0\u7B97\u7B26(...)</strong>\uFF1A\u8F6C\u6362\u6570\u7EC4\u4E3A\u7528\u9017\u53F7\u5206\u9694\u7684\u53C2\u6570\u5E8F\u5217(<code>[...arr]</code>\uFF0C\u76F8\u5F53\u4E8E<code>rest/spread\u53C2\u6570</code>\u7684\u9006\u8FD0\u7B97)</li><li>Array.from()\uFF1A\u8F6C\u6362\u5177\u6709 <code>Iterator\u63A5\u53E3 </code> \u7684\u6570\u636E\u7ED3\u6784\u4E3A\u771F\u6B63\u6570\u7EC4\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4 <ul><li>\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF1A<code>\u5305\u542Blength\u7684\u5BF9\u8C61</code>\u3001<code>Arguments\u5BF9\u8C61</code>\u3001<code>NodeList\u5BF9\u8C61</code></li><li>\u53EF\u904D\u5386\u5BF9\u8C61\uFF1A<code>String</code>\u3001<code>Set\u7ED3\u6784</code>\u3001<code>Map\u7ED3\u6784</code>\u3001<code>Generator\u51FD\u6570</code></li></ul></li><li><strong>Array.of()</strong>\uFF1A\u8F6C\u6362\u4E00\u7EC4\u503C\u4E3A\u771F\u6B63\u6570\u7EC4\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4</li><li><strong>copyWithin()</strong>\uFF1A\u628A\u6307\u5B9A\u4F4D\u7F6E\u7684\u6210\u5458\u590D\u5236\u5230\u5176\u4ED6\u4F4D\u7F6E\uFF0C\u8FD4\u56DE\u539F\u6570\u7EC4</li><li><strong>find()</strong>\uFF1A\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6210\u5458</li><li><strong>findIndex()</strong>\uFF1A\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6210\u5458\u7D22\u5F15\u503C</li><li><strong>fill()</strong>\uFF1A\u6839\u636E\u6307\u5B9A\u503C\u586B\u5145\u6574\u4E2A\u6570\u7EC4\uFF0C\u8FD4\u56DE\u539F\u6570\u7EC4</li><li><strong>keys()</strong>\uFF1A\u8FD4\u56DE\u4EE5\u7D22\u5F15\u503C\u4E3A\u904D\u5386\u5668\u7684\u5BF9\u8C61</li><li><strong>values()</strong>\uFF1A\u8FD4\u56DE\u4EE5\u5C5E\u6027\u503C\u4E3A\u904D\u5386\u5668\u7684\u5BF9\u8C61</li><li><strong>entries()</strong>\uFF1A\u8FD4\u56DE\u4EE5\u7D22\u5F15\u503C\u548C\u5C5E\u6027\u503C\u4E3A\u904D\u5386\u5668\u7684\u5BF9\u8C61</li><li><strong>\u6570\u7EC4\u7A7A\u4F4D</strong>\uFF1AES6 \u660E\u786E\u5C06\u6570\u7EC4\u7A7A\u4F4D\u8F6C\u4E3A<code>undefined</code>(\u7A7A\u4F4D\u5904\u7406\u89C4\u4E0D\u4E00\uFF0C\u5EFA\u8BAE\u907F\u514D\u51FA\u73B0)</li></ul><p>\u6570\u7EC4\u62D3\u5C55\u7684\u65B9\u6CD5</p><p>keys\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> sparseKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sparseKeys<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;0&#39;, &#39;2&#39;]</span>

<span class="token keyword">var</span> denseKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>denseKeys<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>entries</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> iterator <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> e <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>values</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> eArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> letter <span class="token keyword">of</span> eArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>includes</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fruit <span class="token operator">==</span> <span class="token string">&#39;apple&#39;</span> <span class="token operator">||</span> fruit <span class="token operator">==</span> <span class="token string">&#39;strawberry&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> redFruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;strawberry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cherry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cranberries&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>redFruits<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>find</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> inventory <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;apples&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bananas&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;cherries&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">findCherries</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fruit<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;cherries&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>findCherries<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: &#39;cherries&#39;, quantity: 5 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u5BF9\u8C61\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u6269\u5C55" aria-hidden="true">#</a> \u5BF9\u8C61\u6269\u5C55</h2><ul><li><strong>\u6269\u5C55\u8FD0\u7B97\u7B26(...)</strong>\uFF1A\u8F6C\u6362\u5BF9\u8C61\u4E3A\u7528\u9017\u53F7\u5206\u9694\u7684\u53C2\u6570\u5E8F\u5217(<code>{ ...obj }</code>\uFF0C\u76F8\u5F53\u4E8E<code>rest/spread\u53C2\u6570</code>\u7684\u9006\u8FD0\u7B97)</li></ul><blockquote><p>\u6269\u5C55\u5E94\u7528</p></blockquote><ul><li>\u514B\u9686\u5BF9\u8C61\uFF1A<code>const obj = { __proto__: Object.getPrototypeOf(obj1), ...obj1 }</code></li><li>\u5408\u5E76\u5BF9\u8C61\uFF1A<code>const obj = { ...obj1, ...obj2 }</code></li><li>\u8F6C\u6362\u5B57\u7B26\u4E32\u4E3A\u5BF9\u8C61\uFF1A<code>{ ...&quot;hello&quot; }</code></li><li>\u8F6C\u6362\u6570\u7EC4\u4E3A\u5BF9\u8C61\uFF1A<code>{ ...[1, 2] }</code></li><li>\u4E0E\u5BF9\u8C61\u89E3\u6784\u8D4B\u503C\u7ED3\u5408\uFF1A<code>const { x, ...rest/spread } = { x: 1, y: 2, z: 3 }</code>(\u4E0D\u80FD\u590D\u5236\u7EE7\u627F\u81EA\u539F\u578B\u5BF9\u8C61\u7684\u5C5E\u6027)</li><li>\u4FEE\u6539\u73B0\u6709\u5BF9\u8C61\u90E8\u5206\u5C5E\u6027\uFF1A<code>const obj = { x: 1, ...{ x: 2 } }</code></li></ul><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,83),k={href:"https://juejin.cn/post/6844903726201700365",target:"_blank",rel:"noopener noreferrer"},d=p("ES6 \u5B8C\u5168\u4F7F\u7528\u624B\u518C"),b={href:"https://juejin.cn/post/6844903959283367950#heading-21",target:"_blank",rel:"noopener noreferrer"},m=p("1.5 \u4E07\u5B57\u6982\u62EC ES6 \u5168\u90E8\u7279\u6027(\u5DF2\u66F4\u65B0 ES2020)"),g={href:"https://mp.weixin.qq.com/s?__biz=MzA4ODUzNTE2Nw==&mid=2451046817&idx=1&sn=ee4af07eed742d0df9dbad676c6f9e84&chksm=87c418b1b0b391a79f27f3db6abc46c05fe8d993d98bb12e68823b96e92f34bfc84f21667e03&mpshare=1&scene=1&srcid=&sharer_sharetime=1585194801642&sharer_shareid=778ad5bf3b27e0078eb105d7277263f6#rd",target:"_blank",rel:"noopener noreferrer"},h=p("ES6 \u4F60\u53EF\u80FD\u4E0D\u77E5\u9053\u7684\u4E8B - \u8FDB\u9636\u7BC7"),f={href:"https://segmentfault.com/a/1190000038998504",target:"_blank",rel:"noopener noreferrer"},v=p("JS \u4E2D\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u7684 10 \u79CD\u65B9\u6CD5\uFF0C\u597D\u5BB6\u4F19\uFF0C\u70B9\u4E2A\u8D5E\u5457\uFF01"),y={href:"https://www.zhangxinxu.com/wordpress/2018/04/known-es6-symbol-function/",target:"_blank",rel:"noopener noreferrer"},w=p("\u7B80\u5355\u4E86\u89E3 ES6/ES2015 Symbol() \u65B9\u6CD5"),_={href:"http://caibaojian.com/es6/symbol.html",target:"_blank",rel:"noopener noreferrer"},j=p("ES6 symbol"),x={href:"https://segmentfault.com/a/1190000038998504",target:"_blank",rel:"noopener noreferrer"},S=p("JS \u4E2D\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u7684 10 \u79CD\u65B9\u6CD5\uFF0C\u597D\u5BB6\u4F19\uFF0C\u70B9\u4E2A\u8D5E\u5457\uFF01"),q={href:"http://www.alloyteam.com/2016/03/es6-front-end-developers-will-have-to-know-the-top-ten-properties/",target:"_blank",rel:"noopener noreferrer"},E=p("\u524D\u7AEF\u5F00\u53D1\u8005\u4E0D\u5F97\u4E0D\u77E5\u7684 ES6 \u5341\u5927\u7279\u6027"),N={href:"https://gitbook.cn/gitchat/column/5c91c813968b1d64b1e08fde/topic/5c99a9a3ccb24267c1d01960",target:"_blank",rel:"noopener noreferrer"},O=p("\u8001\u53F8\u673A\u4E5F\u4F1A\u5728\u95ED\u5305\u76F8\u5173\u77E5\u8BC6\u70B9\u7FFB\u8F66\uFF08\u4E0A\uFF09");function M(z,A){const s=e("ExternalLinkIcon");return o(),c(l,null,[i,n("ul",null,[n("li",null,[n("a",k,[d,a(s)])]),n("li",null,[n("a",b,[m,a(s)])]),n("li",null,[n("a",g,[h,a(s)])]),n("li",null,[n("a",f,[v,a(s)])]),n("li",null,[n("a",y,[w,a(s)])]),n("li",null,[n("a",_,[j,a(s)])]),n("li",null,[n("a",x,[S,a(s)])]),n("li",null,[n("a",q,[E,a(s)])]),n("li",null,[n("a",N,[O,a(s)])])])],64)}var I=t(u,[["render",M],["__file","ES6\u5B8C\u5168\u6307\u5357.html.vue"]]);export{I as default};
