import{_ as t,r as e,o,c,a as n,d as p,F as l,e as u,b as s}from"./app.873f0dc8.js";const i={},r=u(`<h1 id="promise-\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#promise-\u9762\u8BD5\u9898" aria-hidden="true">#</a> Promise \u9762\u8BD5\u9898</h1><h3 id="\u9898\u76EE\u4E00" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E00" aria-hidden="true">#</a> \u9898\u76EE\u4E00</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u9898\u76EE\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u4E8C" aria-hidden="true">#</a> \u9898\u76EE\u4E8C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then21&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then23&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;then12&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><details><summary>\u7B54\u6848</summary> promise1\u3001then11\u3001promise2\u3001then21\u3001then12 </details><h3 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790\uFF1A</h3><p>promise \u80FD\u591F\u94FE\u5F0F\u8C03\u7528\u7684\u539F\u7406\uFF0C\u5373</p><p>promise \u7684 then/catch \u65B9\u6CD5\u6267\u884C\u540E\u4E5F\u4F1A\u8FD4\u56DE\u4E00\u4E2A promise</p><blockquote><p>\u5F53\u4E00\u4E2A promise \u88AB resolve \u65F6\uFF0C\u4F1A\u904D\u5386\u4E4B\u524D\u901A\u8FC7 then \u7ED9\u8FD9\u4E2A promise \u6CE8\u518C\u7684\u6240\u6709\u56DE\u8C03\uFF0C\u5C06\u5B83\u4EEC\u4E00\u6B21\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D</p></blockquote><p>\u5982\u4F55\u7406\u89E3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8\u7B2C\u4E00\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8\u7B2C\u4E8C\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8\u7B2C\u4E09\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6309\u987A\u5E8F\u6267\u884C\uFF0C\u5148\u770B\u5230 new Prmose \u4E2D\u7684 setTimeout\uFF0C\u628A\u5B83\u653E\u5165\u5B8F\u4EFB\u52A1\u4E2D\uFF0C\u5F80\u4E0B\u6267\u884C\uFF0C\u770B\u5230 then\uFF0C\u8111\u5B50\u91CC\u60F3\u5230\u7684\u662F\u662F\u5426\u88AB resolve/reject \u4E86\uFF0C\u56E0\u4E3A\u53EA\u6709\u88AB\u6267\u884C\u6210\u529F/\u5931\u8D25\u4E86\uFF0C\u624D\u4F1A\u6267\u884C then \u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u9898\u76EE\u4E2D 1 \u79D2\u540E\u53D8\u91CF p \u624D\u4F1A\u88AB resolve\uFF0C\u4F46\u662F\u5728 resolve \u524D\u901A\u8FC7 then \u65B9\u6CD5\u7ED9\u5B83\u6CE8\u518C\u4E86 3 \u4E2A\u56DE\u8C03\uFF0C\u6B64\u65F6\u8FD9 3 \u4E2A\u56DE\u8C03\u4E0D\u4F1A\u88AB\u6267\u884C\uFF0C\u4E5F\u4E0D\u4F1A\u88AB\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF0C\u5B83\u4EEC\u4F1A\u88AB p \u5185\u90E8\u5B58\u50A8\u8D77\u6765\uFF08\u518D\u624B\u5199 promise \u65F6\uFF0C\u8FD9\u4E9B\u56DE\u8C03\u4F1A\u653E\u5728 promise \u5185\u90E8\u4FDD\u5B58\u7684\u6570\u7EC4\u4E2D\uFF09\uFF0C\u7B49\u5230 p \u88AB resolve \u540E\uFF0C\u4F9D\u6B21\u5C06 3 \u4E2A\u56DE\u8C03\u63A8\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C \u6B64\u65F6\u5982\u679C\u6CA1\u6709\u540C\u6B65\u4EFB\u52A1\u5C31\u4F1A\u9010\u4E2A\u53D6\u51FA\u518D\u6267\u884C</p><p><strong>then \u65B9\u6CD5\u5373\u4E0D\u4F1A\u89E6\u53D1\u56DE\u8C03\uFF0C\u4E5F\u4E0D\u4F1A\u5C06\u5B83\u653E\u5230\u5FAE\u4EFB\u52A1\uFF0Cthen \u53EA\u8D1F\u8D23\u6CE8\u518C\u56DE\u8C03\uFF0C\u7531 resolve \u5C06\u6CE8\u518C\u7684\u56DE\u5230\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u7531\u4E8B\u4EF6\u5FAA\u73AF\u5C06\u5176\u53D6\u51FA\u5E76\u6267\u884C</strong></p><h3 id="\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u9762\u8BD5\u9898</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8\u7B2C\u4E00\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5185\u90E8promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5185\u90E8\u7B2C\u4E00\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5185\u90E8\u7B2C\u4E8C\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;log: \u5916\u90E8\u7B2C\u4E8C\u4E2Athen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="\u7ED3\u8BBA\u4E00" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u8BBA\u4E00" aria-hidden="true">#</a> \u7ED3\u8BBA\u4E00</h4><p>\u5F53\u6267\u884C then \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C\u524D\u9762\u7684 promise \u5DF2\u7ECF\u662F resolved \u72B6\u6001\uFF0C\u5219\u76F4\u63A5\u5C06\u56DE\u8C03\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D</p><h3 id="\u9762\u8BD5-3" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5-3" aria-hidden="true">#</a> \u9762\u8BD5 3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">myPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">duration</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/**/</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5199\u51FA delay \u51FD\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">duration</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u9898\u76EE-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-4" aria-hidden="true">#</a> \u9898\u76EE 4</h3><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u60F3\u505A\u5230\u7684\u662F\uFF0C\u6BCF\u8FC7\u4E00\u79D2\uFF0C\u5206\u522B\u6253\u5370:
this is 0
this is 1
this is 2
~
this is 8

\u4E0B\u9762\u7684\u4EE3\u7801\u7ED3\u679C\u662F\u8FC7\u4E00\u79D2\u540E\u5168\u90E8\u6267\u884C\u3002

\u662F\u4E0D\u662F\u54EA\u91CC\u5199\u7684\u4E0D\u5BF9\u5462\uFF0C\u591A\u8C22\u6307\u6559

var jobs = [];

for(let i = 0; i &lt; 8; i++) {
jobs.push(async function(){
setTimeout(function(){
console.log(&quot;this is &quot; + i)
},1000)
});
}

(async function () {
for (const job of jobs) {
await job()
}

})();
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>promise \u9898\u76EE\u6211\u4E0D\u4F1A\u505A</p>`,25),k={href:"https://www.v2ex.com/t/810025#reply13",target:"_blank",rel:"noopener noreferrer"},b=s("https://www.v2ex.com/t/810025#reply13"),m=n("h2",{id:"\u53C2\u8003\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003\u8D44\u6599","aria-hidden":"true"},"#"),s(" \u53C2\u8003\u8D44\u6599")],-1),d={href:"https://juejin.cn/post/6844903972008886279",target:"_blank",rel:"noopener noreferrer"},h=s("Promise \u94FE\u5F0F\u8C03\u7528\u987A\u5E8F\u5F15\u53D1\u7684\u601D\u8003"),g={href:"https://juejin.cn/post/6978001532717367304",target:"_blank",rel:"noopener noreferrer"},f=s("\u5173\u4E8E\u4E00\u9053\u7ECF\u5178 Promise \u9762\u8BD5\u9898\u7684\u601D\u8003");function v(_,y){const a=e("ExternalLinkIcon");return o(),c(l,null,[r,n("p",null,[n("a",k,[b,p(a)])]),m,n("ul",null,[n("li",null,[n("p",null,[n("a",d,[h,p(a)])])]),n("li",null,[n("p",null,[n("a",g,[f,p(a)])])])])],64)}var w=t(i,[["render",v],["__file","Promise\u9762\u8BD5\u9898.html.vue"]]);export{w as default};
