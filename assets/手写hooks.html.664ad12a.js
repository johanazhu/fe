import{_ as t,r as e,o,c,a as n,d as a,F as l,e as u,b as p}from"./app.873f0dc8.js";const r={},i=u(`<h1 id="\u624B\u5199-hooks" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-hooks" aria-hidden="true">#</a> \u624B\u5199 hooks</h1><h3 id="\u624B\u5199-usestate" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-usestate" aria-hidden="true">#</a> \u624B\u5199 useState</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> _state<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _state <span class="token operator">=</span> _state <span class="token operator">||</span> initialValue<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _state <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>_state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h3><p>\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>useEffect \u6709\u51E0\u4E2A\u7279\u70B9\uFF1A</p><ol><li>\u6709\u4E24\u4E2A\u53C2\u6570 callback \u548C dependencies \u6570\u7EC4</li><li>\u5982\u679C dependencies \u4E0D\u5B58\u5728\uFF0C\u90A3\u4E48 callback \u6BCF\u6B21 render \u90FD\u4F1A\u6267\u884C</li><li>\u5982\u679C dependencies \u5B58\u5728\uFF0C\u53EA\u6709\u5F53\u5B83\u53D1\u751F\u4E86\u53D8\u5316\uFF0Ccallback \u624D\u4F1A\u6267\u884C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> _deps<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> depArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hasNoDeps <span class="token operator">=</span> <span class="token operator">!</span>depArray<span class="token punctuation">;</span>
    <span class="token keyword">const</span> hasChangedDeps <span class="token operator">=</span> _deps
        <span class="token operator">?</span> <span class="token operator">!</span>depArray<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el <span class="token operator">===</span> _deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasNoDeps <span class="token operator">||</span> hasChangedDeps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _deps <span class="token operator">=</span> depArray<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Q\uFF1A\u4E3A\u4EC0\u4E48\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u7A7A\u6570\u7EC4\uFF0C\u76F8\u5F53\u4E8E componentDidMount</p><p>A\uFF1A\u56E0\u4E3A\u4F9D\u8D56\u4E00\u76F4\u4E0D\u53D8\u5316\uFF0Ccallback \u4E0D\u4F1A\u4E8C\u6B21\u6267\u884C</p><p>\u73B0\u5728\u624B\u5199\u7684 useState \u548C useEffect \u53EA\u80FD\u7528\u4E00\u6B21\uFF0C\u56E0\u4E3A\u53EA\u6709\u4E00\u4E2A _state \u548C \u4E00\u4E2A _deps</p><p>\u6709\u4EC0\u4E48\u65B9\u6CD5\u89E3\u51B3\u5462\uFF1F\u505A\u6210\u6570\u7EC4</p><p>\u4EE3\u7801\u5173\u952E\u5728\u4E8E\uFF1A</p><ol><li>\u521D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u6309\u7167 useState\uFF0CuseEffect \u7684\u987A\u5E8F\uFF0C\u628A state\uFF0Cdeps \u7B49\u6309\u987A\u5E8F\u585E\u5230 memoizedState \u6570\u7EC4\u4E2D</li><li>\u66F4\u65B0\u7684\u65F6\u5019\uFF0C\u6309\u7167\u987A\u5E8F\uFF0C\u4ECE memoizedState \u4E2D\u628A\u4E0A\u6B21\u8BB0\u5F55\u7684\u503C\u62FF\u51FA\u4FE9</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u653E hooks \u7684\u6570\u7EC4</span>
<span class="token keyword">let</span> cursor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D memoizedState \u4E0B\u6807</span>

<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    memoizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">=</span> memoizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">||</span> initialState<span class="token punctuation">;</span>
    <span class="token keyword">const</span> currentCursor <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        memoizedState<span class="token punctuation">[</span>currentCursor<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>memoizedState<span class="token punctuation">[</span>currentCursor<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> setState<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> depArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hasNoDeps <span class="token operator">=</span> <span class="token operator">!</span>depArray<span class="token punctuation">;</span>
    <span class="token keyword">const</span> deps <span class="token operator">=</span> memoizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> hasChangedDeps <span class="token operator">=</span> deps
        <span class="token operator">?</span> <span class="token operator">!</span>depArray<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el <span class="token operator">===</span> deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasNoDeps <span class="token operator">||</span> hasChangedDeps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        memoizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">=</span> depArray<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cursor<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u73B0\u5728\u53EF\u4EE5\u56DE\u7B54\u51E0\u4E2A\u95EE\u9898</p><p>Q\uFF1A\u4E3A\u4EC0\u4E48\u53EA\u80FD\u5728\u51FD\u6570\u6700\u5916\u5C42\u8C03\u7528 Hook\uFF1F\u4E3A\u4EC0\u4E48\u4E0D\u8981\u5728\u5FAA\u73AF\u3001\u6761\u4EF6\u5224\u65AD\u6216\u5B50\u51FD\u6570\u4E2D\u8C03\u7528\uFF1F</p><p>A\uFF1AmemoizedState \u6570\u7EC4\u662F\u6309 hook \u5B9A\u4E49\u7684\u987A\u5E8F\u6765\u653E\u7F6E\u6570\u636E\u7684\uFF0C\u5982\u679C hook \u987A\u5E8F\u53D8\u5316\uFF0CmemoizedState \u5E76\u4E0D\u4F1A\u611F\u77E5\u5230</p><p>Q\uFF1A&quot;Capture Value&quot; \u7279\u6027\u662F\u5982\u4F55\u4EA7\u751F\u7684\uFF1F</p><p>A\uFF1A\u6BCF\u6B21 ReRender \u7684\u65F6\u5019\uFF0C\u90FD\u662F\u91CD\u65B0\u53BB\u6267\u884C\u51FD\u6570\u7EC4\u4EF6\u4E86\uFF0C\u5BF9\u4E8E\u4E4B\u524D\u5DF2\u7ECF\u6267\u884C\u8FC7\u7684\u51FD\u6570\u7EC4\u4EF6\uFF0C\u5E76\u4E0D\u4F1A\u505A\u4EFB\u4F55\u64CD\u4F5C</p><p>\u6570\u7EC4\u4E5F\u8BB8\u6BD4\u8FDE\u8FB9\u66F4\u597D\u89E3\u91CA\u5176\u539F\u7406\u7684\u6A21\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> hooks<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i<span class="token operator">++</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>hoos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u518D\u6B21\u6E32\u67D3\u65F6</span>
        <span class="token keyword">return</span> hooks<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21\u6E32\u67D3</span>
    hooks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u51C6\u5907\u6E32\u67D3</span>
i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
hooks <span class="token operator">=</span> fiber<span class="token punctuation">.</span>hooks <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u8C03\u7528\u7EC4\u4EF6</span>
<span class="token function">YourComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u7F13\u5B58 Hooks \u7684\u72B6\u6001</span>
fiber<span class="token punctuation">.</span>hooks <span class="token operator">=</span> hooks<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u7B80\u6613\u7684 Hooks</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> memorizedState <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u653Ehooks</span>
<span class="token keyword">let</span> cursor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> lastRef<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">intialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    memorizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">=</span> memeorizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">||</span> initialState<span class="token punctuation">;</span>
    <span class="token keyword">const</span> currentCursor <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        memorizedState<span class="token punctuation">[</span>currentCursor<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">[</span>memorizedState<span class="token punctuation">[</span>cursor<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> setState<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> depArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> noDepArr <span class="token operator">=</span> <span class="token operator">!</span>depArr<span class="token punctuation">;</span>
    <span class="token keyword">const</span> deps <span class="token operator">=</span> memorizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> hasDepsChanged <span class="token operator">=</span> deps
        <span class="token operator">?</span> <span class="token operator">!</span>depArr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el <span class="token operator">===</span> deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>noDepArr <span class="token operator">||</span> hasDepsChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        memorizedState<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span> <span class="token operator">=</span> depArr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cursor<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lastRef <span class="token operator">=</span> lastRef <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">current</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> lastRef<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u6240\u4EE5\u4EA7\u751F Capture Value \u7684\u539F\u56E0\uFF0C\u6B63\u662F\u6BCF\u4E00\u6B21 rerender \u7684\u65F6\u5019\uFF0C\u90FD\u4F1A\u53BB\u91CD\u65B0\u6267\u884C\u51FD\u6570\u7EC4\u4EF6\uFF0C</p><p>\u800C\u4F7F\u7528 useRef\uFF0C\u5C31\u76F8\u5F53\u4E8E\u628A\u6570\u636E\u5B58\u5728\u5728\u5185\u5B58\u4E2D</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,28),k={href:"https://github.com/shanggqm/blog/issues/4",target:"_blank",rel:"noopener noreferrer"},b=p("\u65E0\u610F\u8BC6\u8BBE\u8BA1-\u590D\u76D8 React Hook \u7684\u521B\u9020\u8FC7\u7A0B"),m={href:"https://github.com/brickspert/blog/issues/26",target:"_blank",rel:"noopener noreferrer"},d=p("React Hooks \u539F\u7406"),h={href:"https://medium.com/@ryardley/react-hooks-not-magic-just-arrays-cd4f1857236e",target:"_blank",rel:"noopener noreferrer"},f=p("React hooks: not magic, just arrays"),y={href:"https://mp.weixin.qq.com/s/eyFKOi3PTux6aTF0s557Rg",target:"_blank",rel:"noopener noreferrer"},g=p("React Hooks \u8E29\u5751\u4E4B-- Capture Value \u7279\u6027");function _(w,v){const s=e("ExternalLinkIcon");return o(),c(l,null,[i,n("ul",null,[n("li",null,[n("a",k,[b,a(s)])]),n("li",null,[n("a",m,[d,a(s)])]),n("li",null,[n("a",h,[f,a(s)])]),n("li",null,[n("a",y,[g,a(s)])])])],64)}var x=t(r,[["render",_],["__file","\u624B\u5199hooks.html.vue"]]);export{x as default};
