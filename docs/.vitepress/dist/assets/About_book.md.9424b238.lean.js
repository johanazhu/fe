import{_ as t,c as a,o as n,a as e,b as o}from"./app.590c1fbf.js";const g=JSON.parse('{"title":"关于本网站","description":"","frontmatter":{},"headers":[],"relativePath":"About/book.md"}'),s={name:"About/book.md"},r=e("h1",{id:"关于本网站",tabindex:"-1"},[o("关于本网站 "),e("a",{class:"header-anchor",href:"#关于本网站","aria-hidden":"true"},"#")],-1),c=e("p",null,"很多技术书会随着技术的变革而过时，往往买来 3,4 年后，因为技术的迭代，书的内容就过时了，从而，导致，书没怎么读进去，然而把家弄得很挤",-1),d=e("p",null,"信息时代，知识是需要更新的，以前我们学习 javascript，也许只需要关心闭包，原型链等难点，但现在各种框架的诞生，以及 es6 的普及，各种 UI 框架，跨平台应用的出现，一个前端所要掌握的技能远远不止这些",-1),l=e("p",null,"知识在变化，在流动，构建自己知识体系的时候，要记住知识不是一蹴而就的，总有原因，因为这个或那个缺点，导致你用新的东西，新的东西是为了解决效率问题，不然，它必然被淘汰 比如在 es module 还不主流时，amd 和 cmd 是社区大神开发出，但 es module 慢慢被圈子接受时，这两种模块的使命就完成了。 我记得有一次面试，面试官问 你知道 amd 模块原理是什么吗？当时我工作刚满 2 年，知道 amd 模块，也知道 amd 和 cmd 的区别，但是没深入研究过，结果是面试没通过",-1),_=e("p",null,"反思一下，这真的是我的错吗？我从 jquery 时代到使用 vue，react 现代框架，中间本来就没有使用过 amd，但是写 vue 直接用 vue-cli 脚手架工具，以及以后 也许是面试官想通过 面试者对模块化的了解 来判定这个人是否研究过本质问题，是否有深入研究的能力。但很显然，并不应该问模块化问题，而是问他现在项目中的问题， 问他项目中遇到的问题，他是怎么一步一步解决的。或者有什么有趣的自己开发的轮子之类，我想一个有“思想”的程序员他总有一些自己的思考 1",-1),i=e("p",null,[o("本网站的核心是对前端知识的整合，其中包括多本前端必看的书籍+多年的社区知识+自己的经验，如有疑问，请联系 "),e("a",{href:"mailto:hanbojohnny@gmail.com",target:"_blank",rel:"noreferrer"},"hanbojohnny@gmail.com")],-1),m=[r,c,d,l,_,i];function h(u,p,b,f,k,v){return n(),a("div",null,m)}const j=t(s,[["render",h]]);export{g as __pageData,j as default};
