import{_ as s,c as a,o as n,d as e}from"./app.590c1fbf.js";const C=JSON.parse('{"title":"深入浅出 setState 原理篇","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"基本概念和使用","slug":"基本概念和使用","link":"#基本概念和使用","children":[{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":3,"title":"与 setState 回调相比，使用 componentDidUpdate 有什么优势？","slug":"与-setstate-回调相比-使用-componentdidupdate-有什么优势","link":"#与-setstate-回调相比-使用-componentdidupdate-有什么优势","children":[]}]},{"level":2,"title":"setState 的特性——批处理","slug":"setstate-的特性——批处理","link":"#setstate-的特性——批处理","children":[]},{"level":2,"title":"批处理引发的问题","slug":"批处理引发的问题","link":"#批处理引发的问题","children":[{"level":3,"title":"问题 1：连续使用 setState，为什么不能实时改变","slug":"问题-1-连续使用-setstate-为什么不能实时改变","link":"#问题-1-连续使用-setstate-为什么不能实时改变","children":[]},{"level":3,"title":"问题 2：为什么要 setState，而不是直接 this.state.xx = oo?","slug":"问题-2-为什么要-setstate-而不是直接-this-state-xx-oo","link":"#问题-2-为什么要-setstate-而不是直接-this-state-xx-oo","children":[]},{"level":3,"title":"问题 3：那为什么会出现异步的情况呢？（为什么这么设计？）","slug":"问题-3-那为什么会出现异步的情况呢-为什么这么设计","link":"#问题-3-那为什么会出现异步的情况呢-为什么这么设计","children":[]},{"level":3,"title":"问题 4：那如何在表现出异步的函数里可以准确拿到更新后的 state 呢？","slug":"问题-4-那如何在表现出异步的函数里可以准确拿到更新后的-state-呢","link":"#问题-4-那如何在表现出异步的函数里可以准确拿到更新后的-state-呢","children":[]}]},{"level":2,"title":"执行原理","slug":"执行原理","link":"#执行原理","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"React/setState.md"}'),l={name:"React/setState.md"},t=e("",60),p=[t];function o(r,c,i,D,y,F){return n(),a("div",null,p)}const A=s(l,[["render",o]]);export{C as __pageData,A as default};
