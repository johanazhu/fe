import{_ as t,c as e,o as i,d as p}from"./app.590c1fbf.js";const f=JSON.parse('{"title":"模拟题一","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/备用.md"}'),l={name:"Interview/备用.md"},r=p('<h1 id="模拟题一" tabindex="-1">模拟题一 <a class="header-anchor" href="#模拟题一" aria-hidden="true">#</a></h1><ol><li>redux</li></ol><p>状态管理，redux <a href="https://tech.meituan.com/2017/07/14/redux-design-code.html" target="_blank" rel="noreferrer">https://tech.meituan.com/2017/07/14/redux-design-code.html</a></p><ol start="2"><li>手写防抖节流</li></ol><p>JavaScript 手写系列，防抖节流</p><ol start="3"><li>http1、2、3 的区别</li></ol><p>http 方面相关，关键字 http、https、http 缓存、http 发展历程、http 状态码</p><ol start="4"><li><p>性能优化</p></li><li><p>实现 add(1)(2)(3)</p></li><li><p>函数式组件与类组件的区别</p></li><li><p>事件循环</p></li><li><p>浏览器输入 url 到页面渲染都经历了什么</p></li><li><p>错误捕获</p></li><li><p>flex：1 表示什么</p></li><li><p>迭代器</p></li><li><p>闭包 闭包的特性，内层函数使用外层函数的变量</p></li><li><p>工程化 webpack 相关</p></li><li><p>Promise 相关 then、</p></li></ol><p>云谦 算法、闭包、迭代器、Promise、ES 特性、React、数据流、工程化</p><p>性能优化方面，比如长列表怎么优化，加载怎么优化，怎么提高项目的可维护性，怎么提高项目的首屏加载速度。</p><p>自我介绍（show time，3 分钟展示自己的时间，把最闪亮的你展现出来） 你知道/用过/遇到过 xx 问题么？（不仅会技术的使用，还了解技术的实现原理） 你还有什么问题么？（你对团队的了解、好奇，对未来的个人成长有什么期待？）</p><p>// 防抖 function fandou(fn, wait) { let pre; return function(args) { if (new Date() - pre &lt; wait) { setTimeout(() =&gt; { fn.apply(this, ...args) }, wait) } }} // 节流 function throttle(func, wait) { let pre, timer; return function (...args) { if (new Date() - pre &lt; wait) { timer = null; pre = 0; fn.apply(this, ...args) } else { timer = setTimeout(() =&gt; { fn.apply(this, ...args) }, wait) } } }</p>',12),a=[r];function n(o,s,c,h,_,d){return i(),e("div",null,a)}const m=t(l,[["render",n]]);export{f as __pageData,m as default};
