import{_ as e,c as l,o as i,d as a}from"./app.590c1fbf.js";const _=JSON.parse('{"title":"字符串","description":"","frontmatter":{},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"属性和方法","slug":"属性和方法","link":"#属性和方法","children":[{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"实例属性和方法","slug":"实例属性和方法","link":"#实例属性和方法","children":[{"level":3,"title":"实例属性","slug":"实例属性","link":"#实例属性","children":[]},{"level":3,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"JavaScript/String.md"}'),r={name:"JavaScript/String.md"},t=a('<h1 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-hidden="true">#</a></h1><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-hidden="true">#</a></h2><p>String()构造函数用于创建字符串对象和字符串原始值</p><h2 id="属性和方法" tabindex="-1">属性和方法 <a class="header-anchor" href="#属性和方法" aria-hidden="true">#</a></h2><p>字符串对象具有以下属性和方法（不包括继承的属性和方法）</p><h3 id="属性" tabindex="-1"><strong>属性</strong> <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h3><ul><li>prototype</li></ul><h3 id="方法" tabindex="-1"><strong>方法</strong> <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h3><ul><li>froCharCode()</li></ul><h2 id="实例属性和方法" tabindex="-1">实例属性和方法 <a class="header-anchor" href="#实例属性和方法" aria-hidden="true">#</a></h2><h3 id="实例属性" tabindex="-1"><strong>实例属性</strong> <a class="header-anchor" href="#实例属性" aria-hidden="true">#</a></h3><ul><li>constructor</li><li>length</li></ul><h3 id="实例方法" tabindex="-1"><strong>实例方法</strong> <a class="header-anchor" href="#实例方法" aria-hidden="true">#</a></h3><ul><li><p>slice()：提取某个字符串的一部分，并返回一个新的字符串，且不会改动原字符串</p></li><li><p>substr()：返回一个字符串中从指定位置开始到指定字符串的字符</p><blockquote><p>PS: 未来可能会被移除掉，如果可以的话，使用 <code>substring()</code> 代替它</p></blockquote></li><li><p>substring()：返回一个字符串在开始索引到结束索引之间的一个子集，或从开始索引知道字符串的末尾的一个子集</p></li><li><p>concat()：将一个或多个字符串与原字符串连接合并，形成一个新的字符串并返回</p></li><li><p>indexOf()：返回调用它的 <code>String</code> 对象中第一次出现的指定值的索引，从 <code>fromIndex</code> 处进行搜索。如果未找到该值，则返回 -1</p></li><li><p>replace()：返回一个由替换值（replacement）替换一些或所有匹配的模式（pattern）后的新字符串。模式可以使一个字符串或者一个正则表达式，替换值可以使一个字符串或者一个每次匹配都要调用的回调函数。</p><ul><li>原字符串不会改变</li></ul></li><li><p>toString()：返回指定对象的字符串形式</p></li><li><p>valueOf()：返回 String 对象的原始值</p></li><li><p>charAt()：从一个字符串中返回指定的字符</p></li><li><p>charCodeAt()：返回 0 到 65535 之间的整数，表示给定索引处的 UTF-16 代码单元</p></li><li><p>lastIndexOf()：返回指定元素（也即有效的 JavaScript 值或变量）在数组中的最后一个的索引，如果不存在则返回 -1。从数组的后面向前查找，从 fromIndex 处开始</p></li><li><p>localeCompare()：返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同</p></li><li><p>match()：检索返回一个字符串匹配正则表达式的结果</p></li><li><p>toLowerCase()：将调用该方法的字符串值转为小写形式，并返回</p></li><li><p>toUpperCase()：将调用该方法的字符串转为大写形式，并返回</p></li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noreferrer">MDN</a></li></ul>',16),n=[t];function d(h,o,c,s,p,u){return i(),l("div",null,n)}const f=e(r,[["render",d]]);export{_ as __pageData,f as default};
