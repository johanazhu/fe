import{_ as t,c as o,o as e,d as l}from"./app.590c1fbf.js";const m=JSON.parse('{"title":"模拟题六","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/book6.md"}'),a={name:"Interview/book6.md"},r=l('<h1 id="模拟题六" tabindex="-1">模拟题六 <a class="header-anchor" href="#模拟题六" aria-hidden="true">#</a></h1><ol><li>什么是立即执行函数</li></ol><p>考察点：立即执行函数</p><p>IIFE，立即执行函数，声明一个匿名函数，并马上调用这个匿名函数。只有一个作用，创建一个独立的作用域</p><ol start="2"><li>谈下事件循环机制</li></ol><p>考察点：事件循环机制</p><p>正常执行代码，遇到宏任务塞入宏任务队列， 遇到微任务，塞入微任务队列。正常代码执行完毕，先执行全部的微任务，再去从宏任务队列中拿出一个执行它，如遇到微任务再塞入微任务队列，遇到宏任务再塞入宏任务队列，执行完毕再从宏任务队列中获取，以此往复</p><ol start="3"><li>CSS 优先级是怎么计算的</li></ol><p>考察点：CSS 优先级</p><p>!important &gt; 内联样式 &gt; ID 选择器 &gt; 类选择器 = 属性选择器 = 伪类选择器 &gt; 标签选择器 = 伪元素选择器</p><ol start="4"><li>CSS 相关性能优化</li></ol><p>考察点：CSS 性能优化</p><ol start="5"><li>谈下 webpack loader 机制</li></ol><p>考察点：webpack loader 机制</p><ol start="6"><li>进程通信方式有哪些</li></ol><p>考察点：进程通信</p><ol start="7"><li>爬楼梯问题</li></ol><p>考察点：爬楼梯问题</p><ol start="8"><li>实现一个 trim 方法</li></ol><p>考察点：实现一个 trim 方法</p>',20),i=[r];function p(s,_,n,c,d,S){return e(),o("div",null,i)}const f=t(a,[["render",p]]);export{m as __pageData,f as default};
