import{_ as e,c as a,o as p,d as i}from"./app.590c1fbf.js";const d=JSON.parse('{"title":"前端工程化简介","description":"","frontmatter":{},"headers":[{"level":3,"title":"热更新技术如何开着飞机修引擎？","slug":"热更新技术如何开着飞机修引擎","link":"#热更新技术如何开着飞机修引擎","children":[]},{"level":3,"title":"如何正确使用 sourceMap?","slug":"如何正确使用-sourcemap","link":"#如何正确使用-sourcemap","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"Engineered/前端工程化简介.md"}'),r={name:"Engineered/前端工程化简介.md"},l=i('<h1 id="前端工程化简介" tabindex="-1">前端工程化简介 <a class="header-anchor" href="#前端工程化简介" aria-hidden="true">#</a></h1><p>前端工程化包含从编码、发布到运维的整个前端研发生命周期</p><p>前端工程化的目标是提高研发效率、研发质量和访问性能</p><p>如：webpack、rollup、gulp、jest</p><p>主要解决的问题</p><p>传统语言或语法的弊端、无法使用模块化/组件化、重复的机械式工作、</p><p>代码风格统一质量保证、依赖后端服务接口支持、整体依赖后端项目</p><p>开发效率</p><ul><li><p>前端脚手架工具</p><ol><li>package.json，依赖管理体系下的基础配置文件</li><li>npm、yarn、pnpm 作为包管理器</li><li>确定技术栈，在 src 目录中建立入口源码文件</li><li>选择构建工具，主流选择 webpack</li><li>大同构建流程，安装各种 loader、plugins</li><li>优化构建流程</li><li>选择和调试辅助工具，例如代码检查、单元测试工具</li><li>编写 README、.ignore</li></ol></li><li><p>如何正确使用 sourceMap？</p></li></ul><p>构建效率</p><ul><li>webpack 的完整构建流程</li><li>如何为 webpack 编译阶段提速？</li><li>如何为 webpack 打包阶段提速</li><li>缓存的优化方案</li><li>webpack 的增量构建</li></ul><p>部署效率</p><p>构建前端脚手架</p><p>使用 yeoman 创建生成器</p><p>一个基本的复制已有项目模板的生成器包含了：</p><ol><li>生成器描述文件 package.json，其中限定了 name、file、keywords 等对应字段的规范</li><li>作为主题的 generators/app 目录，包含生成器的核心文件。该目录是执行 yo 命令时的默认查找目录</li><li>app/index.js 是生成器的核心控制模块，其内容是导出一个继承自 yeoman-generator 的类，并由后者提供运行时上下文、用户交互、生成器组合等功能</li><li>app/templates/ 目录是复制到新项目中的脚手架模板目录</li></ol><h3 id="热更新技术如何开着飞机修引擎" tabindex="-1">热更新技术如何开着飞机修引擎？ <a class="header-anchor" href="#热更新技术如何开着飞机修引擎" aria-hidden="true">#</a></h3><p><img src="https://s2.loli.net/2022/07/06/Gk5E9HvJpmUefgw.png" alt="热更新技术如何开着飞机修引擎"></p><h3 id="如何正确使用-sourcemap" tabindex="-1">如何正确使用 sourceMap? <a class="header-anchor" href="#如何正确使用-sourcemap" aria-hidden="true">#</a></h3><p>什么是 Source Map?</p><p>编写的源代码会经过多重处理（编译、封装、压缩等），最后形成产物代码</p><p>source-map 的基本原理</p><p>在编译处理的过程中，在生成产物代码的同时生成产物代码中被转换的部分与源代码中相应的映射关系表</p><p>通过 Chrome 控制台的“Enable JavaScript source map”来实现调试时的显示与定位源代码功能</p><p>webpack 的 source map 预设</p><p>。。。。</p><p>sourceMap 解决的问题</p><p>实际编写的代码与编译后的代码的转换</p><p>超全面的前端工程化配置指南 <a href="https://mp.weixin.qq.com/s/bOkgYaEJm6DlHBM_G_9Sng" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/bOkgYaEJm6DlHBM_G_9Sng</a></p><p>知乎：什么是前端工程化</p><p><a href="https://www.zhihu.com/question/433854153/answer/1618951221?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=56197411504128&amp;utm_content=group3_Answer&amp;utm_campaign=shareopn" target="_blank" rel="noreferrer">https://www.zhihu.com/question/433854153/answer/1618951221?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=56197411504128&amp;utm_content=group3_Answer&amp;utm_campaign=shareopn</a></p><p><a href="https://zhuanlan.zhihu.com/p/359734011" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/359734011</a></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2>',33),t=[l];function n(s,o,c,m,h,u){return p(),a("div",null,t)}const g=e(r,[["render",n]]);export{d as __pageData,g as default};
