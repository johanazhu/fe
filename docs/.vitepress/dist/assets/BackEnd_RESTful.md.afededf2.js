import{_ as l,c as e,o as i,d as a}from"./app.590c1fbf.js";const p=JSON.parse('{"title":"RESTful 是个啥东西","description":"","frontmatter":{},"headers":[{"level":2,"title":"一句话","slug":"一句话","link":"#一句话","children":[]},{"level":2,"title":"是什么","slug":"是什么","link":"#是什么","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"BackEnd/RESTful.md"}'),t={name:"BackEnd/RESTful.md"},r=a('<h1 id="restful-是个啥东西" tabindex="-1">RESTful 是个啥东西 <a class="header-anchor" href="#restful-是个啥东西" aria-hidden="true">#</a></h1><h2 id="一句话" tabindex="-1">一句话 <a class="header-anchor" href="#一句话" aria-hidden="true">#</a></h2><p>用 URL 定位资源，用 HTTP 描述操作</p><p>看 URL 就知道你要什么资源</p><p>看 HTTP method 就知道你要干什么</p><p>看 status code 就知道结果是什么</p><h2 id="是什么" tabindex="-1">是什么 <a class="header-anchor" href="#是什么" aria-hidden="true">#</a></h2><p>RESTful 架构风格最初由 Roy T. Fielding（HTTP/1.1 协议专家组负责人）在其 2000 年的博士学位论文中提出。</p><p>REST 即 Representational State Transfer 的缩写，可译为”表现层状态转化“</p><ul><li>Representational: 数据的表现形式（JSON、XML......）</li><li>State：当前状态或者数据</li><li>Transfer：数据传输</li></ul><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-hidden="true">#</a></h2><p>REST 最大的特点为：资源、统一接口、URI 和无状态</p><ul><li>资源 <ul><li>数据也好、服务也罢。都是资源</li><li>以 json 为载体展示</li></ul></li><li>统一接口 <ul><li>增删改查（CRUD）分别对应 HTTP 方法 <ul><li>GET 查询</li><li>POST 增加</li><li>PUT 更新（PATCH 也是更新，修改部分资源）</li><li>DELETE 删除</li></ul></li></ul></li><li>URI <ul><li>URI（统一资源定位符）指向资源，URI 就是一个资源的地址或标识符</li></ul></li><li>无状态 <ul><li>所有的资源，都可以通过 URI 定位，而且这个定位与其他资源无关</li><li>对每个资源的请求，都不依赖于其他资源或其他请求</li></ul></li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ul><li><a href="https://www.zhihu.com/question/28557115" target="_blank" rel="noreferrer">怎样用通俗的语言解释 REST，以及 RESTful？</a></li><li><a href="https://blog.igevin.info/posts/restful-architecture-in-general/" target="_blank" rel="noreferrer">RESTful 架构风格概述</a></li></ul>',15),n=[r];function s(d,h,u,o,c,T){return i(),e("div",null,n)}const _=l(t,[["render",s]]);export{p as __pageData,_ as default};
