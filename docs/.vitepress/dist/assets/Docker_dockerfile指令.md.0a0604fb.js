import{_ as s,c as n,o as a,d as l}from"./app.590c1fbf.js";const A=JSON.parse('{"title":"dockerfile","description":"","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"VOLUME","slug":"volume","link":"#volume","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"relativePath":"Docker/dockerfile指令.md"}'),e={name:"Docker/dockerfile指令.md"},p=l(`<h1 id="dockerfile" tabindex="-1">dockerfile <a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h2><p>一个简单的配置文件，描述如何构建一个新的 image 镜像</p><blockquote><p>PS：必须是 <code>Dockerfile</code> 这个文件名，必须在项目的根目录</p></blockquote><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h2><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">FROM node:14</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR /app</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY . /app</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 构建镜像时，一般用于做一些系统配置，安装必要的软件。可有多个 RUN</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN XXX</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN XXX</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN XXX</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 启动容器时，只能由一个 CMD</span></span>
<span class="line"><span style="color:#A6ACCD;">CMD XXX</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 环境变量</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV K1=V1</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV K2=V2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li><p><code>FROM</code>：基于什么</p></li><li><p><code>WORKDIR xx</code> ：进入工作目录</p></li><li><p><code>ADD . xx</code> ：复制文件至容器</p></li><li><p><code>RUN xx </code> ：构建镜像时的步骤</p></li><li><p><code>EXPOSE</code> ：暴露的端口</p></li><li><p><code>COPY</code> ：复制</p></li><li><p><code>VOLUME</code> 定义匿名数据卷</p></li></ul><blockquote><p><code>RUN</code> 是构建镜像（images），CMD 是容器（container）启动</p><p>RUN 是在 docker build</p><p>CMD 在 docker run 时运行</p></blockquote><p><code>CMD</code> 类似于 RUN 指令，用于运行程序，它最后的语法是要阻塞后台的命令</p><h2 id="volume" tabindex="-1">VOLUME <a class="header-anchor" href="#volume" aria-hidden="true">#</a></h2><p><code>VOLUME</code> ：数据卷</p><p>作用：</p><ul><li>避免重要的数据，因容器重启而丢失，这是非常致命的</li><li>避免容器不断变大</li></ul><p>可以理解为<strong>文件映射</strong></p><p>格式：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">VOLUME</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;路径1&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">路径2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点</p><p><img src="https://i.loli.net/2021/09/13/QiMyCPFlIEjaq7p.png" alt="数据卷"></p><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-hidden="true">#</a></h2><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"># base image</span></span>
<span class="line"><span style="color:#A6ACCD;">FROM johanbo/ubuntu_node:v1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 复制文件到容器</span></span>
<span class="line"><span style="color:#A6ACCD;">ADD . /var/www</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 进入工作目录</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR /var/www</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 安装项目依赖包</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN npm install --registry=https://registry.npm.taobao.org</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 暴露 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">EXPOSE 3010</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 开始命令</span></span>
<span class="line"><span style="color:#A6ACCD;">CMD [&quot;pm2&quot;, &quot;start&quot;, &quot;app.js&quot;, &quot;--no-daemon&quot;]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,20),o=[p];function r(c,i,t,d,b,u){return a(),n("div",null,o)}const D=s(e,[["render",r]]);export{A as __pageData,D as default};
