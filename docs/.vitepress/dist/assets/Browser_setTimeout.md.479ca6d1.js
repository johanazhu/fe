import{_ as e,c as t,o as a,d as i}from"./app.590c1fbf.js";const f=JSON.parse('{"title":"SetTimeout","description":"","frontmatter":{},"headers":[{"level":3,"title":"requestAnimationFrame 的工作机制","slug":"requestanimationframe-的工作机制","link":"#requestanimationframe-的工作机制","children":[]},{"level":3,"title":"requestAnimationFrame VS setTimeout","slug":"requestanimationframe-vs-settimeout","link":"#requestanimationframe-vs-settimeout","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"Browser/setTimeout.md"}'),r={name:"Browser/setTimeout.md"},s=i('<h1 id="settimeout" tabindex="-1">SetTimeout <a class="header-anchor" href="#settimeout" aria-hidden="true">#</a></h1><h4 id="_1-如果当前任务执行时间过久-会影响定时器任务的执行" tabindex="-1">1.如果当前任务执行时间过久，会影响定时器任务的执行 <a class="header-anchor" href="#_1-如果当前任务执行时间过久-会影响定时器任务的执行" aria-hidden="true">#</a></h4><h4 id="_2-如果-settimeout-存在嵌套调用-那么系统会设置最短时间间隔为-4-毫秒" tabindex="-1">2.如果 setTimeout 存在嵌套调用，那么系统会设置最短时间间隔为 4 毫秒 <a class="header-anchor" href="#_2-如果-settimeout-存在嵌套调用-那么系统会设置最短时间间隔为-4-毫秒" aria-hidden="true">#</a></h4><h3 id="requestanimationframe-的工作机制" tabindex="-1">requestAnimationFrame 的工作机制 <a class="header-anchor" href="#requestanimationframe-的工作机制" aria-hidden="true">#</a></h3><p>一般每 16.7ms 刷新一次</p><h3 id="requestanimationframe-vs-settimeout" tabindex="-1">requestAnimationFrame VS setTimeout <a class="header-anchor" href="#requestanimationframe-vs-settimeout" aria-hidden="true">#</a></h3><p>requestAnimationFrame 是由系统来决定回调函数的执行时机，而 setTimeout 要先放入消息队列中，当主线程上的任务执行完才会去执行 setTimeout 里的，如果主线程会执行时间慢了，即使定时任务中的时间到了，还是要延迟执行</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/ENU93_jSUaAONCkfTQTK-Q" target="_blank" rel="noreferrer">字节面试官问粉丝，如何实现准时的 setTimeout</a></li></ul>',9),n=[s];function o(m,u,d,h,l,c){return a(),t("div",null,n)}const T=e(r,[["render",o]]);export{f as __pageData,T as default};
