import{_ as e,c as o,o as n,d as a,a as s,b as l}from"./app.590c1fbf.js";const m=JSON.parse('{"title":"Git 常用命令","description":"","frontmatter":{},"headers":[{"level":2,"title":"统一概念","slug":"统一概念","link":"#统一概念","children":[]},{"level":2,"title":"常见命令","slug":"常见命令","link":"#常见命令","children":[]},{"level":2,"title":"不常见命令","slug":"不常见命令","link":"#不常见命令","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[{"level":3,"title":"git log 和 git reflog 的区别","slug":"git-log-和-git-reflog-的区别","link":"#git-log-和-git-reflog-的区别","children":[]}]},{"level":2,"title":"git alias配置","slug":"git-alias配置","link":"#git-alias配置","children":[]},{"level":2,"title":"常用问题","slug":"常用问题","link":"#常用问题","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"Git/常见命令.md"}'),p={name:"Git/常见命令.md"},t=a('<h1 id="git-常用命令" tabindex="-1">Git 常用命令 <a class="header-anchor" href="#git-常用命令" aria-hidden="true">#</a></h1><h2 id="统一概念" tabindex="-1">统一概念 <a class="header-anchor" href="#统一概念" aria-hidden="true">#</a></h2><ul><li>工作区（Workspace）：改动（增删文件和内容）</li><li>暂存区（Index/Stage）：输入命令：<code>git add 改动的文件名</code>，此次改动就放在了「暂存区」</li><li>本地仓库（Repository）：输入命令：<code>git commit 此次修改的描述</code>，此次改动就放到了「本地仓库」，每个commit，我叫它为一个「版本」</li><li>远程仓库（Remote）：输入命令：<code>git push 远程仓库</code></li><li>commit-id：输入命令：<code>git log</code>，最上面那行<code>commit xxxx</code>，后面的字符串就是 commit-id</li></ul><h2 id="常见命令" tabindex="-1">常见命令 <a class="header-anchor" href="#常见命令" aria-hidden="true">#</a></h2><ul><li><p><code>config</code>： git 配置</p><ul><li><code>git config --list</code>：列出所有 git 配置</li><li><code>git config &lt;key&gt;</code>：检查 Git 的某一项配置</li><li><code>git config --global user.name johan</code> 设置用户名</li><li><code>git config --global user.email xxx@github.com</code>：设置邮箱</li><li><code>git config user.name</code>：查看用户名</li><li><code>git config user.email</code>：查看邮箱</li></ul></li><li><p><code>add</code>：添加文件到暂存区</p><ul><li><code>git add xxx</code>：添加某个文件到暂存区</li><li><code>git add .</code>：添加当前更改的所有文件到暂存区</li></ul></li><li><p><code>status</code>：查看工作区状态</p><ul><li><code>git status</code>：查看工作区修改了哪些文件</li></ul></li><li><p><code>commit</code>：提交暂存的更改</p><ul><li><code>git commit</code>：提交暂存的更改，会打开编辑器</li><li><code>git commit -m &quot;you message&quot;</code>：提交暂存的更改，并记录下备注</li><li><code>git commit -am</code>：等同于 <code>git add . &amp;&amp; git commit -m</code></li><li><code>git commit --amend</code>：对最近一次的提交的信息进行修改</li><li><code>git commit --amend --no-edit</code>：将修改直接合并到上一次 commit，并且使用上次的提交信息</li><li><code>git commit -m xxx --no-verify</code>：跳过git提交钩子</li></ul></li><li><p><code>pull</code>：拉取远程分支并合并到本地</p><ul><li><code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>：从远程仓库拉去代码并合并到本地，可简写为 git pull ，等同于 git fetch &amp;&amp; git merge</li><li><code>git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>：使用 rebase 的模式进行合并</li><li><code>git pull origin master —allow-unrelated-histories</code>：合并两个不同的项目（本地一个，远端仓库一个）</li></ul></li><li><p><code>fetch</code>：拉取远程分支</p><ul><li><code>git fetch &lt;远程主机名&gt; &lt;分支名&gt;</code> ：获取远程仓库特定分支的更新</li><li><code>git fetch --all</code>：获取远程仓库所有分支的更新</li></ul></li><li><p><code>merge</code>：合并分支</p><ul><li><code>git merge &lt;branch-name&gt;</code>：合并某某分支</li></ul></li><li><p><code>branch</code>：分支</p><ul><li><code>git branch &lt;branch-name&gt;</code>：新建本地分支，但不切换</li><li><code>git branch</code>：查看本地（仓库）所有分支</li><li><code>git branch -r</code>：查看远程（仓库）所有分支</li><li><code>git branch -a</code>：查看远程、本地所有分支</li><li><code>git branch -D &lt;branch-name&gt;</code>：删除本地分支</li><li><code>git branch -m &lt;old-branch-name&gt; &lt;new-branch-name&gt;</code>：重命名分支名</li></ul></li><li><p><code>push</code>：推到远程分支</p><ul><li><code>git push origin dev -f</code>：强推到远程分支</li><li><code>git push origin raw --force</code>：强制提交本地分支覆盖远程分支</li></ul></li><li><p><code>remote</code>：远程仓库</p><ul><li><code>git remote</code>：查看远程仓库名称</li><li><code>git remote -v</code>：查看远程仓库地址</li><li><code>git remote add origin [url]</code>：添加远程仓库地址</li><li><code>git remote set-url origin [url]</code>：修改远程仓库地址</li><li><code>git remote rm origin</code>：删除远程分支 <ul><li>先删后加，先rm，在add</li></ul></li><li><code>git remote show origin</code>：查看远程分支和本地分支的对应关系</li><li><code>git remote show origin</code>：查看远程分支的详细内容</li></ul></li><li><p><code>git log</code>：查看所有线上的提交记录</p></li><li><p><code>git reflog</code>：查看所有分支的所有操作记录（包括已经被删除的 commit 记录和 reset 的操作）</p></li><li><p><code>git reset --hard xxx</code>：回溯到其中的一个版本</p><ul><li>与<code>git log</code>或<code>git reflog</code>配合，找到其中的一个commit</li><li>例子：<code>git reset --hard e32e81</code></li></ul></li><li><p><code>git cherry-pick 分支名</code>：挑捡提交，合并某一分支上的单个commit</p></li><li><p><code>git tag</code>：查看标签</p><ul><li><code>git tag v1.0.0 commit名</code>：给某个 commit 打 tag</li><li><code>git push origin v1.0.0</code>：本地 tag 推送到线上</li><li><code>git tag -d v1.0.0</code>：删除本地 tag</li><li><code>gitxxx :删除线上tag</code></li></ul></li><li><p><code>git checkout XXX</code></p><ul><li><code>git checkout .</code>：丢弃工作区所有的修改</li><li><code>git checkout README.md</code>：丢弃工作区其中一个文件的修改 <ul><li>与 <code>git status</code> 配合， <code>git status</code> 查看工作区的修改，如果有个文件不想动了，就 checkout 它，自然就还原了</li></ul></li></ul></li></ul><h2 id="不常见命令" tabindex="-1">不常见命令 <a class="header-anchor" href="#不常见命令" aria-hidden="true">#</a></h2>',6),c=s("ul",null,[s("li",null,[s("p",null,[s("code",null,"gitk"),l("：打开git的图形化工具")])]),s("li",null,[s("p",null,[s("code",null,"gitjk"),l("：撤消您刚刚在git中所做的操作")])]),s("li",null,[s("p",null,[s("code",null,"git help -g"),l("：展示帮助信息")])]),s("li",null,[s("p",null,[s("code",null,"git fetch --all && git reset --hard origin/master"),l("：回到远程仓库的状态")]),s("ul",null,[s("li",null,"抛弃本地所有的修改，回到远程仓库的状态")])]),s("li",null,[s("p",null,[s("code",null,"cat .git/HEAD"),l("：查看分支文件")])]),s("li",null,[s("p",null,[s("code",null,"git stash"),l("：把本地修改暂存到暂存区")]),s("ul",null,[s("li",null,[s("code",null,'git stash save "message"'),l(" ：执行存储时，添加备注，方便查找")]),s("li",null,[s("code",null,"git stash pop"),l("：推出暂存区，并删除暂存记录")]),s("li",{$num:""},[s("code",null,"git stash apply"),l("：恢复最近的存储，但不会把存储从存储列表中删除，某人使用第一个存储，即 stash@{0}，如果要使用其他各，git stash apply stash@")]),s("li",null,[s("code",null,"git stash list"),l("：查看 stash 了哪些存储")]),s("li",null,[s("code",null,"git stash clear"),l("：删除所有缓存的 stash")]),s("li",null,[s("code",null,"git ls-files --stage"),l("：查看 index 暂存区")])])])],-1),i=a(`<h2 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-hidden="true">#</a></h2><h3 id="git-log-和-git-reflog-的区别" tabindex="-1">git log 和 git reflog 的区别 <a class="header-anchor" href="#git-log-和-git-reflog-的区别" aria-hidden="true">#</a></h3><p>git log：查看所有线上的提交记录</p><p>git reflog：查看所有提交的 commit 历史</p><h2 id="git-alias配置" tabindex="-1">git alias配置 <a class="header-anchor" href="#git-alias配置" aria-hidden="true">#</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight has-diff" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">alias</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">st</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sb</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">co</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">br</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">mg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ci</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ds</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">diff</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--staged</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">dt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">difftool</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">mt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mergetool</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">last</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for-each-ref</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--sort=-committerdate</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--format=</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">%</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">committername</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">@%</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">refname:short</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">%(committerdate:short)</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> %</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">contents</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">\\&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ls</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--pretty=format:</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">%C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">yellow</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">%h</span><span style="color:#A6ACCD;"> %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">blue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%ad %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">red</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%d %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">reset</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%s %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">green</span><span style="color:#89DDFF;">)[</span><span style="color:#A6ACCD;">%cn</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">\\&quot; </span><span style="color:#C3E88D;">--decorate</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--date=short</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">hist</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--pretty=format:</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">%C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">yellow</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">%h</span><span style="color:#A6ACCD;"> %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">red</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%d %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">reset</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%s %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">green</span><span style="color:#89DDFF;">)[</span><span style="color:#A6ACCD;">%an</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> %C</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">blue</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">%ad\\&quot; </span><span style="color:#C3E88D;">--topo-order</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--graph</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--date=short</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">dump</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cat-file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">lg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--color</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--graph</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--pretty=format:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--abbrev-commit</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="常用问题" tabindex="-1">常用问题 <a class="header-anchor" href="#常用问题" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>报错：fatal: Not possible to fast-forward, aborting.</p><p>原因是你和其他人修改了同一个文件，而且别人比你先提交，所以此时你再本地执行 git pull 和 git push 都无法完成</p><p>一般用：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rebase</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>一般情况下，执行完这个，如果没有冲突，后面就可以进行正常的更新和提交</p><p>但是如果出错（你和别人修改了同一行代码，导致git不能自动合并），就会报错，本地版本会变成：HEAD detached at 239b7d4。说明 rebase 失败</p><p><img src="https://s2.loli.net/2022/08/29/VpSO2gPBAMTaKbh.png" alt="git rebase 失败"></p><p>此时，按照黄色字的提示，手动解决冲突文件，并<code>git add </code> 暂存文件，再继续 rebase<code>git rebase --continue</code> ，如果没问题，会回到原先的分支并拉到最新的数据</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ul><li><a href="https://missing-semester-cn.github.io/2020/version-control/" target="_blank" rel="noreferrer">版本控制(Git)</a></li><li><a href="https://github.com/521xueweihan/git-tips" target="_blank" rel="noreferrer">Git 的奇技淫巧</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzA4ODUzNTE2Nw==&amp;mid=2451046316&amp;idx=1&amp;sn=8034a23e3367d14ba02565d0dd2c5634&amp;chksm=87cbe6bcb0bc6faa8e7c3dab7604392dd4fe7ce3af125a2a695ea15c3a1caefd08cd374f0133&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567210777793&amp;sharer_shareid=778ad5bf3b27e0078eb105d7277263f6#rd" target="_blank" rel="noreferrer">珍藏多年的 Git 问题和操作清单</a></li><li><a href="https://dev.to/domagojvidovic/11-git-commands-i-use-every-day-43eo" target="_blank" rel="noreferrer">11 Git Commands I Use Every Day</a></li></ul>`,18),r=[t,c,i];function d(C,y,g,D,A,u){return n(),o("div",null,r)}const F=e(p,[["render",d]]);export{m as __pageData,F as default};
