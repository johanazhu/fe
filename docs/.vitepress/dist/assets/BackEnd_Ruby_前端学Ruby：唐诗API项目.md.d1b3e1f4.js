import{_ as n,c as l,o as e,d as a,a as s}from"./app.590c1fbf.js";const m=JSON.parse('{"title":"前端学 Ruby：唐诗API项目","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"正文","slug":"正文","link":"#正文","children":[]},{"level":2,"title":"建立数据库","slug":"建立数据库","link":"#建立数据库","children":[]},{"level":2,"title":"实现第一个接口","slug":"实现第一个接口","link":"#实现第一个接口","children":[]},{"level":2,"title":"其余API","slug":"其余api","link":"#其余api","children":[]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"初试 tangpoetry 镜像","slug":"初试-tangpoetry-镜像","link":"#初试-tangpoetry-镜像","children":[]},{"level":3,"title":"重新编译 tangpoetry 镜像","slug":"重新编译-tangpoetry-镜像","link":"#重新编译-tangpoetry-镜像","children":[]},{"level":3,"title":"线上部署","slug":"线上部署","link":"#线上部署","children":[]}]},{"level":2,"title":"后续","slug":"后续","link":"#后续","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"relativePath":"BackEnd/Ruby/前端学Ruby：唐诗API项目.md"}'),p={name:"BackEnd/Ruby/前端学Ruby：唐诗API项目.md"},o=a(`<h1 id="前端学-ruby-唐诗api项目" tabindex="-1">前端学 Ruby：唐诗API项目 <a class="header-anchor" href="#前端学-ruby-唐诗api项目" aria-hidden="true">#</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p>我想了半天，该做什么项目，基于笔者的数据库知识羸弱，怕一方面做前端一方面做后端会搞得四不像，又累时间又长。所以就想以做纯 API 为目的，只做接口会不会更快一些呢</p><h2 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文" aria-hidden="true">#</a></h2><p>笔者打算做一个全唐诗的 API 项目，此项目只为学习 ruby on rails web 开发并部署至服务器，会逐步从零开始到部署上线，部署手段会有些原始，不过没事，下个项目笔者会升级部署手段</p><p>先新建一个 API 项目</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--database=postgresql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--skip-test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>意思是新建一个唐诗的 API 项目，数据库为 postgresql，跳过测试</p></blockquote><p>新建后进入项目，并更新 gem 下载源</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">bundle config mirror</span><span style="color:#89DDFF;">.https:</span><span style="color:#89DDFF;">//</span><span style="color:#A6ACCD;">rubygems</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">org </span><span style="color:#89DDFF;">https:</span><span style="color:#89DDFF;">//</span><span style="color:#A6ACCD;">gems</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ruby</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">china</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>重新下载依赖</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">bundle</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># verbose：打印下载依赖过程</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再去 <code>config/database.yml</code> 中修改开发环境时的数据库</p><div class="language-yml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">development</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;&lt;:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">*</span><span style="color:#A6ACCD;">default</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">database</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_dev</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123456</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">localhost</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在此之前，需要在 pgAdmin4（postgresql图形界面） 中创建 database、username、password 等，这里不做赘述</p><p>我们在本地启动服务</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">s</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如此， rails 应用就启动了</p><p><img src="https://s2.loli.net/2022/12/27/uFNbqIgzw8PEtL5.png" alt="ruby on rails运行成功"></p><h2 id="建立数据库" tabindex="-1">建立数据库 <a class="header-anchor" href="#建立数据库" aria-hidden="true">#</a></h2><p>笔者要做的是全唐诗的 API 接口，要有什么功能先不说，起码不会自己做数据，在网上找了一个 <a href="https://github.com/hxgdzyuyi/tang_poetry" target="_blank" rel="noreferrer">唐诗的数据库</a>，先导入 mysql 中，能看到它有两个表</p><p><img src="https://s2.loli.net/2023/01/16/l19RqDhF8cwgQvX.png" alt="数据库"></p><p>我们先根据表中的字段创建俩模型（Model）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">model</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poet_id:integer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">content:text</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">title:string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">model</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">name:string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>PS：模型（Model）需要是单数。id、created_at、updated_at 会自己创建</p></blockquote><p>此时，就有个问题了，这个项目的 sql 是以 mysql 为语法而写的，怎么将它转换为 postgresql 呢？</p><p>先不要管这个问题，来设计一下要做的 API</p><ul><li>随机获取一首诗：/poetry/random</li><li>用诗的题目查询：/poetry/title/静夜思</li><li>列出这个诗人的所有诗：/poetry/author/李白</li><li>列出这个诗人的这首诗：/poetry/author/张若虚/title/春江花月夜</li><li>通过创作数量排名：/poet/list/createnum</li></ul><p>确定好要做的 API 后，我们就去实现，先在命令行中执行以下代码来创建控制器（Controller）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">controller</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">random</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># rails g controller 名字  动作</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>会生成这样的文件：</p><p><img src="https://s2.loli.net/2023/01/16/17eiTHRn9tdc6X5.png" alt="生成的controller"></p><p>以上命令的意思是说在创建一个名为 poetry 的类，它的方法为 random。rails 会帮你创建好类和方法以及在路由处创建一个 <code>poetry/random</code> 的路由</p><p>修改 <code>poetry_controller.rb</code> 中的内容：</p><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PoetryController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ApplicationController</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">random</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">resource:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello, world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>而后访问 <code>http://127.0.0.1:3000/poetry/random</code> ，就能看到 json 格式的返回值了</p><blockquote><p>访问 url，应用匹配 route，routes 匹配 controller，controller 操作 model，并返回对应的数据给路由</p></blockquote><p>现在我们要回到最开始的疑问，怎么把全唐诗中的sql转化为 postgresql？</p><p>笔者经过一些尝试，发现可以转换，数据是有的，数据结构也一致，无非原本是用 mysql 写的，现在将其改成 postgresql。而现在我们已经有数据库的两张表了，只要插入数据即可，用 pgAdmin 也好，用其他工具也罢，用 postgresql 语法把数据插入数据库中</p><div class="language-postgresql line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">postgresql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">INSERT INTO poets (id,name,created_at,updated_at) VALUES (1,&#39;李世民&#39;,&#39;2014-06-02 11:47:52&#39;,&#39;2014-06-02 11:47:52&#39;),(...)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">INSERT INTO poetries (id,poet_id,content,title, created_at, updated_at) VALUES (2,1,&#39;塞外悲风切，交河冰已结。瀚海百重波，阴山千里雪。迥戍危烽火，层峦引高节。悠悠卷旆旌，饮马出长城。寒沙连骑迹，朔吹断边声。胡尘清玉塞，羌笛韵金钲。绝漠干戈戢，车徒振原隰。都尉反龙堆，将军旋马邑。扬麾氛雾静，纪石功名立。荒裔一戎衣，灵台凯歌入。&#39;,&#39;饮马长城窟行&#39;,&#39;2014-06-02 11:47:52&#39;,&#39;2014-06-02 11:47:52&#39;),(...)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="实现第一个接口" tabindex="-1">实现第一个接口 <a class="header-anchor" href="#实现第一个接口" aria-hidden="true">#</a></h2><p>这个时候，数据库中已有全唐诗的数据，我们现在要做第一个接口，即获取一首随机诗</p><p>首先是获取随机数，其次是根据这个 id 找到这一项</p><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">random</span></span>
<span class="line"><span style="color:#A6ACCD;">    random </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">rand</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">...</span><span style="color:#F78C6C;">43030</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">resource:</span><span style="color:#A6ACCD;"> random</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="https://s2.loli.net/2023/01/17/LYJQEMFcbOVjXsP.png" alt="获取一首随机诗接口"></p><p>ruby on rails 就是这么简单，这样就完成了 random 接口</p><h2 id="其余api" tabindex="-1">其余API <a class="header-anchor" href="#其余api" aria-hidden="true">#</a></h2><p>除了 random 接口，我们还有四个接口，做好后再部署唐诗 API 项目就完成了，可谓是半小时完成一项目</p><ul><li>用诗的题目查询：/poetry/title/静夜思</li><li>列出这个诗人的所有诗：/poetry/author/李白</li><li>列出这个诗人的这首诗：/poetry/author/张若虚/title/春江花月夜</li><li>通过创作数量排名：/poet/list/createnum</li></ul><p>前三者都是在 poetry 路由下的访问，我们先新建 routes</p><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">get </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry/random</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">get </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry/title/:title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">to:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry#title</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">get </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry/author/:author</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">to:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry#author</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">get </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry/author/:author/title/:title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">to:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">poetry#author_title</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>意思是访问 <code>poetry/title/:title</code> 路由，就是去 <code>poetry_controller</code> 中找 title 方法，并且有个 title 变量（其余两者相同道理）。再去 <code>poetry_controller</code> 文件，新建<code>title</code>、<code>author</code>、<code>author_title</code> 方法</p><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PoetryController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ApplicationController</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">random</span></span>
<span class="line"><span style="color:#A6ACCD;">    random </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">rand</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">...</span><span style="color:#F78C6C;">43030</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">data:</span><span style="color:#A6ACCD;"> random </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># /poetry/title/静夜思</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">title</span></span>
<span class="line"><span style="color:#A6ACCD;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find_by</span><span style="color:#89DDFF;">(title:</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">[:title])</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">data:</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># /poetry/author/李白</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">author</span></span>
<span class="line"><span style="color:#A6ACCD;">    author </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find_by</span><span style="color:#89DDFF;">(name:</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">[:author])</span></span>
<span class="line"><span style="color:#A6ACCD;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">where</span><span style="color:#89DDFF;">({poet_id:</span><span style="color:#A6ACCD;">  author</span><span style="color:#89DDFF;">[:id]})</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">data:</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># /poetry/author/张若虚/title/春江花月夜</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">author_title</span></span>
<span class="line"><span style="color:#A6ACCD;">    author </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find_by</span><span style="color:#89DDFF;">(name:</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">[:author])</span></span>
<span class="line"><span style="color:#A6ACCD;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">where</span><span style="color:#89DDFF;">({poet_id:</span><span style="color:#A6ACCD;">  author</span><span style="color:#89DDFF;">[:id],</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">title:</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">[:title]})</span></span>
<span class="line"><span style="color:#A6ACCD;">    render </span><span style="color:#89DDFF;">json:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">data:</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>又搞定了三个接口，你就说快不快</p><p>其中，对 ORM 有所不了解，笔者是在 <a href="https://ruby-china.github.io/rails-guides/active_record_querying.html" target="_blank" rel="noreferrer">RailsGuides</a> 查询</p><div class="language-ruby line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Poet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">find_by</span><span style="color:#89DDFF;">(name:</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">[:title])</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 只能找满足条件的第一条</span></span>
<span class="line"><span style="color:#FFCB6B;">Poetry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">where</span><span style="color:#89DDFF;">({poet_id:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">[:id]})</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># where 条件查询</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 找到满足条件的所有项</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>接着偶们做最后一个接口，即通过创作数量排名：/poet/list/createnum</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">controller</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者不用命令行，直接在 <code>routes.rb</code> 上修改，并新建 <code>poet_controller.rb</code> 文件进行更新</p><p>——————————————</p><p>淦，卡住了</p><p>笔者这里搜到一个相关的<a href="https://stackoverflow.com/questions/17877725/ordering-records-by-number-of-occurrences-in-the-database" target="_blank" rel="noreferrer">教程</a>，奈何 sql 基础太差，还是不会弄。这个接口就不做了</p><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-hidden="true">#</a></h2><p>本地开发结束了，现部署上线</p><p>不少教程里说使用 <a href="https://www.heroku.com/" target="_blank" rel="noreferrer">Heroku</a> 能快速部署，但是我注册不了，只能曲线救国</p><p>笔者先说说部署的思路：</p><p>先使用本地 docker 部署服务，本地跑通后，再上传源码，通过 Dockerfile 构建运行环境，在运行环境中运行源代码</p><h3 id="初试-tangpoetry-镜像" tabindex="-1">初试 tangpoetry 镜像 <a class="header-anchor" href="#初试-tangpoetry-镜像" aria-hidden="true">#</a></h3><p>我们先构建 Dockerfile，下面命令很好理解，就不过都解释</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">FROM ruby:3.1.3</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR /app</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY . .</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN bundle config mirror.https://rubygems.org https://gems.ruby-china.com</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ENV RAILS_ENV=production</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN bundle config set --local without &#39;development test&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN bundle install</span></span>
<span class="line"><span style="color:#A6ACCD;">ENTRYPOINT bundle exec puma</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>然后将它打包成镜像</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://s2.loli.net/2023/02/03/lweoaquM95Q7zHF.png" alt="tangpoetry镜像"></p><p>基于 tangpoetry 镜像，生成容器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -d 后台启动容器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --name 容器名</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -p 端口映射</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://s2.loli.net/2023/02/03/3Xj7CQyd5Ylact8.png" alt="tangpoetry 容器"></p><p>我们访问（<code>http://localhost:3000</code>）首页，是能看到 Hi 的</p>`,78),t=s("blockquote",{"message:":"",Hi:""},[s("p",null,"为了测试方便，我们新建一个根路由，返回一个 json：")],-1),r=a(`<p>但是如果访问所写的任意接口，都会访问不了，原因很简单，因为 production 环境下的数据库未配置，所以我们需要再建一个容器，并将唐诗数据导入到此容器中，再通过 docker network 连接两个容器</p><p>也就是说我们的服务由两个容器组成（后续可以的话可以通过 docker-compose 改造）</p><p>现在本地环境用的数据库是本地下载了 postgreSQL，所以我们需要用 docker 启动 postgresSQL 镜像数据库</p><p>创建基于 postgres 的容器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db-for-tangpoetry</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_USER=tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_PASSWORD=</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_DB=tangpoetry_production</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PGDATA=/var/lib/postgresql/data/pgdata</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry-data:/var/lib/postgresql/data</span><span style="color:#A6ACCD;">      </span><span style="color:#C3E88D;">--network=network1</span><span style="color:#A6ACCD;">      </span><span style="color:#C3E88D;">postgres:</span><span style="color:#F78C6C;">14</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -d 后台运行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --name 容器名字叫 db-for-tangpoetry</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -e 环境命令</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -v 数据卷</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --network 使用网络</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>这里的数据卷和网络都要事先建好</p><p><code>docker volume create tangpoetry-data</code>：创建 tangpoetry-data 数据卷</p><p><code>docker volume ls</code> 可查看数据卷列表</p><p><code>docker network create network1</code> 创建 network1 网络</p><p><code>docker network ls</code> 可查看网络列表</p></blockquote><p>进入（postgresSQL）数据库容器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db-for-tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>连接 tangpoetry_production 数据库</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">psql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-h</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">localhost</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5432</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-U</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_production</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令 <code>\\l</code> 查看数据库中的表</p><p><img src="https://s2.loli.net/2023/02/08/oKTACQ3WHpkqZBg.png" alt="image-20230205141917349"></p><p>说明我们的数据库创建成功，现在我们需要导出本地数据库，并导入到 docker 镜像数据库中</p><p>先将本地的数据库导出</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pg_dump</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-U</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_dev</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry.sql</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># pg_dump 导出数据</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -U 用户名</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -d 数据库</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>再导入到<code>db-for-tangpoetry</code> 容器中</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db-for-tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pg_restore</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-U</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_production</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry.sql</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># pg_restore 导入数据</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>笔者输入后显示的如下：</p><p><img src="https://s2.loli.net/2023/02/08/dkqPbxYXQMBl2rW.png" alt="导入数据库后的效果"></p><h3 id="重新编译-tangpoetry-镜像" tabindex="-1">重新编译 tangpoetry 镜像 <a class="header-anchor" href="#重新编译-tangpoetry-镜像" aria-hidden="true">#</a></h3><p>我们需要将 tangpoetry 的源码在修改下，配置 <code>config/database.yml</code> 中的 production：</p><div class="language-yml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F07178;">production</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;&lt;:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">*</span><span style="color:#A6ACCD;">default</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">database</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_production</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&lt;%= ENV[&quot;DB_PASSWORD&quot;] %&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&lt;%= ENV[&quot;DB_HOST&quot;] %&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>再重新打包（再此之前先删除原来的容器和镜像）</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">docker build -t tangpoetry .</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>基于 tangpoetry 镜像打包 tangpoetry 容器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_HOST=db-for-tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_PASSWORD=</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network=network1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在容器中创建数据库，并 migrate</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bin/rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db:create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db:migrate</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样再访问 3000 端口时，我们就能看到数据了</p><h3 id="线上部署" tabindex="-1">线上部署 <a class="header-anchor" href="#线上部署" aria-hidden="true">#</a></h3><p>以上我们已经测试成功了本地 docker 部署，先将它推到远程 git 仓库，后续我们会登录服务器，并 git pull 它，然后构建 tangpoetry 镜像，由此创建 tangpoetry_container 容器</p><p>这里遇到的坑让我白了四根头发，第三个问题困扰了我两天并白了两根为数不多的头发</p><h4 id="问题一-ruby-china-443-证书过期" tabindex="-1">问题一：ruby-china 443 证书过期 <a class="header-anchor" href="#问题一-ruby-china-443-证书过期" aria-hidden="true">#</a></h4><p>bundle install 时，gems 源会 443，提示类似这样：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Retrying</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">download</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gem</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://gems.ruby-china.com/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">due</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">/</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">: </span><span style="color:#C3E88D;">Gem::RemoteFetcher::FetchError</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Net::OpenTimeout:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Failed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">open</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TCP</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">connection</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gems.ruby-china.com:</span><span style="color:#F78C6C;">443</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">execution</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">expired</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">https://gems.ruby-china.com/gems/racc-1.6.2.gem</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>换成阿里源、清华源都不行，笔者第一次部署时「使用不换源」来解决，等了好久才下载好，后来看到<a href="https://www.thegnar.com/blog/caching-all-native-gem-platforms" target="_blank" rel="noreferrer">这篇文章</a>，先将本地的依赖下载好成缓存，再 bundle 时就从本地拿就好</p><p>简单来说就两步：</p><p>先在项目根目录下执行以下命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">bundle</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cache</span></span>
<span class="line"><span style="color:#FFCB6B;">bundle</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lock</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--add-platform</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">x86_64-linux</span></span>
<span class="line"><span style="color:#FFCB6B;">bundle</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--all-platforms</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://s2.loli.net/2023/02/08/bMKja4hRSrfgWlD.png" alt="bundle cache"></p><p><img src="https://s2.loli.net/2023/02/08/KAeW3cBEFgqPOY8.png" alt="bundle lock"></p><p><img src="https://s2.loli.net/2023/02/08/IUa3AnOe72VdHuw.png" alt="bundle package"></p><p>（以上皆为部分截图）</p><p>再修改 Dockerfile</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;"># 添加缓存到app中，这里其实是做了 docker 打包的优化，不做过多介绍</span></span>
<span class="line"><span style="color:#A6ACCD;">ADD vendor/cache /app/vendor/cache</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;"># 通过本地下载依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN bundle install --local</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>当我们很快打包后 tangpoetry 镜像后，我们就以它为依据来构建服务，这里我们复制本地部署时的代码<code>docker run -d --name tangpoetry_container -p 3000:3000 -e DB_HOST=db-for-tangpoetry -e DB_PASSWORD=123456 --network=network1 tangpoetry</code>，先做测试</p><p>此时，我们的服务器上的 postgres 容器还没创建，我们先把 ruby on rails 服务部署成功了，再连接数据库</p><h4 id="问题二-secret-key-base-的报错" tabindex="-1">问题二：secret_key_base 的报错 <a class="header-anchor" href="#问题二-secret-key-base-的报错" aria-hidden="true">#</a></h4><p>但访问服务器ip+端口，发现访问不了</p><p>通过 <code>docker logs tangpoetry_container</code> 查看报错日志</p><p><img src="https://s2.loli.net/2023/02/09/cxwGIauv7UT6YRW.png" alt="docker logs tangpoetry_container 报错"></p><p>说 production 环境下的 secret_key_base 不存在</p><p>淦，又有个知识点</p><p>什么是secret_key_base？为什么需要这个？为什么本地部署时没出现这个？</p><p>Rails 在项目初始化的时候就会在根目录<code>config</code> 下生成 <code>master.key</code> 和 <code>credentials.yml.enc</code> 两个文件，前者可以理解为核心密钥，后者是通过 Rails 自带的加密方法生成的加密后的数据文件</p><p>关系为：</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">master.key + keys =&gt; encrypted</span></span>
<span class="line"><span style="color:#A6ACCD;">encrypted + master.key =&gt; keys</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>keys 是什么，你需要加密的数据，例如 secret_key_base</p><p>我们在临时文件中的写入我们的 keys，保存关闭后会生成一个新的 <code>master.key</code> 和 <code>credentials.yml.enc</code> ，并且临时文件会自动删除，把<code>.enc</code> 存在 git 中，<code>master.key</code> 排除在 git 外，这样，别人即使拿到源码，拿不到你的 keys（缺少 <code>master.key</code> 解不了）</p><p>如何读取 keys 呢？</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在命令行中输入 rails c 或者 rails console</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输入代码</span></span>
<span class="line"><span style="color:#FFCB6B;">Rails.application.credentials.config</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 查看所有的 keys</span></span>
<span class="line"><span style="color:#FFCB6B;">Rails.application.credentials.secret_key_base</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#查到 secret_key_base </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://s2.loli.net/2023/02/09/wAhHJqU5NLaiOrM.png" alt="查看 credentials"></p><p>如何修改 keys 呢？</p><p>笔者使用的是 window，使用 window 自带的 PowerShell，它能临时写进参数</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$env:EDITOR</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code --wait</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">credentials:edit</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://s2.loli.net/2023/02/23/aFuOhvIWEZ4RMzD.png" alt="编写credentials"></p><p>此时会生成一个临时文件，我们将 <code>demo:12345</code> 修改为 <code>demo:123456</code>，保存并删除临时文件，会发现文件 <code>credentials.yml.enc</code> 发生了变化</p><p>也就是说 <code>master.key + keys</code> 会生成一个新的<code>credentials.yml.enc</code></p><p>同理，我们不能在本地和生成使用一套 keys，Rails 支持多环境密钥</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">$env:EDITOR</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code --wait</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">credentials:edit</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--environment</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">production</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>会得到两个文件：</p><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">config/credentials/production.key （被加入 .gitignore）</span></span>
<span class="line"><span style="color:#A6ACCD;">config/credentials/production.yml.enc</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们只需要把 <code>production.key</code> 写进服务器环境变量中，就能解决问题二的问题了</p><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">env:RAILS_ENV</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">rails c</span></span>
<span class="line"><span style="color:#A6ACCD;">Rails.application.credentials.secret_key_base</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://s2.loli.net/2023/02/09/CHghpamYekbI1Ls.png" alt="查看production下的密钥"></p><p>最佳实践是什么？</p><ul><li>先删除 <code>master.key</code> 和 <code>credentials.yml.enc</code>，通过<code>rails credentials:edit</code>生成一个新的 key 和 enc，复制临时文件中的 <code>secret_key_base</code></li><li>再 <code>rails credentials:edit --environment production</code> 生成生产环境的临时文件，粘贴上一步的 <code>secret_key_base</code></li><li>再删除 <code>master.key</code> 和 <code>credentials.yml.enc</code>，再生成一个新的 key 和 enc</li></ul><p><img src="https://s2.loli.net/2023/02/09/Wt2sA5j9J4okRI3.png" alt="最佳实践"></p><p>如此，再服务器上将RAILS_MASTER_KEY 写进环境变量中，</p><p><code>vim ~/.bash_profile</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_HOST=db-for-tangpoetry</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_PASSWORD=</span><span style="color:#F78C6C;">123456</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RAILS_MASTER_KEY=f78c0868148ca3b1aa64ee9e82c66ef4</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>执行 <code>source ~/.bash_profile</code> 立即生效</p><p>再次启动容器，此时将 DB_HOST 等用变量形式写入</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_HOST=</span><span style="color:#A6ACCD;">$DB_HOST </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DB_PASSWORD=</span><span style="color:#A6ACCD;">$DB_PASSWORD </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RAILS_MASTER_KEY=</span><span style="color:#A6ACCD;">$RAILS_MASTER_KEY </span><span style="color:#C3E88D;">tangpoetry</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="问题三-应用容器连接不上数据库容器" tabindex="-1">问题三：应用容器连接不上数据库容器 <a class="header-anchor" href="#问题三-应用容器连接不上数据库容器" aria-hidden="true">#</a></h4><p>在此之前，我们已经能在服务器ip+端口上能访问到首页，但是此时我们还没启动数据库，所以还访问不到数据库</p><p>我们先启动数据库容器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> $DB_HOST </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5432</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">5432</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_USER=tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_PASSWORD=</span><span style="color:#A6ACCD;">$DB_PASSWORD  </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POSTGRES_DB=tangpoetry_production</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PGDATA=/var/lib/postgresql/data/pgdata</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry-data:/var/lib/postgresql/data</span><span style="color:#A6ACCD;">      </span><span style="color:#C3E88D;">postgres:</span><span style="color:#F78C6C;">14</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>并导入数据</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db-for-tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pg_restore</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-U</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_production</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry.sql</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>回到应用容器，进入容器中，初始化数据库</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 进入唐诗容器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 进入容器后</span></span>
<span class="line"><span style="color:#FFCB6B;">rails</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db:create</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>发现访问不了</p><p><img src="https://s2.loli.net/2023/02/09/HF1bxVNZAcOEy49.png" alt="rails db:create"></p><p>也就是说容器之间的访问成了问题</p><p>笔者找了很多资料，找了两天还是没有解决问题，也在 <a href="https://ruby-china.org/topics/42860" target="_blank" rel="noreferrer">ruby china</a> 上提问，终于在在<a href="https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach" target="_blank" rel="noreferrer">这篇问答</a>中找到了灵感，我升级了 docker 版本，从 19 升级到了 23，就解决了</p><p><img src="https://s2.loli.net/2023/02/09/wVQWyn5lIzmboMH.png" alt="rails db:create成功"></p><p>以上的命令用以下命令就能实现</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tangpoetry_container</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db:create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db:migrate</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如此，我们的项目就算成功上线了</p><h2 id="后续" tabindex="-1">后续 <a class="header-anchor" href="#后续" aria-hidden="true">#</a></h2><p>如果，我是说如果，我们希望加上随机一页的效果，或者说每天更新一首诗，本地开发，成功，推到 git 仓库，并在服务器上删除原有镜像，生成新镜像，再根据新镜像打包</p><p>要是项目迭代频繁，会不会觉得，好麻烦</p><p>这样麻烦，我都不想搞了~~</p><p>下个项目，我们用 shell 命令部署服务器，重复的工作交给代码执行就好</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-hidden="true">#</a></h2><ul><li><a href="https://ruby-china.github.io/rails-guides/active_record_basics.html" target="_blank" rel="noreferrer">Active Record 基础</a></li><li><a href="https://xiedaimala.com/courses/89c07499-0174-40e3-81ce-a9eca822de40/random/bc627d6f7b?#/common" target="_blank" rel="noreferrer">山竹记账全栈版Vue 3 + Rails 7+TSX</a></li><li><a href="https://www.bilibili.com/video/BV1AZ4y1r7eU" target="_blank" rel="noreferrer">山竹记账免费版</a></li><li><a href="https://stackoverflow.com/questions/57402435/how-to-run-rails-credentialsedit-on-windows-10-without-installing-a-linux-sub" target="_blank" rel="noreferrer">How to run &#39;rails credentials:edit&#39; on Windows 10 without installing a Linux Subsystem</a></li><li><a href="https://unix.stackexchange.com/questions/566456/why-cant-i-connect-to-postgres-in-docker" target="_blank" rel="noreferrer">Why can&#39;t I connect to Postgres in Docker?</a></li><li><a href="https://stackoverflow.com/questions/11183355/postgresql9-1-suddenly-could-not-connect-to-server-no-route-to-host" target="_blank" rel="noreferrer">Postgresql9.1 suddenly could not connect to server: No route to host</a></li><li><a href="https://railsnotes.org/28-capistrano-argumenterror-missing-secret-key-base-for-production-environment-set-this-string-with-bin-rails-credentials-edit" target="_blank" rel="noreferrer">Capistrano: ArgumentError: Missing <code>secret_key_base</code> for &#39;production&#39; environment, set this string with <code>bin/rails credentials:edit</code></a></li><li><a href="https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host" target="_blank" rel="noreferrer">How to get a Docker container&#39;s IP address from the host</a></li><li><a href="https://www.knowbe4.com/careers/engineering/railspostgresqldocker" target="_blank" rel="noreferrer">Rails + PostgreSQL + Docker</a></li><li><a href="https://www.thegnar.com/blog/caching-all-native-gem-platforms" target="_blank" rel="noreferrer">caching-all-native-gem-platforms</a></li></ul>`,107),c=[o,t,r];function i(y,C,d,D,A,b){return e(),l("div",null,c)}const h=n(p,[["render",i]]);export{m as __pageData,h as default};
